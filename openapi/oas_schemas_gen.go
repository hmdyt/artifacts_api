// Code generated by ogen, DO NOT EDIT.

package openapi

import (
	"time"

	"github.com/go-faster/errors"
	"github.com/go-faster/jx"
)

// ActionAcceptNewTaskMyNameActionTaskNewPostCode486 is response for ActionAcceptNewTaskMyNameActionTaskNewPost operation.
type ActionAcceptNewTaskMyNameActionTaskNewPostCode486 struct{}

func (*ActionAcceptNewTaskMyNameActionTaskNewPostCode486) actionAcceptNewTaskMyNameActionTaskNewPostRes() {
}

// ActionAcceptNewTaskMyNameActionTaskNewPostCode489 is response for ActionAcceptNewTaskMyNameActionTaskNewPost operation.
type ActionAcceptNewTaskMyNameActionTaskNewPostCode489 struct{}

func (*ActionAcceptNewTaskMyNameActionTaskNewPostCode489) actionAcceptNewTaskMyNameActionTaskNewPostRes() {
}

// ActionAcceptNewTaskMyNameActionTaskNewPostCode498 is response for ActionAcceptNewTaskMyNameActionTaskNewPost operation.
type ActionAcceptNewTaskMyNameActionTaskNewPostCode498 struct{}

func (*ActionAcceptNewTaskMyNameActionTaskNewPostCode498) actionAcceptNewTaskMyNameActionTaskNewPostRes() {
}

// ActionAcceptNewTaskMyNameActionTaskNewPostCode499 is response for ActionAcceptNewTaskMyNameActionTaskNewPost operation.
type ActionAcceptNewTaskMyNameActionTaskNewPostCode499 struct{}

func (*ActionAcceptNewTaskMyNameActionTaskNewPostCode499) actionAcceptNewTaskMyNameActionTaskNewPostRes() {
}

// ActionAcceptNewTaskMyNameActionTaskNewPostCode598 is response for ActionAcceptNewTaskMyNameActionTaskNewPost operation.
type ActionAcceptNewTaskMyNameActionTaskNewPostCode598 struct{}

func (*ActionAcceptNewTaskMyNameActionTaskNewPostCode598) actionAcceptNewTaskMyNameActionTaskNewPostRes() {
}

// ActionCompleteTaskMyNameActionTaskCompletePostCode486 is response for ActionCompleteTaskMyNameActionTaskCompletePost operation.
type ActionCompleteTaskMyNameActionTaskCompletePostCode486 struct{}

func (*ActionCompleteTaskMyNameActionTaskCompletePostCode486) actionCompleteTaskMyNameActionTaskCompletePostRes() {
}

// ActionCompleteTaskMyNameActionTaskCompletePostCode487 is response for ActionCompleteTaskMyNameActionTaskCompletePost operation.
type ActionCompleteTaskMyNameActionTaskCompletePostCode487 struct{}

func (*ActionCompleteTaskMyNameActionTaskCompletePostCode487) actionCompleteTaskMyNameActionTaskCompletePostRes() {
}

// ActionCompleteTaskMyNameActionTaskCompletePostCode488 is response for ActionCompleteTaskMyNameActionTaskCompletePost operation.
type ActionCompleteTaskMyNameActionTaskCompletePostCode488 struct{}

func (*ActionCompleteTaskMyNameActionTaskCompletePostCode488) actionCompleteTaskMyNameActionTaskCompletePostRes() {
}

// ActionCompleteTaskMyNameActionTaskCompletePostCode497 is response for ActionCompleteTaskMyNameActionTaskCompletePost operation.
type ActionCompleteTaskMyNameActionTaskCompletePostCode497 struct{}

func (*ActionCompleteTaskMyNameActionTaskCompletePostCode497) actionCompleteTaskMyNameActionTaskCompletePostRes() {
}

// ActionCompleteTaskMyNameActionTaskCompletePostCode498 is response for ActionCompleteTaskMyNameActionTaskCompletePost operation.
type ActionCompleteTaskMyNameActionTaskCompletePostCode498 struct{}

func (*ActionCompleteTaskMyNameActionTaskCompletePostCode498) actionCompleteTaskMyNameActionTaskCompletePostRes() {
}

// ActionCompleteTaskMyNameActionTaskCompletePostCode499 is response for ActionCompleteTaskMyNameActionTaskCompletePost operation.
type ActionCompleteTaskMyNameActionTaskCompletePostCode499 struct{}

func (*ActionCompleteTaskMyNameActionTaskCompletePostCode499) actionCompleteTaskMyNameActionTaskCompletePostRes() {
}

// ActionCompleteTaskMyNameActionTaskCompletePostCode598 is response for ActionCompleteTaskMyNameActionTaskCompletePost operation.
type ActionCompleteTaskMyNameActionTaskCompletePostCode598 struct{}

func (*ActionCompleteTaskMyNameActionTaskCompletePostCode598) actionCompleteTaskMyNameActionTaskCompletePostRes() {
}

// ActionCraftingMyNameActionCraftingPostCode478 is response for ActionCraftingMyNameActionCraftingPost operation.
type ActionCraftingMyNameActionCraftingPostCode478 struct{}

func (*ActionCraftingMyNameActionCraftingPostCode478) actionCraftingMyNameActionCraftingPostRes() {}

// ActionCraftingMyNameActionCraftingPostCode486 is response for ActionCraftingMyNameActionCraftingPost operation.
type ActionCraftingMyNameActionCraftingPostCode486 struct{}

func (*ActionCraftingMyNameActionCraftingPostCode486) actionCraftingMyNameActionCraftingPostRes() {}

// ActionCraftingMyNameActionCraftingPostCode493 is response for ActionCraftingMyNameActionCraftingPost operation.
type ActionCraftingMyNameActionCraftingPostCode493 struct{}

func (*ActionCraftingMyNameActionCraftingPostCode493) actionCraftingMyNameActionCraftingPostRes() {}

// ActionCraftingMyNameActionCraftingPostCode497 is response for ActionCraftingMyNameActionCraftingPost operation.
type ActionCraftingMyNameActionCraftingPostCode497 struct{}

func (*ActionCraftingMyNameActionCraftingPostCode497) actionCraftingMyNameActionCraftingPostRes() {}

// ActionCraftingMyNameActionCraftingPostCode498 is response for ActionCraftingMyNameActionCraftingPost operation.
type ActionCraftingMyNameActionCraftingPostCode498 struct{}

func (*ActionCraftingMyNameActionCraftingPostCode498) actionCraftingMyNameActionCraftingPostRes() {}

// ActionCraftingMyNameActionCraftingPostCode499 is response for ActionCraftingMyNameActionCraftingPost operation.
type ActionCraftingMyNameActionCraftingPostCode499 struct{}

func (*ActionCraftingMyNameActionCraftingPostCode499) actionCraftingMyNameActionCraftingPostRes() {}

// ActionCraftingMyNameActionCraftingPostCode598 is response for ActionCraftingMyNameActionCraftingPost operation.
type ActionCraftingMyNameActionCraftingPostCode598 struct{}

func (*ActionCraftingMyNameActionCraftingPostCode598) actionCraftingMyNameActionCraftingPostRes() {}

// ActionCraftingMyNameActionCraftingPostNotFound is response for ActionCraftingMyNameActionCraftingPost operation.
type ActionCraftingMyNameActionCraftingPostNotFound struct{}

func (*ActionCraftingMyNameActionCraftingPostNotFound) actionCraftingMyNameActionCraftingPostRes() {}

// ActionDeleteItemMyNameActionDeletePostCode478 is response for ActionDeleteItemMyNameActionDeletePost operation.
type ActionDeleteItemMyNameActionDeletePostCode478 struct{}

func (*ActionDeleteItemMyNameActionDeletePostCode478) actionDeleteItemMyNameActionDeletePostRes() {}

// ActionDeleteItemMyNameActionDeletePostCode486 is response for ActionDeleteItemMyNameActionDeletePost operation.
type ActionDeleteItemMyNameActionDeletePostCode486 struct{}

func (*ActionDeleteItemMyNameActionDeletePostCode486) actionDeleteItemMyNameActionDeletePostRes() {}

// ActionDeleteItemMyNameActionDeletePostCode498 is response for ActionDeleteItemMyNameActionDeletePost operation.
type ActionDeleteItemMyNameActionDeletePostCode498 struct{}

func (*ActionDeleteItemMyNameActionDeletePostCode498) actionDeleteItemMyNameActionDeletePostRes() {}

// ActionDeleteItemMyNameActionDeletePostCode499 is response for ActionDeleteItemMyNameActionDeletePost operation.
type ActionDeleteItemMyNameActionDeletePostCode499 struct{}

func (*ActionDeleteItemMyNameActionDeletePostCode499) actionDeleteItemMyNameActionDeletePostRes() {}

// ActionDepositBankGoldMyNameActionBankDepositGoldPostCode478 is response for ActionDepositBankGoldMyNameActionBankDepositGoldPost operation.
type ActionDepositBankGoldMyNameActionBankDepositGoldPostCode478 struct{}

func (*ActionDepositBankGoldMyNameActionBankDepositGoldPostCode478) actionDepositBankGoldMyNameActionBankDepositGoldPostRes() {
}

// ActionDepositBankGoldMyNameActionBankDepositGoldPostCode486 is response for ActionDepositBankGoldMyNameActionBankDepositGoldPost operation.
type ActionDepositBankGoldMyNameActionBankDepositGoldPostCode486 struct{}

func (*ActionDepositBankGoldMyNameActionBankDepositGoldPostCode486) actionDepositBankGoldMyNameActionBankDepositGoldPostRes() {
}

// ActionDepositBankGoldMyNameActionBankDepositGoldPostCode492 is response for ActionDepositBankGoldMyNameActionBankDepositGoldPost operation.
type ActionDepositBankGoldMyNameActionBankDepositGoldPostCode492 struct{}

func (*ActionDepositBankGoldMyNameActionBankDepositGoldPostCode492) actionDepositBankGoldMyNameActionBankDepositGoldPostRes() {
}

// ActionDepositBankGoldMyNameActionBankDepositGoldPostCode498 is response for ActionDepositBankGoldMyNameActionBankDepositGoldPost operation.
type ActionDepositBankGoldMyNameActionBankDepositGoldPostCode498 struct{}

func (*ActionDepositBankGoldMyNameActionBankDepositGoldPostCode498) actionDepositBankGoldMyNameActionBankDepositGoldPostRes() {
}

// ActionDepositBankGoldMyNameActionBankDepositGoldPostCode499 is response for ActionDepositBankGoldMyNameActionBankDepositGoldPost operation.
type ActionDepositBankGoldMyNameActionBankDepositGoldPostCode499 struct{}

func (*ActionDepositBankGoldMyNameActionBankDepositGoldPostCode499) actionDepositBankGoldMyNameActionBankDepositGoldPostRes() {
}

// ActionDepositBankGoldMyNameActionBankDepositGoldPostCode598 is response for ActionDepositBankGoldMyNameActionBankDepositGoldPost operation.
type ActionDepositBankGoldMyNameActionBankDepositGoldPostCode598 struct{}

func (*ActionDepositBankGoldMyNameActionBankDepositGoldPostCode598) actionDepositBankGoldMyNameActionBankDepositGoldPostRes() {
}

// ActionDepositBankMyNameActionBankDepositPostCode478 is response for ActionDepositBankMyNameActionBankDepositPost operation.
type ActionDepositBankMyNameActionBankDepositPostCode478 struct{}

func (*ActionDepositBankMyNameActionBankDepositPostCode478) actionDepositBankMyNameActionBankDepositPostRes() {
}

// ActionDepositBankMyNameActionBankDepositPostCode486 is response for ActionDepositBankMyNameActionBankDepositPost operation.
type ActionDepositBankMyNameActionBankDepositPostCode486 struct{}

func (*ActionDepositBankMyNameActionBankDepositPostCode486) actionDepositBankMyNameActionBankDepositPostRes() {
}

// ActionDepositBankMyNameActionBankDepositPostCode498 is response for ActionDepositBankMyNameActionBankDepositPost operation.
type ActionDepositBankMyNameActionBankDepositPostCode498 struct{}

func (*ActionDepositBankMyNameActionBankDepositPostCode498) actionDepositBankMyNameActionBankDepositPostRes() {
}

// ActionDepositBankMyNameActionBankDepositPostCode499 is response for ActionDepositBankMyNameActionBankDepositPost operation.
type ActionDepositBankMyNameActionBankDepositPostCode499 struct{}

func (*ActionDepositBankMyNameActionBankDepositPostCode499) actionDepositBankMyNameActionBankDepositPostRes() {
}

// ActionDepositBankMyNameActionBankDepositPostCode598 is response for ActionDepositBankMyNameActionBankDepositPost operation.
type ActionDepositBankMyNameActionBankDepositPostCode598 struct{}

func (*ActionDepositBankMyNameActionBankDepositPostCode598) actionDepositBankMyNameActionBankDepositPostRes() {
}

// ActionDepositBankMyNameActionBankDepositPostNotFound is response for ActionDepositBankMyNameActionBankDepositPost operation.
type ActionDepositBankMyNameActionBankDepositPostNotFound struct{}

func (*ActionDepositBankMyNameActionBankDepositPostNotFound) actionDepositBankMyNameActionBankDepositPostRes() {
}

// ActionEquipItemMyNameActionEquipPostCode478 is response for ActionEquipItemMyNameActionEquipPost operation.
type ActionEquipItemMyNameActionEquipPostCode478 struct{}

func (*ActionEquipItemMyNameActionEquipPostCode478) actionEquipItemMyNameActionEquipPostRes() {}

// ActionEquipItemMyNameActionEquipPostCode485 is response for ActionEquipItemMyNameActionEquipPost operation.
type ActionEquipItemMyNameActionEquipPostCode485 struct{}

func (*ActionEquipItemMyNameActionEquipPostCode485) actionEquipItemMyNameActionEquipPostRes() {}

// ActionEquipItemMyNameActionEquipPostCode486 is response for ActionEquipItemMyNameActionEquipPost operation.
type ActionEquipItemMyNameActionEquipPostCode486 struct{}

func (*ActionEquipItemMyNameActionEquipPostCode486) actionEquipItemMyNameActionEquipPostRes() {}

// ActionEquipItemMyNameActionEquipPostCode491 is response for ActionEquipItemMyNameActionEquipPost operation.
type ActionEquipItemMyNameActionEquipPostCode491 struct{}

func (*ActionEquipItemMyNameActionEquipPostCode491) actionEquipItemMyNameActionEquipPostRes() {}

// ActionEquipItemMyNameActionEquipPostCode496 is response for ActionEquipItemMyNameActionEquipPost operation.
type ActionEquipItemMyNameActionEquipPostCode496 struct{}

func (*ActionEquipItemMyNameActionEquipPostCode496) actionEquipItemMyNameActionEquipPostRes() {}

// ActionEquipItemMyNameActionEquipPostCode498 is response for ActionEquipItemMyNameActionEquipPost operation.
type ActionEquipItemMyNameActionEquipPostCode498 struct{}

func (*ActionEquipItemMyNameActionEquipPostCode498) actionEquipItemMyNameActionEquipPostRes() {}

// ActionEquipItemMyNameActionEquipPostCode499 is response for ActionEquipItemMyNameActionEquipPost operation.
type ActionEquipItemMyNameActionEquipPostCode499 struct{}

func (*ActionEquipItemMyNameActionEquipPostCode499) actionEquipItemMyNameActionEquipPostRes() {}

// ActionEquipItemMyNameActionEquipPostNotFound is response for ActionEquipItemMyNameActionEquipPost operation.
type ActionEquipItemMyNameActionEquipPostNotFound struct{}

func (*ActionEquipItemMyNameActionEquipPostNotFound) actionEquipItemMyNameActionEquipPostRes() {}

// ActionFightMyNameActionFightPostCode486 is response for ActionFightMyNameActionFightPost operation.
type ActionFightMyNameActionFightPostCode486 struct{}

func (*ActionFightMyNameActionFightPostCode486) actionFightMyNameActionFightPostRes() {}

// ActionFightMyNameActionFightPostCode497 is response for ActionFightMyNameActionFightPost operation.
type ActionFightMyNameActionFightPostCode497 struct{}

func (*ActionFightMyNameActionFightPostCode497) actionFightMyNameActionFightPostRes() {}

// ActionFightMyNameActionFightPostCode498 is response for ActionFightMyNameActionFightPost operation.
type ActionFightMyNameActionFightPostCode498 struct{}

func (*ActionFightMyNameActionFightPostCode498) actionFightMyNameActionFightPostRes() {}

// ActionFightMyNameActionFightPostCode499 is response for ActionFightMyNameActionFightPost operation.
type ActionFightMyNameActionFightPostCode499 struct{}

func (*ActionFightMyNameActionFightPostCode499) actionFightMyNameActionFightPostRes() {}

// ActionFightMyNameActionFightPostCode598 is response for ActionFightMyNameActionFightPost operation.
type ActionFightMyNameActionFightPostCode598 struct{}

func (*ActionFightMyNameActionFightPostCode598) actionFightMyNameActionFightPostRes() {}

// ActionGatheringMyNameActionGatheringPostCode486 is response for ActionGatheringMyNameActionGatheringPost operation.
type ActionGatheringMyNameActionGatheringPostCode486 struct{}

func (*ActionGatheringMyNameActionGatheringPostCode486) actionGatheringMyNameActionGatheringPostRes() {
}

// ActionGatheringMyNameActionGatheringPostCode493 is response for ActionGatheringMyNameActionGatheringPost operation.
type ActionGatheringMyNameActionGatheringPostCode493 struct{}

func (*ActionGatheringMyNameActionGatheringPostCode493) actionGatheringMyNameActionGatheringPostRes() {
}

// ActionGatheringMyNameActionGatheringPostCode497 is response for ActionGatheringMyNameActionGatheringPost operation.
type ActionGatheringMyNameActionGatheringPostCode497 struct{}

func (*ActionGatheringMyNameActionGatheringPostCode497) actionGatheringMyNameActionGatheringPostRes() {
}

// ActionGatheringMyNameActionGatheringPostCode498 is response for ActionGatheringMyNameActionGatheringPost operation.
type ActionGatheringMyNameActionGatheringPostCode498 struct{}

func (*ActionGatheringMyNameActionGatheringPostCode498) actionGatheringMyNameActionGatheringPostRes() {
}

// ActionGatheringMyNameActionGatheringPostCode499 is response for ActionGatheringMyNameActionGatheringPost operation.
type ActionGatheringMyNameActionGatheringPostCode499 struct{}

func (*ActionGatheringMyNameActionGatheringPostCode499) actionGatheringMyNameActionGatheringPostRes() {
}

// ActionGatheringMyNameActionGatheringPostCode598 is response for ActionGatheringMyNameActionGatheringPost operation.
type ActionGatheringMyNameActionGatheringPostCode598 struct{}

func (*ActionGatheringMyNameActionGatheringPostCode598) actionGatheringMyNameActionGatheringPostRes() {
}

// ActionGeBuyItemMyNameActionGeBuyPostCode480 is response for ActionGeBuyItemMyNameActionGeBuyPost operation.
type ActionGeBuyItemMyNameActionGeBuyPostCode480 struct{}

func (*ActionGeBuyItemMyNameActionGeBuyPostCode480) actionGeBuyItemMyNameActionGeBuyPostRes() {}

// ActionGeBuyItemMyNameActionGeBuyPostCode482 is response for ActionGeBuyItemMyNameActionGeBuyPost operation.
type ActionGeBuyItemMyNameActionGeBuyPostCode482 struct{}

func (*ActionGeBuyItemMyNameActionGeBuyPostCode482) actionGeBuyItemMyNameActionGeBuyPostRes() {}

// ActionGeBuyItemMyNameActionGeBuyPostCode486 is response for ActionGeBuyItemMyNameActionGeBuyPost operation.
type ActionGeBuyItemMyNameActionGeBuyPostCode486 struct{}

func (*ActionGeBuyItemMyNameActionGeBuyPostCode486) actionGeBuyItemMyNameActionGeBuyPostRes() {}

// ActionGeBuyItemMyNameActionGeBuyPostCode492 is response for ActionGeBuyItemMyNameActionGeBuyPost operation.
type ActionGeBuyItemMyNameActionGeBuyPostCode492 struct{}

func (*ActionGeBuyItemMyNameActionGeBuyPostCode492) actionGeBuyItemMyNameActionGeBuyPostRes() {}

// ActionGeBuyItemMyNameActionGeBuyPostCode497 is response for ActionGeBuyItemMyNameActionGeBuyPost operation.
type ActionGeBuyItemMyNameActionGeBuyPostCode497 struct{}

func (*ActionGeBuyItemMyNameActionGeBuyPostCode497) actionGeBuyItemMyNameActionGeBuyPostRes() {}

// ActionGeBuyItemMyNameActionGeBuyPostCode498 is response for ActionGeBuyItemMyNameActionGeBuyPost operation.
type ActionGeBuyItemMyNameActionGeBuyPostCode498 struct{}

func (*ActionGeBuyItemMyNameActionGeBuyPostCode498) actionGeBuyItemMyNameActionGeBuyPostRes() {}

// ActionGeBuyItemMyNameActionGeBuyPostCode499 is response for ActionGeBuyItemMyNameActionGeBuyPost operation.
type ActionGeBuyItemMyNameActionGeBuyPostCode499 struct{}

func (*ActionGeBuyItemMyNameActionGeBuyPostCode499) actionGeBuyItemMyNameActionGeBuyPostRes() {}

// ActionGeBuyItemMyNameActionGeBuyPostCode598 is response for ActionGeBuyItemMyNameActionGeBuyPost operation.
type ActionGeBuyItemMyNameActionGeBuyPostCode598 struct{}

func (*ActionGeBuyItemMyNameActionGeBuyPostCode598) actionGeBuyItemMyNameActionGeBuyPostRes() {}

// ActionGeSellItemMyNameActionGeSellPostCode478 is response for ActionGeSellItemMyNameActionGeSellPost operation.
type ActionGeSellItemMyNameActionGeSellPostCode478 struct{}

func (*ActionGeSellItemMyNameActionGeSellPostCode478) actionGeSellItemMyNameActionGeSellPostRes() {}

// ActionGeSellItemMyNameActionGeSellPostCode482 is response for ActionGeSellItemMyNameActionGeSellPost operation.
type ActionGeSellItemMyNameActionGeSellPostCode482 struct{}

func (*ActionGeSellItemMyNameActionGeSellPostCode482) actionGeSellItemMyNameActionGeSellPostRes() {}

// ActionGeSellItemMyNameActionGeSellPostCode486 is response for ActionGeSellItemMyNameActionGeSellPost operation.
type ActionGeSellItemMyNameActionGeSellPostCode486 struct{}

func (*ActionGeSellItemMyNameActionGeSellPostCode486) actionGeSellItemMyNameActionGeSellPostRes() {}

// ActionGeSellItemMyNameActionGeSellPostCode498 is response for ActionGeSellItemMyNameActionGeSellPost operation.
type ActionGeSellItemMyNameActionGeSellPostCode498 struct{}

func (*ActionGeSellItemMyNameActionGeSellPostCode498) actionGeSellItemMyNameActionGeSellPostRes() {}

// ActionGeSellItemMyNameActionGeSellPostCode499 is response for ActionGeSellItemMyNameActionGeSellPost operation.
type ActionGeSellItemMyNameActionGeSellPostCode499 struct{}

func (*ActionGeSellItemMyNameActionGeSellPostCode499) actionGeSellItemMyNameActionGeSellPostRes() {}

// ActionGeSellItemMyNameActionGeSellPostCode598 is response for ActionGeSellItemMyNameActionGeSellPost operation.
type ActionGeSellItemMyNameActionGeSellPostCode598 struct{}

func (*ActionGeSellItemMyNameActionGeSellPostCode598) actionGeSellItemMyNameActionGeSellPostRes() {}

// ActionGeSellItemMyNameActionGeSellPostNotFound is response for ActionGeSellItemMyNameActionGeSellPost operation.
type ActionGeSellItemMyNameActionGeSellPostNotFound struct{}

func (*ActionGeSellItemMyNameActionGeSellPostNotFound) actionGeSellItemMyNameActionGeSellPostRes() {}

// Ref: #/components/schemas/ActionItemBankResponseSchema
type ActionItemBankResponseSchema struct {
	Data BankItemSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *ActionItemBankResponseSchema) GetData() BankItemSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *ActionItemBankResponseSchema) SetData(val BankItemSchema) {
	s.Data = val
}

func (*ActionItemBankResponseSchema) actionDepositBankMyNameActionBankDepositPostRes()   {}
func (*ActionItemBankResponseSchema) actionWithdrawBankMyNameActionBankWithdrawPostRes() {}

// ActionMoveMyNameActionMovePostCode486 is response for ActionMoveMyNameActionMovePost operation.
type ActionMoveMyNameActionMovePostCode486 struct{}

func (*ActionMoveMyNameActionMovePostCode486) actionMoveMyNameActionMovePostRes() {}

// ActionMoveMyNameActionMovePostCode490 is response for ActionMoveMyNameActionMovePost operation.
type ActionMoveMyNameActionMovePostCode490 struct{}

func (*ActionMoveMyNameActionMovePostCode490) actionMoveMyNameActionMovePostRes() {}

// ActionMoveMyNameActionMovePostCode498 is response for ActionMoveMyNameActionMovePost operation.
type ActionMoveMyNameActionMovePostCode498 struct{}

func (*ActionMoveMyNameActionMovePostCode498) actionMoveMyNameActionMovePostRes() {}

// ActionMoveMyNameActionMovePostCode499 is response for ActionMoveMyNameActionMovePost operation.
type ActionMoveMyNameActionMovePostCode499 struct{}

func (*ActionMoveMyNameActionMovePostCode499) actionMoveMyNameActionMovePostRes() {}

// ActionMoveMyNameActionMovePostNotFound is response for ActionMoveMyNameActionMovePost operation.
type ActionMoveMyNameActionMovePostNotFound struct{}

func (*ActionMoveMyNameActionMovePostNotFound) actionMoveMyNameActionMovePostRes() {}

// ActionRecyclingMyNameActionRecyclingPostCode473 is response for ActionRecyclingMyNameActionRecyclingPost operation.
type ActionRecyclingMyNameActionRecyclingPostCode473 struct{}

func (*ActionRecyclingMyNameActionRecyclingPostCode473) actionRecyclingMyNameActionRecyclingPostRes() {
}

// ActionRecyclingMyNameActionRecyclingPostCode478 is response for ActionRecyclingMyNameActionRecyclingPost operation.
type ActionRecyclingMyNameActionRecyclingPostCode478 struct{}

func (*ActionRecyclingMyNameActionRecyclingPostCode478) actionRecyclingMyNameActionRecyclingPostRes() {
}

// ActionRecyclingMyNameActionRecyclingPostCode486 is response for ActionRecyclingMyNameActionRecyclingPost operation.
type ActionRecyclingMyNameActionRecyclingPostCode486 struct{}

func (*ActionRecyclingMyNameActionRecyclingPostCode486) actionRecyclingMyNameActionRecyclingPostRes() {
}

// ActionRecyclingMyNameActionRecyclingPostCode493 is response for ActionRecyclingMyNameActionRecyclingPost operation.
type ActionRecyclingMyNameActionRecyclingPostCode493 struct{}

func (*ActionRecyclingMyNameActionRecyclingPostCode493) actionRecyclingMyNameActionRecyclingPostRes() {
}

// ActionRecyclingMyNameActionRecyclingPostCode497 is response for ActionRecyclingMyNameActionRecyclingPost operation.
type ActionRecyclingMyNameActionRecyclingPostCode497 struct{}

func (*ActionRecyclingMyNameActionRecyclingPostCode497) actionRecyclingMyNameActionRecyclingPostRes() {
}

// ActionRecyclingMyNameActionRecyclingPostCode498 is response for ActionRecyclingMyNameActionRecyclingPost operation.
type ActionRecyclingMyNameActionRecyclingPostCode498 struct{}

func (*ActionRecyclingMyNameActionRecyclingPostCode498) actionRecyclingMyNameActionRecyclingPostRes() {
}

// ActionRecyclingMyNameActionRecyclingPostCode499 is response for ActionRecyclingMyNameActionRecyclingPost operation.
type ActionRecyclingMyNameActionRecyclingPostCode499 struct{}

func (*ActionRecyclingMyNameActionRecyclingPostCode499) actionRecyclingMyNameActionRecyclingPostRes() {
}

// ActionRecyclingMyNameActionRecyclingPostCode598 is response for ActionRecyclingMyNameActionRecyclingPost operation.
type ActionRecyclingMyNameActionRecyclingPostCode598 struct{}

func (*ActionRecyclingMyNameActionRecyclingPostCode598) actionRecyclingMyNameActionRecyclingPostRes() {
}

// ActionRecyclingMyNameActionRecyclingPostNotFound is response for ActionRecyclingMyNameActionRecyclingPost operation.
type ActionRecyclingMyNameActionRecyclingPostNotFound struct{}

func (*ActionRecyclingMyNameActionRecyclingPostNotFound) actionRecyclingMyNameActionRecyclingPostRes() {
}

// ActionTaskExchangeMyNameActionTaskExchangePostCode478 is response for ActionTaskExchangeMyNameActionTaskExchangePost operation.
type ActionTaskExchangeMyNameActionTaskExchangePostCode478 struct{}

func (*ActionTaskExchangeMyNameActionTaskExchangePostCode478) actionTaskExchangeMyNameActionTaskExchangePostRes() {
}

// ActionTaskExchangeMyNameActionTaskExchangePostCode486 is response for ActionTaskExchangeMyNameActionTaskExchangePost operation.
type ActionTaskExchangeMyNameActionTaskExchangePostCode486 struct{}

func (*ActionTaskExchangeMyNameActionTaskExchangePostCode486) actionTaskExchangeMyNameActionTaskExchangePostRes() {
}

// ActionTaskExchangeMyNameActionTaskExchangePostCode497 is response for ActionTaskExchangeMyNameActionTaskExchangePost operation.
type ActionTaskExchangeMyNameActionTaskExchangePostCode497 struct{}

func (*ActionTaskExchangeMyNameActionTaskExchangePostCode497) actionTaskExchangeMyNameActionTaskExchangePostRes() {
}

// ActionTaskExchangeMyNameActionTaskExchangePostCode498 is response for ActionTaskExchangeMyNameActionTaskExchangePost operation.
type ActionTaskExchangeMyNameActionTaskExchangePostCode498 struct{}

func (*ActionTaskExchangeMyNameActionTaskExchangePostCode498) actionTaskExchangeMyNameActionTaskExchangePostRes() {
}

// ActionTaskExchangeMyNameActionTaskExchangePostCode499 is response for ActionTaskExchangeMyNameActionTaskExchangePost operation.
type ActionTaskExchangeMyNameActionTaskExchangePostCode499 struct{}

func (*ActionTaskExchangeMyNameActionTaskExchangePostCode499) actionTaskExchangeMyNameActionTaskExchangePostRes() {
}

// ActionTaskExchangeMyNameActionTaskExchangePostCode598 is response for ActionTaskExchangeMyNameActionTaskExchangePost operation.
type ActionTaskExchangeMyNameActionTaskExchangePostCode598 struct{}

func (*ActionTaskExchangeMyNameActionTaskExchangePostCode598) actionTaskExchangeMyNameActionTaskExchangePostRes() {
}

// ActionUnequipItemMyNameActionUnequipPostCode486 is response for ActionUnequipItemMyNameActionUnequipPost operation.
type ActionUnequipItemMyNameActionUnequipPostCode486 struct{}

func (*ActionUnequipItemMyNameActionUnequipPostCode486) actionUnequipItemMyNameActionUnequipPostRes() {
}

// ActionUnequipItemMyNameActionUnequipPostCode491 is response for ActionUnequipItemMyNameActionUnequipPost operation.
type ActionUnequipItemMyNameActionUnequipPostCode491 struct{}

func (*ActionUnequipItemMyNameActionUnequipPostCode491) actionUnequipItemMyNameActionUnequipPostRes() {
}

// ActionUnequipItemMyNameActionUnequipPostCode497 is response for ActionUnequipItemMyNameActionUnequipPost operation.
type ActionUnequipItemMyNameActionUnequipPostCode497 struct{}

func (*ActionUnequipItemMyNameActionUnequipPostCode497) actionUnequipItemMyNameActionUnequipPostRes() {
}

// ActionUnequipItemMyNameActionUnequipPostCode498 is response for ActionUnequipItemMyNameActionUnequipPost operation.
type ActionUnequipItemMyNameActionUnequipPostCode498 struct{}

func (*ActionUnequipItemMyNameActionUnequipPostCode498) actionUnequipItemMyNameActionUnequipPostRes() {
}

// ActionUnequipItemMyNameActionUnequipPostCode499 is response for ActionUnequipItemMyNameActionUnequipPost operation.
type ActionUnequipItemMyNameActionUnequipPostCode499 struct{}

func (*ActionUnequipItemMyNameActionUnequipPostCode499) actionUnequipItemMyNameActionUnequipPostRes() {
}

// ActionUnequipItemMyNameActionUnequipPostNotFound is response for ActionUnequipItemMyNameActionUnequipPost operation.
type ActionUnequipItemMyNameActionUnequipPostNotFound struct{}

func (*ActionUnequipItemMyNameActionUnequipPostNotFound) actionUnequipItemMyNameActionUnequipPostRes() {
}

// ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode460 is response for ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPost operation.
type ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode460 struct{}

func (*ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode460) actionWithdrawBankGoldMyNameActionBankWithdrawGoldPostRes() {
}

// ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode486 is response for ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPost operation.
type ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode486 struct{}

func (*ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode486) actionWithdrawBankGoldMyNameActionBankWithdrawGoldPostRes() {
}

// ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode498 is response for ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPost operation.
type ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode498 struct{}

func (*ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode498) actionWithdrawBankGoldMyNameActionBankWithdrawGoldPostRes() {
}

// ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode499 is response for ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPost operation.
type ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode499 struct{}

func (*ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode499) actionWithdrawBankGoldMyNameActionBankWithdrawGoldPostRes() {
}

// ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode598 is response for ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPost operation.
type ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode598 struct{}

func (*ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostCode598) actionWithdrawBankGoldMyNameActionBankWithdrawGoldPostRes() {
}

// ActionWithdrawBankMyNameActionBankWithdrawPostCode478 is response for ActionWithdrawBankMyNameActionBankWithdrawPost operation.
type ActionWithdrawBankMyNameActionBankWithdrawPostCode478 struct{}

func (*ActionWithdrawBankMyNameActionBankWithdrawPostCode478) actionWithdrawBankMyNameActionBankWithdrawPostRes() {
}

// ActionWithdrawBankMyNameActionBankWithdrawPostCode486 is response for ActionWithdrawBankMyNameActionBankWithdrawPost operation.
type ActionWithdrawBankMyNameActionBankWithdrawPostCode486 struct{}

func (*ActionWithdrawBankMyNameActionBankWithdrawPostCode486) actionWithdrawBankMyNameActionBankWithdrawPostRes() {
}

// ActionWithdrawBankMyNameActionBankWithdrawPostCode497 is response for ActionWithdrawBankMyNameActionBankWithdrawPost operation.
type ActionWithdrawBankMyNameActionBankWithdrawPostCode497 struct{}

func (*ActionWithdrawBankMyNameActionBankWithdrawPostCode497) actionWithdrawBankMyNameActionBankWithdrawPostRes() {
}

// ActionWithdrawBankMyNameActionBankWithdrawPostCode498 is response for ActionWithdrawBankMyNameActionBankWithdrawPost operation.
type ActionWithdrawBankMyNameActionBankWithdrawPostCode498 struct{}

func (*ActionWithdrawBankMyNameActionBankWithdrawPostCode498) actionWithdrawBankMyNameActionBankWithdrawPostRes() {
}

// ActionWithdrawBankMyNameActionBankWithdrawPostCode499 is response for ActionWithdrawBankMyNameActionBankWithdrawPost operation.
type ActionWithdrawBankMyNameActionBankWithdrawPostCode499 struct{}

func (*ActionWithdrawBankMyNameActionBankWithdrawPostCode499) actionWithdrawBankMyNameActionBankWithdrawPostRes() {
}

// ActionWithdrawBankMyNameActionBankWithdrawPostCode598 is response for ActionWithdrawBankMyNameActionBankWithdrawPost operation.
type ActionWithdrawBankMyNameActionBankWithdrawPostCode598 struct{}

func (*ActionWithdrawBankMyNameActionBankWithdrawPostCode598) actionWithdrawBankMyNameActionBankWithdrawPostRes() {
}

// ActionWithdrawBankMyNameActionBankWithdrawPostNotFound is response for ActionWithdrawBankMyNameActionBankWithdrawPost operation.
type ActionWithdrawBankMyNameActionBankWithdrawPostNotFound struct{}

func (*ActionWithdrawBankMyNameActionBankWithdrawPostNotFound) actionWithdrawBankMyNameActionBankWithdrawPostRes() {
}

// Ref: #/components/schemas/AddAccountSchema
type AddAccountSchema struct {
	// Your desired username.
	Username string `json:"username"`
	// Your password.
	Password string `json:"password"`
	// Your email.
	Email string `json:"email"`
}

// GetUsername returns the value of Username.
func (s *AddAccountSchema) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *AddAccountSchema) GetPassword() string {
	return s.Password
}

// GetEmail returns the value of Email.
func (s *AddAccountSchema) GetEmail() string {
	return s.Email
}

// SetUsername sets the value of Username.
func (s *AddAccountSchema) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *AddAccountSchema) SetPassword(val string) {
	s.Password = val
}

// SetEmail sets the value of Email.
func (s *AddAccountSchema) SetEmail(val string) {
	s.Email = val
}

// Ref: #/components/schemas/AddCharacterSchema
type AddCharacterSchema struct {
	// Your desired character name. It's unique and all players can see it.
	Name string `json:"name"`
	// Your desired skin.
	Skin AddCharacterSchemaSkin `json:"skin"`
}

// GetName returns the value of Name.
func (s *AddCharacterSchema) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *AddCharacterSchema) GetSkin() AddCharacterSchemaSkin {
	return s.Skin
}

// SetName sets the value of Name.
func (s *AddCharacterSchema) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *AddCharacterSchema) SetSkin(val AddCharacterSchemaSkin) {
	s.Skin = val
}

// Your desired skin.
type AddCharacterSchemaSkin string

const (
	AddCharacterSchemaSkinMen1   AddCharacterSchemaSkin = "men1"
	AddCharacterSchemaSkinMen2   AddCharacterSchemaSkin = "men2"
	AddCharacterSchemaSkinMen3   AddCharacterSchemaSkin = "men3"
	AddCharacterSchemaSkinWomen1 AddCharacterSchemaSkin = "women1"
	AddCharacterSchemaSkinWomen2 AddCharacterSchemaSkin = "women2"
	AddCharacterSchemaSkinWomen3 AddCharacterSchemaSkin = "women3"
)

// AllValues returns all AddCharacterSchemaSkin values.
func (AddCharacterSchemaSkin) AllValues() []AddCharacterSchemaSkin {
	return []AddCharacterSchemaSkin{
		AddCharacterSchemaSkinMen1,
		AddCharacterSchemaSkinMen2,
		AddCharacterSchemaSkinMen3,
		AddCharacterSchemaSkinWomen1,
		AddCharacterSchemaSkinWomen2,
		AddCharacterSchemaSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AddCharacterSchemaSkin) MarshalText() ([]byte, error) {
	switch s {
	case AddCharacterSchemaSkinMen1:
		return []byte(s), nil
	case AddCharacterSchemaSkinMen2:
		return []byte(s), nil
	case AddCharacterSchemaSkinMen3:
		return []byte(s), nil
	case AddCharacterSchemaSkinWomen1:
		return []byte(s), nil
	case AddCharacterSchemaSkinWomen2:
		return []byte(s), nil
	case AddCharacterSchemaSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AddCharacterSchemaSkin) UnmarshalText(data []byte) error {
	switch AddCharacterSchemaSkin(data) {
	case AddCharacterSchemaSkinMen1:
		*s = AddCharacterSchemaSkinMen1
		return nil
	case AddCharacterSchemaSkinMen2:
		*s = AddCharacterSchemaSkinMen2
		return nil
	case AddCharacterSchemaSkinMen3:
		*s = AddCharacterSchemaSkinMen3
		return nil
	case AddCharacterSchemaSkinWomen1:
		*s = AddCharacterSchemaSkinWomen1
		return nil
	case AddCharacterSchemaSkinWomen2:
		*s = AddCharacterSchemaSkinWomen2
		return nil
	case AddCharacterSchemaSkinWomen3:
		*s = AddCharacterSchemaSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/AnnouncementSchema
type AnnouncementSchema struct {
	// Announcement text.
	Message string `json:"message"`
	// Datetime of the announcement.
	CreatedAt OptDateTime `json:"created_at"`
}

// GetMessage returns the value of Message.
func (s *AnnouncementSchema) GetMessage() string {
	return s.Message
}

// GetCreatedAt returns the value of CreatedAt.
func (s *AnnouncementSchema) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// SetMessage sets the value of Message.
func (s *AnnouncementSchema) SetMessage(val string) {
	s.Message = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *AnnouncementSchema) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/BankItemSchema
type BankItemSchema struct {
	// Cooldown details.
	Cooldown BankItemSchemaCooldown `json:"cooldown"`
	// Item details.
	Item BankItemSchemaItem `json:"item"`
	// Items in your banks.
	Bank []SimpleItemSchema `json:"bank"`
	// Player details.
	Character BankItemSchemaCharacter `json:"character"`
}

// GetCooldown returns the value of Cooldown.
func (s *BankItemSchema) GetCooldown() BankItemSchemaCooldown {
	return s.Cooldown
}

// GetItem returns the value of Item.
func (s *BankItemSchema) GetItem() BankItemSchemaItem {
	return s.Item
}

// GetBank returns the value of Bank.
func (s *BankItemSchema) GetBank() []SimpleItemSchema {
	return s.Bank
}

// GetCharacter returns the value of Character.
func (s *BankItemSchema) GetCharacter() BankItemSchemaCharacter {
	return s.Character
}

// SetCooldown sets the value of Cooldown.
func (s *BankItemSchema) SetCooldown(val BankItemSchemaCooldown) {
	s.Cooldown = val
}

// SetItem sets the value of Item.
func (s *BankItemSchema) SetItem(val BankItemSchemaItem) {
	s.Item = val
}

// SetBank sets the value of Bank.
func (s *BankItemSchema) SetBank(val []SimpleItemSchema) {
	s.Bank = val
}

// SetCharacter sets the value of Character.
func (s *BankItemSchema) SetCharacter(val BankItemSchemaCharacter) {
	s.Character = val
}

type BankItemSchemaCharacter struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin BankItemSchemaCharacterSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptBankItemSchemaCharacterCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *BankItemSchemaCharacter) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *BankItemSchemaCharacter) GetSkin() BankItemSchemaCharacterSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *BankItemSchemaCharacter) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *BankItemSchemaCharacter) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *BankItemSchemaCharacter) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *BankItemSchemaCharacter) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *BankItemSchemaCharacter) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *BankItemSchemaCharacter) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *BankItemSchemaCharacter) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *BankItemSchemaCharacter) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *BankItemSchemaCharacter) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *BankItemSchemaCharacter) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *BankItemSchemaCharacter) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *BankItemSchemaCharacter) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *BankItemSchemaCharacter) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *BankItemSchemaCharacter) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *BankItemSchemaCharacter) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *BankItemSchemaCharacter) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *BankItemSchemaCharacter) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *BankItemSchemaCharacter) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *BankItemSchemaCharacter) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *BankItemSchemaCharacter) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *BankItemSchemaCharacter) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *BankItemSchemaCharacter) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *BankItemSchemaCharacter) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *BankItemSchemaCharacter) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *BankItemSchemaCharacter) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *BankItemSchemaCharacter) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *BankItemSchemaCharacter) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *BankItemSchemaCharacter) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *BankItemSchemaCharacter) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *BankItemSchemaCharacter) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *BankItemSchemaCharacter) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *BankItemSchemaCharacter) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *BankItemSchemaCharacter) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *BankItemSchemaCharacter) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *BankItemSchemaCharacter) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *BankItemSchemaCharacter) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *BankItemSchemaCharacter) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *BankItemSchemaCharacter) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *BankItemSchemaCharacter) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *BankItemSchemaCharacter) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *BankItemSchemaCharacter) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *BankItemSchemaCharacter) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *BankItemSchemaCharacter) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *BankItemSchemaCharacter) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *BankItemSchemaCharacter) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *BankItemSchemaCharacter) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *BankItemSchemaCharacter) GetCooldownExpiration() OptBankItemSchemaCharacterCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *BankItemSchemaCharacter) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *BankItemSchemaCharacter) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *BankItemSchemaCharacter) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *BankItemSchemaCharacter) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *BankItemSchemaCharacter) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *BankItemSchemaCharacter) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *BankItemSchemaCharacter) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *BankItemSchemaCharacter) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *BankItemSchemaCharacter) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *BankItemSchemaCharacter) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *BankItemSchemaCharacter) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *BankItemSchemaCharacter) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *BankItemSchemaCharacter) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *BankItemSchemaCharacter) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *BankItemSchemaCharacter) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *BankItemSchemaCharacter) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *BankItemSchemaCharacter) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *BankItemSchemaCharacter) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *BankItemSchemaCharacter) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *BankItemSchemaCharacter) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *BankItemSchemaCharacter) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *BankItemSchemaCharacter) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *BankItemSchemaCharacter) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *BankItemSchemaCharacter) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *BankItemSchemaCharacter) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *BankItemSchemaCharacter) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *BankItemSchemaCharacter) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *BankItemSchemaCharacter) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *BankItemSchemaCharacter) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *BankItemSchemaCharacter) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *BankItemSchemaCharacter) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *BankItemSchemaCharacter) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *BankItemSchemaCharacter) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *BankItemSchemaCharacter) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *BankItemSchemaCharacter) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *BankItemSchemaCharacter) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *BankItemSchemaCharacter) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *BankItemSchemaCharacter) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *BankItemSchemaCharacter) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *BankItemSchemaCharacter) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *BankItemSchemaCharacter) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *BankItemSchemaCharacter) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *BankItemSchemaCharacter) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *BankItemSchemaCharacter) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *BankItemSchemaCharacter) SetSkin(val BankItemSchemaCharacterSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *BankItemSchemaCharacter) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *BankItemSchemaCharacter) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *BankItemSchemaCharacter) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *BankItemSchemaCharacter) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *BankItemSchemaCharacter) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *BankItemSchemaCharacter) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *BankItemSchemaCharacter) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *BankItemSchemaCharacter) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *BankItemSchemaCharacter) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *BankItemSchemaCharacter) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *BankItemSchemaCharacter) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *BankItemSchemaCharacter) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *BankItemSchemaCharacter) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *BankItemSchemaCharacter) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *BankItemSchemaCharacter) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *BankItemSchemaCharacter) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *BankItemSchemaCharacter) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *BankItemSchemaCharacter) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *BankItemSchemaCharacter) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *BankItemSchemaCharacter) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *BankItemSchemaCharacter) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *BankItemSchemaCharacter) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *BankItemSchemaCharacter) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *BankItemSchemaCharacter) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *BankItemSchemaCharacter) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *BankItemSchemaCharacter) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *BankItemSchemaCharacter) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *BankItemSchemaCharacter) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *BankItemSchemaCharacter) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *BankItemSchemaCharacter) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *BankItemSchemaCharacter) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *BankItemSchemaCharacter) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *BankItemSchemaCharacter) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *BankItemSchemaCharacter) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *BankItemSchemaCharacter) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *BankItemSchemaCharacter) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *BankItemSchemaCharacter) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *BankItemSchemaCharacter) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *BankItemSchemaCharacter) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *BankItemSchemaCharacter) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *BankItemSchemaCharacter) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *BankItemSchemaCharacter) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *BankItemSchemaCharacter) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *BankItemSchemaCharacter) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *BankItemSchemaCharacter) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *BankItemSchemaCharacter) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *BankItemSchemaCharacter) SetCooldownExpiration(val OptBankItemSchemaCharacterCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *BankItemSchemaCharacter) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *BankItemSchemaCharacter) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *BankItemSchemaCharacter) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *BankItemSchemaCharacter) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *BankItemSchemaCharacter) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *BankItemSchemaCharacter) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *BankItemSchemaCharacter) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *BankItemSchemaCharacter) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *BankItemSchemaCharacter) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *BankItemSchemaCharacter) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *BankItemSchemaCharacter) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *BankItemSchemaCharacter) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *BankItemSchemaCharacter) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *BankItemSchemaCharacter) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *BankItemSchemaCharacter) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *BankItemSchemaCharacter) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *BankItemSchemaCharacter) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *BankItemSchemaCharacter) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *BankItemSchemaCharacter) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *BankItemSchemaCharacter) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *BankItemSchemaCharacter) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *BankItemSchemaCharacter) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *BankItemSchemaCharacter) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *BankItemSchemaCharacter) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *BankItemSchemaCharacter) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *BankItemSchemaCharacter) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *BankItemSchemaCharacter) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *BankItemSchemaCharacter) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *BankItemSchemaCharacter) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *BankItemSchemaCharacter) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *BankItemSchemaCharacter) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *BankItemSchemaCharacter) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *BankItemSchemaCharacter) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *BankItemSchemaCharacter) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *BankItemSchemaCharacter) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *BankItemSchemaCharacter) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *BankItemSchemaCharacter) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *BankItemSchemaCharacter) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *BankItemSchemaCharacter) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *BankItemSchemaCharacter) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *BankItemSchemaCharacter) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *BankItemSchemaCharacter) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *BankItemSchemaCharacter) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// BankItemSchemaCharacterCooldownExpiration represents sum type.
type BankItemSchemaCharacterCooldownExpiration struct {
	Type     BankItemSchemaCharacterCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// BankItemSchemaCharacterCooldownExpirationType is oneOf type of BankItemSchemaCharacterCooldownExpiration.
type BankItemSchemaCharacterCooldownExpirationType string

// Possible values for BankItemSchemaCharacterCooldownExpirationType.
const (
	DateTimeBankItemSchemaCharacterCooldownExpiration BankItemSchemaCharacterCooldownExpirationType = "time.Time"
	NullBankItemSchemaCharacterCooldownExpiration     BankItemSchemaCharacterCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether BankItemSchemaCharacterCooldownExpiration is time.Time.
func (s BankItemSchemaCharacterCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeBankItemSchemaCharacterCooldownExpiration
}

// IsNull reports whether BankItemSchemaCharacterCooldownExpiration is struct{}.
func (s BankItemSchemaCharacterCooldownExpiration) IsNull() bool {
	return s.Type == NullBankItemSchemaCharacterCooldownExpiration
}

// SetDateTime sets BankItemSchemaCharacterCooldownExpiration to time.Time.
func (s *BankItemSchemaCharacterCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeBankItemSchemaCharacterCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if BankItemSchemaCharacterCooldownExpiration is time.Time.
func (s BankItemSchemaCharacterCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeBankItemSchemaCharacterCooldownExpiration returns new BankItemSchemaCharacterCooldownExpiration from time.Time.
func NewDateTimeBankItemSchemaCharacterCooldownExpiration(v time.Time) BankItemSchemaCharacterCooldownExpiration {
	var s BankItemSchemaCharacterCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets BankItemSchemaCharacterCooldownExpiration to struct{}.
func (s *BankItemSchemaCharacterCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullBankItemSchemaCharacterCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if BankItemSchemaCharacterCooldownExpiration is struct{}.
func (s BankItemSchemaCharacterCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullBankItemSchemaCharacterCooldownExpiration returns new BankItemSchemaCharacterCooldownExpiration from struct{}.
func NewNullBankItemSchemaCharacterCooldownExpiration(v struct{}) BankItemSchemaCharacterCooldownExpiration {
	var s BankItemSchemaCharacterCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type BankItemSchemaCharacterSkin string

const (
	BankItemSchemaCharacterSkinMen1   BankItemSchemaCharacterSkin = "men1"
	BankItemSchemaCharacterSkinMen2   BankItemSchemaCharacterSkin = "men2"
	BankItemSchemaCharacterSkinMen3   BankItemSchemaCharacterSkin = "men3"
	BankItemSchemaCharacterSkinWomen1 BankItemSchemaCharacterSkin = "women1"
	BankItemSchemaCharacterSkinWomen2 BankItemSchemaCharacterSkin = "women2"
	BankItemSchemaCharacterSkinWomen3 BankItemSchemaCharacterSkin = "women3"
)

// AllValues returns all BankItemSchemaCharacterSkin values.
func (BankItemSchemaCharacterSkin) AllValues() []BankItemSchemaCharacterSkin {
	return []BankItemSchemaCharacterSkin{
		BankItemSchemaCharacterSkinMen1,
		BankItemSchemaCharacterSkinMen2,
		BankItemSchemaCharacterSkinMen3,
		BankItemSchemaCharacterSkinWomen1,
		BankItemSchemaCharacterSkinWomen2,
		BankItemSchemaCharacterSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BankItemSchemaCharacterSkin) MarshalText() ([]byte, error) {
	switch s {
	case BankItemSchemaCharacterSkinMen1:
		return []byte(s), nil
	case BankItemSchemaCharacterSkinMen2:
		return []byte(s), nil
	case BankItemSchemaCharacterSkinMen3:
		return []byte(s), nil
	case BankItemSchemaCharacterSkinWomen1:
		return []byte(s), nil
	case BankItemSchemaCharacterSkinWomen2:
		return []byte(s), nil
	case BankItemSchemaCharacterSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BankItemSchemaCharacterSkin) UnmarshalText(data []byte) error {
	switch BankItemSchemaCharacterSkin(data) {
	case BankItemSchemaCharacterSkinMen1:
		*s = BankItemSchemaCharacterSkinMen1
		return nil
	case BankItemSchemaCharacterSkinMen2:
		*s = BankItemSchemaCharacterSkinMen2
		return nil
	case BankItemSchemaCharacterSkinMen3:
		*s = BankItemSchemaCharacterSkinMen3
		return nil
	case BankItemSchemaCharacterSkinWomen1:
		*s = BankItemSchemaCharacterSkinWomen1
		return nil
	case BankItemSchemaCharacterSkinWomen2:
		*s = BankItemSchemaCharacterSkinWomen2
		return nil
	case BankItemSchemaCharacterSkinWomen3:
		*s = BankItemSchemaCharacterSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type BankItemSchemaCooldown struct {
	// The total seconds of the cooldown.
	TotalSeconds int `json:"total_seconds"`
	// The remaining seconds of the cooldown.
	RemainingSeconds int `json:"remaining_seconds"`
	// The expiration of the cooldown.
	Expiration time.Time `json:"expiration"`
	// The reason of the cooldown.
	Reason BankItemSchemaCooldownReason `json:"reason"`
}

// GetTotalSeconds returns the value of TotalSeconds.
func (s *BankItemSchemaCooldown) GetTotalSeconds() int {
	return s.TotalSeconds
}

// GetRemainingSeconds returns the value of RemainingSeconds.
func (s *BankItemSchemaCooldown) GetRemainingSeconds() int {
	return s.RemainingSeconds
}

// GetExpiration returns the value of Expiration.
func (s *BankItemSchemaCooldown) GetExpiration() time.Time {
	return s.Expiration
}

// GetReason returns the value of Reason.
func (s *BankItemSchemaCooldown) GetReason() BankItemSchemaCooldownReason {
	return s.Reason
}

// SetTotalSeconds sets the value of TotalSeconds.
func (s *BankItemSchemaCooldown) SetTotalSeconds(val int) {
	s.TotalSeconds = val
}

// SetRemainingSeconds sets the value of RemainingSeconds.
func (s *BankItemSchemaCooldown) SetRemainingSeconds(val int) {
	s.RemainingSeconds = val
}

// SetExpiration sets the value of Expiration.
func (s *BankItemSchemaCooldown) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetReason sets the value of Reason.
func (s *BankItemSchemaCooldown) SetReason(val BankItemSchemaCooldownReason) {
	s.Reason = val
}

// The reason of the cooldown.
type BankItemSchemaCooldownReason string

const (
	BankItemSchemaCooldownReasonMovement     BankItemSchemaCooldownReason = "movement"
	BankItemSchemaCooldownReasonFight        BankItemSchemaCooldownReason = "fight"
	BankItemSchemaCooldownReasonCrafting     BankItemSchemaCooldownReason = "crafting"
	BankItemSchemaCooldownReasonGathering    BankItemSchemaCooldownReason = "gathering"
	BankItemSchemaCooldownReasonBuyGe        BankItemSchemaCooldownReason = "buy_ge"
	BankItemSchemaCooldownReasonSellGe       BankItemSchemaCooldownReason = "sell_ge"
	BankItemSchemaCooldownReasonDeleteItem   BankItemSchemaCooldownReason = "delete_item"
	BankItemSchemaCooldownReasonDepositBank  BankItemSchemaCooldownReason = "deposit_bank"
	BankItemSchemaCooldownReasonWithdrawBank BankItemSchemaCooldownReason = "withdraw_bank"
	BankItemSchemaCooldownReasonEquip        BankItemSchemaCooldownReason = "equip"
	BankItemSchemaCooldownReasonUnequip      BankItemSchemaCooldownReason = "unequip"
	BankItemSchemaCooldownReasonTask         BankItemSchemaCooldownReason = "task"
	BankItemSchemaCooldownReasonRecycling    BankItemSchemaCooldownReason = "recycling"
)

// AllValues returns all BankItemSchemaCooldownReason values.
func (BankItemSchemaCooldownReason) AllValues() []BankItemSchemaCooldownReason {
	return []BankItemSchemaCooldownReason{
		BankItemSchemaCooldownReasonMovement,
		BankItemSchemaCooldownReasonFight,
		BankItemSchemaCooldownReasonCrafting,
		BankItemSchemaCooldownReasonGathering,
		BankItemSchemaCooldownReasonBuyGe,
		BankItemSchemaCooldownReasonSellGe,
		BankItemSchemaCooldownReasonDeleteItem,
		BankItemSchemaCooldownReasonDepositBank,
		BankItemSchemaCooldownReasonWithdrawBank,
		BankItemSchemaCooldownReasonEquip,
		BankItemSchemaCooldownReasonUnequip,
		BankItemSchemaCooldownReasonTask,
		BankItemSchemaCooldownReasonRecycling,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s BankItemSchemaCooldownReason) MarshalText() ([]byte, error) {
	switch s {
	case BankItemSchemaCooldownReasonMovement:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonFight:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonCrafting:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonGathering:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonBuyGe:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonSellGe:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonDeleteItem:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonDepositBank:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonWithdrawBank:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonEquip:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonUnequip:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonTask:
		return []byte(s), nil
	case BankItemSchemaCooldownReasonRecycling:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *BankItemSchemaCooldownReason) UnmarshalText(data []byte) error {
	switch BankItemSchemaCooldownReason(data) {
	case BankItemSchemaCooldownReasonMovement:
		*s = BankItemSchemaCooldownReasonMovement
		return nil
	case BankItemSchemaCooldownReasonFight:
		*s = BankItemSchemaCooldownReasonFight
		return nil
	case BankItemSchemaCooldownReasonCrafting:
		*s = BankItemSchemaCooldownReasonCrafting
		return nil
	case BankItemSchemaCooldownReasonGathering:
		*s = BankItemSchemaCooldownReasonGathering
		return nil
	case BankItemSchemaCooldownReasonBuyGe:
		*s = BankItemSchemaCooldownReasonBuyGe
		return nil
	case BankItemSchemaCooldownReasonSellGe:
		*s = BankItemSchemaCooldownReasonSellGe
		return nil
	case BankItemSchemaCooldownReasonDeleteItem:
		*s = BankItemSchemaCooldownReasonDeleteItem
		return nil
	case BankItemSchemaCooldownReasonDepositBank:
		*s = BankItemSchemaCooldownReasonDepositBank
		return nil
	case BankItemSchemaCooldownReasonWithdrawBank:
		*s = BankItemSchemaCooldownReasonWithdrawBank
		return nil
	case BankItemSchemaCooldownReasonEquip:
		*s = BankItemSchemaCooldownReasonEquip
		return nil
	case BankItemSchemaCooldownReasonUnequip:
		*s = BankItemSchemaCooldownReasonUnequip
		return nil
	case BankItemSchemaCooldownReasonTask:
		*s = BankItemSchemaCooldownReasonTask
		return nil
	case BankItemSchemaCooldownReasonRecycling:
		*s = BankItemSchemaCooldownReasonRecycling
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type BankItemSchemaItem struct {
	// Item name.
	Name string `json:"name"`
	// Item code. This is the item's unique identifier (ID).
	Code string `json:"code"`
	// Item level.
	Level int `json:"level"`
	// Item type.
	Type string `json:"type"`
	// Item subtype.
	Subtype string `json:"subtype"`
	// Item description.
	Description string `json:"description"`
	// List of object effects. For equipment, it will include item stats.
	Effects []ItemEffectSchema `json:"effects"`
	// Craft information. If applicable.
	Craft OptBankItemSchemaItemCraft `json:"craft"`
}

// GetName returns the value of Name.
func (s *BankItemSchemaItem) GetName() string {
	return s.Name
}

// GetCode returns the value of Code.
func (s *BankItemSchemaItem) GetCode() string {
	return s.Code
}

// GetLevel returns the value of Level.
func (s *BankItemSchemaItem) GetLevel() int {
	return s.Level
}

// GetType returns the value of Type.
func (s *BankItemSchemaItem) GetType() string {
	return s.Type
}

// GetSubtype returns the value of Subtype.
func (s *BankItemSchemaItem) GetSubtype() string {
	return s.Subtype
}

// GetDescription returns the value of Description.
func (s *BankItemSchemaItem) GetDescription() string {
	return s.Description
}

// GetEffects returns the value of Effects.
func (s *BankItemSchemaItem) GetEffects() []ItemEffectSchema {
	return s.Effects
}

// GetCraft returns the value of Craft.
func (s *BankItemSchemaItem) GetCraft() OptBankItemSchemaItemCraft {
	return s.Craft
}

// SetName sets the value of Name.
func (s *BankItemSchemaItem) SetName(val string) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *BankItemSchemaItem) SetCode(val string) {
	s.Code = val
}

// SetLevel sets the value of Level.
func (s *BankItemSchemaItem) SetLevel(val int) {
	s.Level = val
}

// SetType sets the value of Type.
func (s *BankItemSchemaItem) SetType(val string) {
	s.Type = val
}

// SetSubtype sets the value of Subtype.
func (s *BankItemSchemaItem) SetSubtype(val string) {
	s.Subtype = val
}

// SetDescription sets the value of Description.
func (s *BankItemSchemaItem) SetDescription(val string) {
	s.Description = val
}

// SetEffects sets the value of Effects.
func (s *BankItemSchemaItem) SetEffects(val []ItemEffectSchema) {
	s.Effects = val
}

// SetCraft sets the value of Craft.
func (s *BankItemSchemaItem) SetCraft(val OptBankItemSchemaItemCraft) {
	s.Craft = val
}

// Craft information. If applicable.
// BankItemSchemaItemCraft represents sum type.
type BankItemSchemaItemCraft struct {
	Type        BankItemSchemaItemCraftType // switch on this field
	CraftSchema CraftSchema
	Null        struct{}
}

// BankItemSchemaItemCraftType is oneOf type of BankItemSchemaItemCraft.
type BankItemSchemaItemCraftType string

// Possible values for BankItemSchemaItemCraftType.
const (
	CraftSchemaBankItemSchemaItemCraft BankItemSchemaItemCraftType = "CraftSchema"
	NullBankItemSchemaItemCraft        BankItemSchemaItemCraftType = "struct{}"
)

// IsCraftSchema reports whether BankItemSchemaItemCraft is CraftSchema.
func (s BankItemSchemaItemCraft) IsCraftSchema() bool {
	return s.Type == CraftSchemaBankItemSchemaItemCraft
}

// IsNull reports whether BankItemSchemaItemCraft is struct{}.
func (s BankItemSchemaItemCraft) IsNull() bool { return s.Type == NullBankItemSchemaItemCraft }

// SetCraftSchema sets BankItemSchemaItemCraft to CraftSchema.
func (s *BankItemSchemaItemCraft) SetCraftSchema(v CraftSchema) {
	s.Type = CraftSchemaBankItemSchemaItemCraft
	s.CraftSchema = v
}

// GetCraftSchema returns CraftSchema and true boolean if BankItemSchemaItemCraft is CraftSchema.
func (s BankItemSchemaItemCraft) GetCraftSchema() (v CraftSchema, ok bool) {
	if !s.IsCraftSchema() {
		return v, false
	}
	return s.CraftSchema, true
}

// NewCraftSchemaBankItemSchemaItemCraft returns new BankItemSchemaItemCraft from CraftSchema.
func NewCraftSchemaBankItemSchemaItemCraft(v CraftSchema) BankItemSchemaItemCraft {
	var s BankItemSchemaItemCraft
	s.SetCraftSchema(v)
	return s
}

// SetNull sets BankItemSchemaItemCraft to struct{}.
func (s *BankItemSchemaItemCraft) SetNull(v struct{}) {
	s.Type = NullBankItemSchemaItemCraft
	s.Null = v
}

// GetNull returns struct{} and true boolean if BankItemSchemaItemCraft is struct{}.
func (s BankItemSchemaItemCraft) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullBankItemSchemaItemCraft returns new BankItemSchemaItemCraft from struct{}.
func NewNullBankItemSchemaItemCraft(v struct{}) BankItemSchemaItemCraft {
	var s BankItemSchemaItemCraft
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/ChangePassword
type ChangePassword struct {
	// Your password.
	Password string `json:"password"`
}

// GetPassword returns the value of Password.
func (s *ChangePassword) GetPassword() string {
	return s.Password
}

// SetPassword sets the value of Password.
func (s *ChangePassword) SetPassword(val string) {
	s.Password = val
}

// ChangePasswordMyChangePasswordPostCode458 is response for ChangePasswordMyChangePasswordPost operation.
type ChangePasswordMyChangePasswordPostCode458 struct{}

func (*ChangePasswordMyChangePasswordPostCode458) changePasswordMyChangePasswordPostRes() {}

// Ref: #/components/schemas/CharacterFightDataSchema
type CharacterFightDataSchema struct {
	// Cooldown details.
	Cooldown CharacterFightDataSchemaCooldown `json:"cooldown"`
	// Fight details.
	Fight CharacterFightDataSchemaFight `json:"fight"`
	// Player details.
	Character CharacterFightDataSchemaCharacter `json:"character"`
}

// GetCooldown returns the value of Cooldown.
func (s *CharacterFightDataSchema) GetCooldown() CharacterFightDataSchemaCooldown {
	return s.Cooldown
}

// GetFight returns the value of Fight.
func (s *CharacterFightDataSchema) GetFight() CharacterFightDataSchemaFight {
	return s.Fight
}

// GetCharacter returns the value of Character.
func (s *CharacterFightDataSchema) GetCharacter() CharacterFightDataSchemaCharacter {
	return s.Character
}

// SetCooldown sets the value of Cooldown.
func (s *CharacterFightDataSchema) SetCooldown(val CharacterFightDataSchemaCooldown) {
	s.Cooldown = val
}

// SetFight sets the value of Fight.
func (s *CharacterFightDataSchema) SetFight(val CharacterFightDataSchemaFight) {
	s.Fight = val
}

// SetCharacter sets the value of Character.
func (s *CharacterFightDataSchema) SetCharacter(val CharacterFightDataSchemaCharacter) {
	s.Character = val
}

type CharacterFightDataSchemaCharacter struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin CharacterFightDataSchemaCharacterSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptCharacterFightDataSchemaCharacterCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *CharacterFightDataSchemaCharacter) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *CharacterFightDataSchemaCharacter) GetSkin() CharacterFightDataSchemaCharacterSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *CharacterFightDataSchemaCharacter) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *CharacterFightDataSchemaCharacter) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *CharacterFightDataSchemaCharacter) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *CharacterFightDataSchemaCharacter) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *CharacterFightDataSchemaCharacter) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *CharacterFightDataSchemaCharacter) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *CharacterFightDataSchemaCharacter) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *CharacterFightDataSchemaCharacter) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *CharacterFightDataSchemaCharacter) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *CharacterFightDataSchemaCharacter) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *CharacterFightDataSchemaCharacter) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *CharacterFightDataSchemaCharacter) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *CharacterFightDataSchemaCharacter) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *CharacterFightDataSchemaCharacter) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *CharacterFightDataSchemaCharacter) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *CharacterFightDataSchemaCharacter) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *CharacterFightDataSchemaCharacter) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *CharacterFightDataSchemaCharacter) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *CharacterFightDataSchemaCharacter) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *CharacterFightDataSchemaCharacter) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *CharacterFightDataSchemaCharacter) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *CharacterFightDataSchemaCharacter) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *CharacterFightDataSchemaCharacter) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *CharacterFightDataSchemaCharacter) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *CharacterFightDataSchemaCharacter) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *CharacterFightDataSchemaCharacter) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *CharacterFightDataSchemaCharacter) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *CharacterFightDataSchemaCharacter) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *CharacterFightDataSchemaCharacter) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *CharacterFightDataSchemaCharacter) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *CharacterFightDataSchemaCharacter) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *CharacterFightDataSchemaCharacter) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *CharacterFightDataSchemaCharacter) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *CharacterFightDataSchemaCharacter) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *CharacterFightDataSchemaCharacter) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *CharacterFightDataSchemaCharacter) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *CharacterFightDataSchemaCharacter) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *CharacterFightDataSchemaCharacter) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *CharacterFightDataSchemaCharacter) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *CharacterFightDataSchemaCharacter) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *CharacterFightDataSchemaCharacter) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *CharacterFightDataSchemaCharacter) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *CharacterFightDataSchemaCharacter) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *CharacterFightDataSchemaCharacter) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *CharacterFightDataSchemaCharacter) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *CharacterFightDataSchemaCharacter) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *CharacterFightDataSchemaCharacter) GetCooldownExpiration() OptCharacterFightDataSchemaCharacterCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *CharacterFightDataSchemaCharacter) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *CharacterFightDataSchemaCharacter) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *CharacterFightDataSchemaCharacter) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *CharacterFightDataSchemaCharacter) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *CharacterFightDataSchemaCharacter) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *CharacterFightDataSchemaCharacter) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *CharacterFightDataSchemaCharacter) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *CharacterFightDataSchemaCharacter) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *CharacterFightDataSchemaCharacter) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *CharacterFightDataSchemaCharacter) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *CharacterFightDataSchemaCharacter) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *CharacterFightDataSchemaCharacter) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *CharacterFightDataSchemaCharacter) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *CharacterFightDataSchemaCharacter) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *CharacterFightDataSchemaCharacter) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *CharacterFightDataSchemaCharacter) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *CharacterFightDataSchemaCharacter) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *CharacterFightDataSchemaCharacter) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *CharacterFightDataSchemaCharacter) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *CharacterFightDataSchemaCharacter) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *CharacterFightDataSchemaCharacter) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *CharacterFightDataSchemaCharacter) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *CharacterFightDataSchemaCharacter) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *CharacterFightDataSchemaCharacter) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *CharacterFightDataSchemaCharacter) SetSkin(val CharacterFightDataSchemaCharacterSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *CharacterFightDataSchemaCharacter) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *CharacterFightDataSchemaCharacter) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *CharacterFightDataSchemaCharacter) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *CharacterFightDataSchemaCharacter) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *CharacterFightDataSchemaCharacter) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *CharacterFightDataSchemaCharacter) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *CharacterFightDataSchemaCharacter) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *CharacterFightDataSchemaCharacter) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *CharacterFightDataSchemaCharacter) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *CharacterFightDataSchemaCharacter) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *CharacterFightDataSchemaCharacter) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *CharacterFightDataSchemaCharacter) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *CharacterFightDataSchemaCharacter) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *CharacterFightDataSchemaCharacter) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *CharacterFightDataSchemaCharacter) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *CharacterFightDataSchemaCharacter) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *CharacterFightDataSchemaCharacter) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *CharacterFightDataSchemaCharacter) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *CharacterFightDataSchemaCharacter) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *CharacterFightDataSchemaCharacter) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *CharacterFightDataSchemaCharacter) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *CharacterFightDataSchemaCharacter) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *CharacterFightDataSchemaCharacter) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *CharacterFightDataSchemaCharacter) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *CharacterFightDataSchemaCharacter) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *CharacterFightDataSchemaCharacter) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *CharacterFightDataSchemaCharacter) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *CharacterFightDataSchemaCharacter) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *CharacterFightDataSchemaCharacter) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *CharacterFightDataSchemaCharacter) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *CharacterFightDataSchemaCharacter) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *CharacterFightDataSchemaCharacter) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *CharacterFightDataSchemaCharacter) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *CharacterFightDataSchemaCharacter) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *CharacterFightDataSchemaCharacter) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *CharacterFightDataSchemaCharacter) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *CharacterFightDataSchemaCharacter) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *CharacterFightDataSchemaCharacter) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *CharacterFightDataSchemaCharacter) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *CharacterFightDataSchemaCharacter) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *CharacterFightDataSchemaCharacter) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *CharacterFightDataSchemaCharacter) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *CharacterFightDataSchemaCharacter) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *CharacterFightDataSchemaCharacter) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *CharacterFightDataSchemaCharacter) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *CharacterFightDataSchemaCharacter) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *CharacterFightDataSchemaCharacter) SetCooldownExpiration(val OptCharacterFightDataSchemaCharacterCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *CharacterFightDataSchemaCharacter) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *CharacterFightDataSchemaCharacter) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *CharacterFightDataSchemaCharacter) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *CharacterFightDataSchemaCharacter) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *CharacterFightDataSchemaCharacter) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *CharacterFightDataSchemaCharacter) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *CharacterFightDataSchemaCharacter) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *CharacterFightDataSchemaCharacter) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *CharacterFightDataSchemaCharacter) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *CharacterFightDataSchemaCharacter) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *CharacterFightDataSchemaCharacter) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *CharacterFightDataSchemaCharacter) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *CharacterFightDataSchemaCharacter) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *CharacterFightDataSchemaCharacter) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *CharacterFightDataSchemaCharacter) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *CharacterFightDataSchemaCharacter) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *CharacterFightDataSchemaCharacter) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *CharacterFightDataSchemaCharacter) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *CharacterFightDataSchemaCharacter) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *CharacterFightDataSchemaCharacter) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *CharacterFightDataSchemaCharacter) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *CharacterFightDataSchemaCharacter) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *CharacterFightDataSchemaCharacter) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// CharacterFightDataSchemaCharacterCooldownExpiration represents sum type.
type CharacterFightDataSchemaCharacterCooldownExpiration struct {
	Type     CharacterFightDataSchemaCharacterCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// CharacterFightDataSchemaCharacterCooldownExpirationType is oneOf type of CharacterFightDataSchemaCharacterCooldownExpiration.
type CharacterFightDataSchemaCharacterCooldownExpirationType string

// Possible values for CharacterFightDataSchemaCharacterCooldownExpirationType.
const (
	DateTimeCharacterFightDataSchemaCharacterCooldownExpiration CharacterFightDataSchemaCharacterCooldownExpirationType = "time.Time"
	NullCharacterFightDataSchemaCharacterCooldownExpiration     CharacterFightDataSchemaCharacterCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether CharacterFightDataSchemaCharacterCooldownExpiration is time.Time.
func (s CharacterFightDataSchemaCharacterCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeCharacterFightDataSchemaCharacterCooldownExpiration
}

// IsNull reports whether CharacterFightDataSchemaCharacterCooldownExpiration is struct{}.
func (s CharacterFightDataSchemaCharacterCooldownExpiration) IsNull() bool {
	return s.Type == NullCharacterFightDataSchemaCharacterCooldownExpiration
}

// SetDateTime sets CharacterFightDataSchemaCharacterCooldownExpiration to time.Time.
func (s *CharacterFightDataSchemaCharacterCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeCharacterFightDataSchemaCharacterCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if CharacterFightDataSchemaCharacterCooldownExpiration is time.Time.
func (s CharacterFightDataSchemaCharacterCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeCharacterFightDataSchemaCharacterCooldownExpiration returns new CharacterFightDataSchemaCharacterCooldownExpiration from time.Time.
func NewDateTimeCharacterFightDataSchemaCharacterCooldownExpiration(v time.Time) CharacterFightDataSchemaCharacterCooldownExpiration {
	var s CharacterFightDataSchemaCharacterCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets CharacterFightDataSchemaCharacterCooldownExpiration to struct{}.
func (s *CharacterFightDataSchemaCharacterCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullCharacterFightDataSchemaCharacterCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if CharacterFightDataSchemaCharacterCooldownExpiration is struct{}.
func (s CharacterFightDataSchemaCharacterCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullCharacterFightDataSchemaCharacterCooldownExpiration returns new CharacterFightDataSchemaCharacterCooldownExpiration from struct{}.
func NewNullCharacterFightDataSchemaCharacterCooldownExpiration(v struct{}) CharacterFightDataSchemaCharacterCooldownExpiration {
	var s CharacterFightDataSchemaCharacterCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type CharacterFightDataSchemaCharacterSkin string

const (
	CharacterFightDataSchemaCharacterSkinMen1   CharacterFightDataSchemaCharacterSkin = "men1"
	CharacterFightDataSchemaCharacterSkinMen2   CharacterFightDataSchemaCharacterSkin = "men2"
	CharacterFightDataSchemaCharacterSkinMen3   CharacterFightDataSchemaCharacterSkin = "men3"
	CharacterFightDataSchemaCharacterSkinWomen1 CharacterFightDataSchemaCharacterSkin = "women1"
	CharacterFightDataSchemaCharacterSkinWomen2 CharacterFightDataSchemaCharacterSkin = "women2"
	CharacterFightDataSchemaCharacterSkinWomen3 CharacterFightDataSchemaCharacterSkin = "women3"
)

// AllValues returns all CharacterFightDataSchemaCharacterSkin values.
func (CharacterFightDataSchemaCharacterSkin) AllValues() []CharacterFightDataSchemaCharacterSkin {
	return []CharacterFightDataSchemaCharacterSkin{
		CharacterFightDataSchemaCharacterSkinMen1,
		CharacterFightDataSchemaCharacterSkinMen2,
		CharacterFightDataSchemaCharacterSkinMen3,
		CharacterFightDataSchemaCharacterSkinWomen1,
		CharacterFightDataSchemaCharacterSkinWomen2,
		CharacterFightDataSchemaCharacterSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CharacterFightDataSchemaCharacterSkin) MarshalText() ([]byte, error) {
	switch s {
	case CharacterFightDataSchemaCharacterSkinMen1:
		return []byte(s), nil
	case CharacterFightDataSchemaCharacterSkinMen2:
		return []byte(s), nil
	case CharacterFightDataSchemaCharacterSkinMen3:
		return []byte(s), nil
	case CharacterFightDataSchemaCharacterSkinWomen1:
		return []byte(s), nil
	case CharacterFightDataSchemaCharacterSkinWomen2:
		return []byte(s), nil
	case CharacterFightDataSchemaCharacterSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CharacterFightDataSchemaCharacterSkin) UnmarshalText(data []byte) error {
	switch CharacterFightDataSchemaCharacterSkin(data) {
	case CharacterFightDataSchemaCharacterSkinMen1:
		*s = CharacterFightDataSchemaCharacterSkinMen1
		return nil
	case CharacterFightDataSchemaCharacterSkinMen2:
		*s = CharacterFightDataSchemaCharacterSkinMen2
		return nil
	case CharacterFightDataSchemaCharacterSkinMen3:
		*s = CharacterFightDataSchemaCharacterSkinMen3
		return nil
	case CharacterFightDataSchemaCharacterSkinWomen1:
		*s = CharacterFightDataSchemaCharacterSkinWomen1
		return nil
	case CharacterFightDataSchemaCharacterSkinWomen2:
		*s = CharacterFightDataSchemaCharacterSkinWomen2
		return nil
	case CharacterFightDataSchemaCharacterSkinWomen3:
		*s = CharacterFightDataSchemaCharacterSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CharacterFightDataSchemaCooldown struct {
	// The total seconds of the cooldown.
	TotalSeconds int `json:"total_seconds"`
	// The remaining seconds of the cooldown.
	RemainingSeconds int `json:"remaining_seconds"`
	// The expiration of the cooldown.
	Expiration time.Time `json:"expiration"`
	// The reason of the cooldown.
	Reason CharacterFightDataSchemaCooldownReason `json:"reason"`
}

// GetTotalSeconds returns the value of TotalSeconds.
func (s *CharacterFightDataSchemaCooldown) GetTotalSeconds() int {
	return s.TotalSeconds
}

// GetRemainingSeconds returns the value of RemainingSeconds.
func (s *CharacterFightDataSchemaCooldown) GetRemainingSeconds() int {
	return s.RemainingSeconds
}

// GetExpiration returns the value of Expiration.
func (s *CharacterFightDataSchemaCooldown) GetExpiration() time.Time {
	return s.Expiration
}

// GetReason returns the value of Reason.
func (s *CharacterFightDataSchemaCooldown) GetReason() CharacterFightDataSchemaCooldownReason {
	return s.Reason
}

// SetTotalSeconds sets the value of TotalSeconds.
func (s *CharacterFightDataSchemaCooldown) SetTotalSeconds(val int) {
	s.TotalSeconds = val
}

// SetRemainingSeconds sets the value of RemainingSeconds.
func (s *CharacterFightDataSchemaCooldown) SetRemainingSeconds(val int) {
	s.RemainingSeconds = val
}

// SetExpiration sets the value of Expiration.
func (s *CharacterFightDataSchemaCooldown) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetReason sets the value of Reason.
func (s *CharacterFightDataSchemaCooldown) SetReason(val CharacterFightDataSchemaCooldownReason) {
	s.Reason = val
}

// The reason of the cooldown.
type CharacterFightDataSchemaCooldownReason string

const (
	CharacterFightDataSchemaCooldownReasonMovement     CharacterFightDataSchemaCooldownReason = "movement"
	CharacterFightDataSchemaCooldownReasonFight        CharacterFightDataSchemaCooldownReason = "fight"
	CharacterFightDataSchemaCooldownReasonCrafting     CharacterFightDataSchemaCooldownReason = "crafting"
	CharacterFightDataSchemaCooldownReasonGathering    CharacterFightDataSchemaCooldownReason = "gathering"
	CharacterFightDataSchemaCooldownReasonBuyGe        CharacterFightDataSchemaCooldownReason = "buy_ge"
	CharacterFightDataSchemaCooldownReasonSellGe       CharacterFightDataSchemaCooldownReason = "sell_ge"
	CharacterFightDataSchemaCooldownReasonDeleteItem   CharacterFightDataSchemaCooldownReason = "delete_item"
	CharacterFightDataSchemaCooldownReasonDepositBank  CharacterFightDataSchemaCooldownReason = "deposit_bank"
	CharacterFightDataSchemaCooldownReasonWithdrawBank CharacterFightDataSchemaCooldownReason = "withdraw_bank"
	CharacterFightDataSchemaCooldownReasonEquip        CharacterFightDataSchemaCooldownReason = "equip"
	CharacterFightDataSchemaCooldownReasonUnequip      CharacterFightDataSchemaCooldownReason = "unequip"
	CharacterFightDataSchemaCooldownReasonTask         CharacterFightDataSchemaCooldownReason = "task"
	CharacterFightDataSchemaCooldownReasonRecycling    CharacterFightDataSchemaCooldownReason = "recycling"
)

// AllValues returns all CharacterFightDataSchemaCooldownReason values.
func (CharacterFightDataSchemaCooldownReason) AllValues() []CharacterFightDataSchemaCooldownReason {
	return []CharacterFightDataSchemaCooldownReason{
		CharacterFightDataSchemaCooldownReasonMovement,
		CharacterFightDataSchemaCooldownReasonFight,
		CharacterFightDataSchemaCooldownReasonCrafting,
		CharacterFightDataSchemaCooldownReasonGathering,
		CharacterFightDataSchemaCooldownReasonBuyGe,
		CharacterFightDataSchemaCooldownReasonSellGe,
		CharacterFightDataSchemaCooldownReasonDeleteItem,
		CharacterFightDataSchemaCooldownReasonDepositBank,
		CharacterFightDataSchemaCooldownReasonWithdrawBank,
		CharacterFightDataSchemaCooldownReasonEquip,
		CharacterFightDataSchemaCooldownReasonUnequip,
		CharacterFightDataSchemaCooldownReasonTask,
		CharacterFightDataSchemaCooldownReasonRecycling,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CharacterFightDataSchemaCooldownReason) MarshalText() ([]byte, error) {
	switch s {
	case CharacterFightDataSchemaCooldownReasonMovement:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonFight:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonCrafting:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonGathering:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonBuyGe:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonSellGe:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonDeleteItem:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonDepositBank:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonWithdrawBank:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonEquip:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonUnequip:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonTask:
		return []byte(s), nil
	case CharacterFightDataSchemaCooldownReasonRecycling:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CharacterFightDataSchemaCooldownReason) UnmarshalText(data []byte) error {
	switch CharacterFightDataSchemaCooldownReason(data) {
	case CharacterFightDataSchemaCooldownReasonMovement:
		*s = CharacterFightDataSchemaCooldownReasonMovement
		return nil
	case CharacterFightDataSchemaCooldownReasonFight:
		*s = CharacterFightDataSchemaCooldownReasonFight
		return nil
	case CharacterFightDataSchemaCooldownReasonCrafting:
		*s = CharacterFightDataSchemaCooldownReasonCrafting
		return nil
	case CharacterFightDataSchemaCooldownReasonGathering:
		*s = CharacterFightDataSchemaCooldownReasonGathering
		return nil
	case CharacterFightDataSchemaCooldownReasonBuyGe:
		*s = CharacterFightDataSchemaCooldownReasonBuyGe
		return nil
	case CharacterFightDataSchemaCooldownReasonSellGe:
		*s = CharacterFightDataSchemaCooldownReasonSellGe
		return nil
	case CharacterFightDataSchemaCooldownReasonDeleteItem:
		*s = CharacterFightDataSchemaCooldownReasonDeleteItem
		return nil
	case CharacterFightDataSchemaCooldownReasonDepositBank:
		*s = CharacterFightDataSchemaCooldownReasonDepositBank
		return nil
	case CharacterFightDataSchemaCooldownReasonWithdrawBank:
		*s = CharacterFightDataSchemaCooldownReasonWithdrawBank
		return nil
	case CharacterFightDataSchemaCooldownReasonEquip:
		*s = CharacterFightDataSchemaCooldownReasonEquip
		return nil
	case CharacterFightDataSchemaCooldownReasonUnequip:
		*s = CharacterFightDataSchemaCooldownReasonUnequip
		return nil
	case CharacterFightDataSchemaCooldownReasonTask:
		*s = CharacterFightDataSchemaCooldownReasonTask
		return nil
	case CharacterFightDataSchemaCooldownReasonRecycling:
		*s = CharacterFightDataSchemaCooldownReasonRecycling
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CharacterFightDataSchemaFight struct {
	// The amount of xp gained by the fight.
	Xp int `json:"xp"`
	// The amount of gold gained by the fight.
	Gold int `json:"gold"`
	// The items dropped by the fight.
	Drops []DropSchema `json:"drops"`
	// Numbers of the turns of the combat.
	Turns int `json:"turns"`
	// The amount of blocked hits by the monster.
	MonsterBlockedHits CharacterFightDataSchemaFightMonsterBlockedHits `json:"monster_blocked_hits"`
	// The amount of blocked hits by the player.
	PlayerBlockedHits CharacterFightDataSchemaFightPlayerBlockedHits `json:"player_blocked_hits"`
	// The fight logs.
	Logs []string `json:"logs"`
	// The result of the fight.
	Result CharacterFightDataSchemaFightResult `json:"result"`
}

// GetXp returns the value of Xp.
func (s *CharacterFightDataSchemaFight) GetXp() int {
	return s.Xp
}

// GetGold returns the value of Gold.
func (s *CharacterFightDataSchemaFight) GetGold() int {
	return s.Gold
}

// GetDrops returns the value of Drops.
func (s *CharacterFightDataSchemaFight) GetDrops() []DropSchema {
	return s.Drops
}

// GetTurns returns the value of Turns.
func (s *CharacterFightDataSchemaFight) GetTurns() int {
	return s.Turns
}

// GetMonsterBlockedHits returns the value of MonsterBlockedHits.
func (s *CharacterFightDataSchemaFight) GetMonsterBlockedHits() CharacterFightDataSchemaFightMonsterBlockedHits {
	return s.MonsterBlockedHits
}

// GetPlayerBlockedHits returns the value of PlayerBlockedHits.
func (s *CharacterFightDataSchemaFight) GetPlayerBlockedHits() CharacterFightDataSchemaFightPlayerBlockedHits {
	return s.PlayerBlockedHits
}

// GetLogs returns the value of Logs.
func (s *CharacterFightDataSchemaFight) GetLogs() []string {
	return s.Logs
}

// GetResult returns the value of Result.
func (s *CharacterFightDataSchemaFight) GetResult() CharacterFightDataSchemaFightResult {
	return s.Result
}

// SetXp sets the value of Xp.
func (s *CharacterFightDataSchemaFight) SetXp(val int) {
	s.Xp = val
}

// SetGold sets the value of Gold.
func (s *CharacterFightDataSchemaFight) SetGold(val int) {
	s.Gold = val
}

// SetDrops sets the value of Drops.
func (s *CharacterFightDataSchemaFight) SetDrops(val []DropSchema) {
	s.Drops = val
}

// SetTurns sets the value of Turns.
func (s *CharacterFightDataSchemaFight) SetTurns(val int) {
	s.Turns = val
}

// SetMonsterBlockedHits sets the value of MonsterBlockedHits.
func (s *CharacterFightDataSchemaFight) SetMonsterBlockedHits(val CharacterFightDataSchemaFightMonsterBlockedHits) {
	s.MonsterBlockedHits = val
}

// SetPlayerBlockedHits sets the value of PlayerBlockedHits.
func (s *CharacterFightDataSchemaFight) SetPlayerBlockedHits(val CharacterFightDataSchemaFightPlayerBlockedHits) {
	s.PlayerBlockedHits = val
}

// SetLogs sets the value of Logs.
func (s *CharacterFightDataSchemaFight) SetLogs(val []string) {
	s.Logs = val
}

// SetResult sets the value of Result.
func (s *CharacterFightDataSchemaFight) SetResult(val CharacterFightDataSchemaFightResult) {
	s.Result = val
}

type CharacterFightDataSchemaFightMonsterBlockedHits struct {
	// The amount of fire hits blocked.
	Fire int `json:"fire"`
	// The amount of earth hits blocked.
	Earth int `json:"earth"`
	// The amount of water hits blocked.
	Water int `json:"water"`
	// The amount of air hits blocked.
	Air int `json:"air"`
	// The amount of total hits blocked.
	Total int `json:"total"`
}

// GetFire returns the value of Fire.
func (s *CharacterFightDataSchemaFightMonsterBlockedHits) GetFire() int {
	return s.Fire
}

// GetEarth returns the value of Earth.
func (s *CharacterFightDataSchemaFightMonsterBlockedHits) GetEarth() int {
	return s.Earth
}

// GetWater returns the value of Water.
func (s *CharacterFightDataSchemaFightMonsterBlockedHits) GetWater() int {
	return s.Water
}

// GetAir returns the value of Air.
func (s *CharacterFightDataSchemaFightMonsterBlockedHits) GetAir() int {
	return s.Air
}

// GetTotal returns the value of Total.
func (s *CharacterFightDataSchemaFightMonsterBlockedHits) GetTotal() int {
	return s.Total
}

// SetFire sets the value of Fire.
func (s *CharacterFightDataSchemaFightMonsterBlockedHits) SetFire(val int) {
	s.Fire = val
}

// SetEarth sets the value of Earth.
func (s *CharacterFightDataSchemaFightMonsterBlockedHits) SetEarth(val int) {
	s.Earth = val
}

// SetWater sets the value of Water.
func (s *CharacterFightDataSchemaFightMonsterBlockedHits) SetWater(val int) {
	s.Water = val
}

// SetAir sets the value of Air.
func (s *CharacterFightDataSchemaFightMonsterBlockedHits) SetAir(val int) {
	s.Air = val
}

// SetTotal sets the value of Total.
func (s *CharacterFightDataSchemaFightMonsterBlockedHits) SetTotal(val int) {
	s.Total = val
}

type CharacterFightDataSchemaFightPlayerBlockedHits struct {
	// The amount of fire hits blocked.
	Fire int `json:"fire"`
	// The amount of earth hits blocked.
	Earth int `json:"earth"`
	// The amount of water hits blocked.
	Water int `json:"water"`
	// The amount of air hits blocked.
	Air int `json:"air"`
	// The amount of total hits blocked.
	Total int `json:"total"`
}

// GetFire returns the value of Fire.
func (s *CharacterFightDataSchemaFightPlayerBlockedHits) GetFire() int {
	return s.Fire
}

// GetEarth returns the value of Earth.
func (s *CharacterFightDataSchemaFightPlayerBlockedHits) GetEarth() int {
	return s.Earth
}

// GetWater returns the value of Water.
func (s *CharacterFightDataSchemaFightPlayerBlockedHits) GetWater() int {
	return s.Water
}

// GetAir returns the value of Air.
func (s *CharacterFightDataSchemaFightPlayerBlockedHits) GetAir() int {
	return s.Air
}

// GetTotal returns the value of Total.
func (s *CharacterFightDataSchemaFightPlayerBlockedHits) GetTotal() int {
	return s.Total
}

// SetFire sets the value of Fire.
func (s *CharacterFightDataSchemaFightPlayerBlockedHits) SetFire(val int) {
	s.Fire = val
}

// SetEarth sets the value of Earth.
func (s *CharacterFightDataSchemaFightPlayerBlockedHits) SetEarth(val int) {
	s.Earth = val
}

// SetWater sets the value of Water.
func (s *CharacterFightDataSchemaFightPlayerBlockedHits) SetWater(val int) {
	s.Water = val
}

// SetAir sets the value of Air.
func (s *CharacterFightDataSchemaFightPlayerBlockedHits) SetAir(val int) {
	s.Air = val
}

// SetTotal sets the value of Total.
func (s *CharacterFightDataSchemaFightPlayerBlockedHits) SetTotal(val int) {
	s.Total = val
}

// The result of the fight.
type CharacterFightDataSchemaFightResult string

const (
	CharacterFightDataSchemaFightResultWin  CharacterFightDataSchemaFightResult = "win"
	CharacterFightDataSchemaFightResultLose CharacterFightDataSchemaFightResult = "lose"
)

// AllValues returns all CharacterFightDataSchemaFightResult values.
func (CharacterFightDataSchemaFightResult) AllValues() []CharacterFightDataSchemaFightResult {
	return []CharacterFightDataSchemaFightResult{
		CharacterFightDataSchemaFightResultWin,
		CharacterFightDataSchemaFightResultLose,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CharacterFightDataSchemaFightResult) MarshalText() ([]byte, error) {
	switch s {
	case CharacterFightDataSchemaFightResultWin:
		return []byte(s), nil
	case CharacterFightDataSchemaFightResultLose:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CharacterFightDataSchemaFightResult) UnmarshalText(data []byte) error {
	switch CharacterFightDataSchemaFightResult(data) {
	case CharacterFightDataSchemaFightResultWin:
		*s = CharacterFightDataSchemaFightResultWin
		return nil
	case CharacterFightDataSchemaFightResultLose:
		*s = CharacterFightDataSchemaFightResultLose
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CharacterFightResponseSchema
type CharacterFightResponseSchema struct {
	Data CharacterFightDataSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *CharacterFightResponseSchema) GetData() CharacterFightDataSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *CharacterFightResponseSchema) SetData(val CharacterFightDataSchema) {
	s.Data = val
}

func (*CharacterFightResponseSchema) actionFightMyNameActionFightPostRes() {}

// Ref: #/components/schemas/CharacterMovementDataSchema
type CharacterMovementDataSchema struct {
	// Cooldown details.
	Cooldown CharacterMovementDataSchemaCooldown `json:"cooldown"`
	// Destination details.
	Destination CharacterMovementDataSchemaDestination `json:"destination"`
	// Character details.
	Character CharacterMovementDataSchemaCharacter `json:"character"`
}

// GetCooldown returns the value of Cooldown.
func (s *CharacterMovementDataSchema) GetCooldown() CharacterMovementDataSchemaCooldown {
	return s.Cooldown
}

// GetDestination returns the value of Destination.
func (s *CharacterMovementDataSchema) GetDestination() CharacterMovementDataSchemaDestination {
	return s.Destination
}

// GetCharacter returns the value of Character.
func (s *CharacterMovementDataSchema) GetCharacter() CharacterMovementDataSchemaCharacter {
	return s.Character
}

// SetCooldown sets the value of Cooldown.
func (s *CharacterMovementDataSchema) SetCooldown(val CharacterMovementDataSchemaCooldown) {
	s.Cooldown = val
}

// SetDestination sets the value of Destination.
func (s *CharacterMovementDataSchema) SetDestination(val CharacterMovementDataSchemaDestination) {
	s.Destination = val
}

// SetCharacter sets the value of Character.
func (s *CharacterMovementDataSchema) SetCharacter(val CharacterMovementDataSchemaCharacter) {
	s.Character = val
}

type CharacterMovementDataSchemaCharacter struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin CharacterMovementDataSchemaCharacterSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptCharacterMovementDataSchemaCharacterCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *CharacterMovementDataSchemaCharacter) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *CharacterMovementDataSchemaCharacter) GetSkin() CharacterMovementDataSchemaCharacterSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *CharacterMovementDataSchemaCharacter) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *CharacterMovementDataSchemaCharacter) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *CharacterMovementDataSchemaCharacter) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *CharacterMovementDataSchemaCharacter) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *CharacterMovementDataSchemaCharacter) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *CharacterMovementDataSchemaCharacter) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *CharacterMovementDataSchemaCharacter) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *CharacterMovementDataSchemaCharacter) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *CharacterMovementDataSchemaCharacter) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *CharacterMovementDataSchemaCharacter) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *CharacterMovementDataSchemaCharacter) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *CharacterMovementDataSchemaCharacter) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *CharacterMovementDataSchemaCharacter) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *CharacterMovementDataSchemaCharacter) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *CharacterMovementDataSchemaCharacter) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *CharacterMovementDataSchemaCharacter) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *CharacterMovementDataSchemaCharacter) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *CharacterMovementDataSchemaCharacter) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *CharacterMovementDataSchemaCharacter) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *CharacterMovementDataSchemaCharacter) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *CharacterMovementDataSchemaCharacter) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *CharacterMovementDataSchemaCharacter) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *CharacterMovementDataSchemaCharacter) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *CharacterMovementDataSchemaCharacter) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *CharacterMovementDataSchemaCharacter) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *CharacterMovementDataSchemaCharacter) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *CharacterMovementDataSchemaCharacter) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *CharacterMovementDataSchemaCharacter) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *CharacterMovementDataSchemaCharacter) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *CharacterMovementDataSchemaCharacter) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *CharacterMovementDataSchemaCharacter) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *CharacterMovementDataSchemaCharacter) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *CharacterMovementDataSchemaCharacter) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *CharacterMovementDataSchemaCharacter) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *CharacterMovementDataSchemaCharacter) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *CharacterMovementDataSchemaCharacter) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *CharacterMovementDataSchemaCharacter) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *CharacterMovementDataSchemaCharacter) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *CharacterMovementDataSchemaCharacter) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *CharacterMovementDataSchemaCharacter) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *CharacterMovementDataSchemaCharacter) GetCooldownExpiration() OptCharacterMovementDataSchemaCharacterCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *CharacterMovementDataSchemaCharacter) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *CharacterMovementDataSchemaCharacter) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *CharacterMovementDataSchemaCharacter) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *CharacterMovementDataSchemaCharacter) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *CharacterMovementDataSchemaCharacter) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *CharacterMovementDataSchemaCharacter) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *CharacterMovementDataSchemaCharacter) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *CharacterMovementDataSchemaCharacter) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *CharacterMovementDataSchemaCharacter) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *CharacterMovementDataSchemaCharacter) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *CharacterMovementDataSchemaCharacter) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *CharacterMovementDataSchemaCharacter) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *CharacterMovementDataSchemaCharacter) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *CharacterMovementDataSchemaCharacter) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *CharacterMovementDataSchemaCharacter) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *CharacterMovementDataSchemaCharacter) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *CharacterMovementDataSchemaCharacter) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *CharacterMovementDataSchemaCharacter) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *CharacterMovementDataSchemaCharacter) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *CharacterMovementDataSchemaCharacter) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *CharacterMovementDataSchemaCharacter) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *CharacterMovementDataSchemaCharacter) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *CharacterMovementDataSchemaCharacter) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *CharacterMovementDataSchemaCharacter) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *CharacterMovementDataSchemaCharacter) SetSkin(val CharacterMovementDataSchemaCharacterSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *CharacterMovementDataSchemaCharacter) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *CharacterMovementDataSchemaCharacter) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *CharacterMovementDataSchemaCharacter) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *CharacterMovementDataSchemaCharacter) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *CharacterMovementDataSchemaCharacter) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *CharacterMovementDataSchemaCharacter) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *CharacterMovementDataSchemaCharacter) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *CharacterMovementDataSchemaCharacter) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *CharacterMovementDataSchemaCharacter) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *CharacterMovementDataSchemaCharacter) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *CharacterMovementDataSchemaCharacter) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *CharacterMovementDataSchemaCharacter) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *CharacterMovementDataSchemaCharacter) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *CharacterMovementDataSchemaCharacter) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *CharacterMovementDataSchemaCharacter) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *CharacterMovementDataSchemaCharacter) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *CharacterMovementDataSchemaCharacter) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *CharacterMovementDataSchemaCharacter) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *CharacterMovementDataSchemaCharacter) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *CharacterMovementDataSchemaCharacter) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *CharacterMovementDataSchemaCharacter) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *CharacterMovementDataSchemaCharacter) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *CharacterMovementDataSchemaCharacter) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *CharacterMovementDataSchemaCharacter) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *CharacterMovementDataSchemaCharacter) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *CharacterMovementDataSchemaCharacter) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *CharacterMovementDataSchemaCharacter) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *CharacterMovementDataSchemaCharacter) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *CharacterMovementDataSchemaCharacter) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *CharacterMovementDataSchemaCharacter) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *CharacterMovementDataSchemaCharacter) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *CharacterMovementDataSchemaCharacter) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *CharacterMovementDataSchemaCharacter) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *CharacterMovementDataSchemaCharacter) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *CharacterMovementDataSchemaCharacter) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *CharacterMovementDataSchemaCharacter) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *CharacterMovementDataSchemaCharacter) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *CharacterMovementDataSchemaCharacter) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *CharacterMovementDataSchemaCharacter) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *CharacterMovementDataSchemaCharacter) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *CharacterMovementDataSchemaCharacter) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *CharacterMovementDataSchemaCharacter) SetCooldownExpiration(val OptCharacterMovementDataSchemaCharacterCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *CharacterMovementDataSchemaCharacter) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *CharacterMovementDataSchemaCharacter) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *CharacterMovementDataSchemaCharacter) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *CharacterMovementDataSchemaCharacter) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *CharacterMovementDataSchemaCharacter) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *CharacterMovementDataSchemaCharacter) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *CharacterMovementDataSchemaCharacter) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *CharacterMovementDataSchemaCharacter) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *CharacterMovementDataSchemaCharacter) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *CharacterMovementDataSchemaCharacter) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *CharacterMovementDataSchemaCharacter) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *CharacterMovementDataSchemaCharacter) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *CharacterMovementDataSchemaCharacter) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *CharacterMovementDataSchemaCharacter) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *CharacterMovementDataSchemaCharacter) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *CharacterMovementDataSchemaCharacter) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *CharacterMovementDataSchemaCharacter) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *CharacterMovementDataSchemaCharacter) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *CharacterMovementDataSchemaCharacter) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *CharacterMovementDataSchemaCharacter) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *CharacterMovementDataSchemaCharacter) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *CharacterMovementDataSchemaCharacter) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *CharacterMovementDataSchemaCharacter) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// CharacterMovementDataSchemaCharacterCooldownExpiration represents sum type.
type CharacterMovementDataSchemaCharacterCooldownExpiration struct {
	Type     CharacterMovementDataSchemaCharacterCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// CharacterMovementDataSchemaCharacterCooldownExpirationType is oneOf type of CharacterMovementDataSchemaCharacterCooldownExpiration.
type CharacterMovementDataSchemaCharacterCooldownExpirationType string

// Possible values for CharacterMovementDataSchemaCharacterCooldownExpirationType.
const (
	DateTimeCharacterMovementDataSchemaCharacterCooldownExpiration CharacterMovementDataSchemaCharacterCooldownExpirationType = "time.Time"
	NullCharacterMovementDataSchemaCharacterCooldownExpiration     CharacterMovementDataSchemaCharacterCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether CharacterMovementDataSchemaCharacterCooldownExpiration is time.Time.
func (s CharacterMovementDataSchemaCharacterCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeCharacterMovementDataSchemaCharacterCooldownExpiration
}

// IsNull reports whether CharacterMovementDataSchemaCharacterCooldownExpiration is struct{}.
func (s CharacterMovementDataSchemaCharacterCooldownExpiration) IsNull() bool {
	return s.Type == NullCharacterMovementDataSchemaCharacterCooldownExpiration
}

// SetDateTime sets CharacterMovementDataSchemaCharacterCooldownExpiration to time.Time.
func (s *CharacterMovementDataSchemaCharacterCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeCharacterMovementDataSchemaCharacterCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if CharacterMovementDataSchemaCharacterCooldownExpiration is time.Time.
func (s CharacterMovementDataSchemaCharacterCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeCharacterMovementDataSchemaCharacterCooldownExpiration returns new CharacterMovementDataSchemaCharacterCooldownExpiration from time.Time.
func NewDateTimeCharacterMovementDataSchemaCharacterCooldownExpiration(v time.Time) CharacterMovementDataSchemaCharacterCooldownExpiration {
	var s CharacterMovementDataSchemaCharacterCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets CharacterMovementDataSchemaCharacterCooldownExpiration to struct{}.
func (s *CharacterMovementDataSchemaCharacterCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullCharacterMovementDataSchemaCharacterCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if CharacterMovementDataSchemaCharacterCooldownExpiration is struct{}.
func (s CharacterMovementDataSchemaCharacterCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullCharacterMovementDataSchemaCharacterCooldownExpiration returns new CharacterMovementDataSchemaCharacterCooldownExpiration from struct{}.
func NewNullCharacterMovementDataSchemaCharacterCooldownExpiration(v struct{}) CharacterMovementDataSchemaCharacterCooldownExpiration {
	var s CharacterMovementDataSchemaCharacterCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type CharacterMovementDataSchemaCharacterSkin string

const (
	CharacterMovementDataSchemaCharacterSkinMen1   CharacterMovementDataSchemaCharacterSkin = "men1"
	CharacterMovementDataSchemaCharacterSkinMen2   CharacterMovementDataSchemaCharacterSkin = "men2"
	CharacterMovementDataSchemaCharacterSkinMen3   CharacterMovementDataSchemaCharacterSkin = "men3"
	CharacterMovementDataSchemaCharacterSkinWomen1 CharacterMovementDataSchemaCharacterSkin = "women1"
	CharacterMovementDataSchemaCharacterSkinWomen2 CharacterMovementDataSchemaCharacterSkin = "women2"
	CharacterMovementDataSchemaCharacterSkinWomen3 CharacterMovementDataSchemaCharacterSkin = "women3"
)

// AllValues returns all CharacterMovementDataSchemaCharacterSkin values.
func (CharacterMovementDataSchemaCharacterSkin) AllValues() []CharacterMovementDataSchemaCharacterSkin {
	return []CharacterMovementDataSchemaCharacterSkin{
		CharacterMovementDataSchemaCharacterSkinMen1,
		CharacterMovementDataSchemaCharacterSkinMen2,
		CharacterMovementDataSchemaCharacterSkinMen3,
		CharacterMovementDataSchemaCharacterSkinWomen1,
		CharacterMovementDataSchemaCharacterSkinWomen2,
		CharacterMovementDataSchemaCharacterSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CharacterMovementDataSchemaCharacterSkin) MarshalText() ([]byte, error) {
	switch s {
	case CharacterMovementDataSchemaCharacterSkinMen1:
		return []byte(s), nil
	case CharacterMovementDataSchemaCharacterSkinMen2:
		return []byte(s), nil
	case CharacterMovementDataSchemaCharacterSkinMen3:
		return []byte(s), nil
	case CharacterMovementDataSchemaCharacterSkinWomen1:
		return []byte(s), nil
	case CharacterMovementDataSchemaCharacterSkinWomen2:
		return []byte(s), nil
	case CharacterMovementDataSchemaCharacterSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CharacterMovementDataSchemaCharacterSkin) UnmarshalText(data []byte) error {
	switch CharacterMovementDataSchemaCharacterSkin(data) {
	case CharacterMovementDataSchemaCharacterSkinMen1:
		*s = CharacterMovementDataSchemaCharacterSkinMen1
		return nil
	case CharacterMovementDataSchemaCharacterSkinMen2:
		*s = CharacterMovementDataSchemaCharacterSkinMen2
		return nil
	case CharacterMovementDataSchemaCharacterSkinMen3:
		*s = CharacterMovementDataSchemaCharacterSkinMen3
		return nil
	case CharacterMovementDataSchemaCharacterSkinWomen1:
		*s = CharacterMovementDataSchemaCharacterSkinWomen1
		return nil
	case CharacterMovementDataSchemaCharacterSkinWomen2:
		*s = CharacterMovementDataSchemaCharacterSkinWomen2
		return nil
	case CharacterMovementDataSchemaCharacterSkinWomen3:
		*s = CharacterMovementDataSchemaCharacterSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CharacterMovementDataSchemaCooldown struct {
	// The total seconds of the cooldown.
	TotalSeconds int `json:"total_seconds"`
	// The remaining seconds of the cooldown.
	RemainingSeconds int `json:"remaining_seconds"`
	// The expiration of the cooldown.
	Expiration time.Time `json:"expiration"`
	// The reason of the cooldown.
	Reason CharacterMovementDataSchemaCooldownReason `json:"reason"`
}

// GetTotalSeconds returns the value of TotalSeconds.
func (s *CharacterMovementDataSchemaCooldown) GetTotalSeconds() int {
	return s.TotalSeconds
}

// GetRemainingSeconds returns the value of RemainingSeconds.
func (s *CharacterMovementDataSchemaCooldown) GetRemainingSeconds() int {
	return s.RemainingSeconds
}

// GetExpiration returns the value of Expiration.
func (s *CharacterMovementDataSchemaCooldown) GetExpiration() time.Time {
	return s.Expiration
}

// GetReason returns the value of Reason.
func (s *CharacterMovementDataSchemaCooldown) GetReason() CharacterMovementDataSchemaCooldownReason {
	return s.Reason
}

// SetTotalSeconds sets the value of TotalSeconds.
func (s *CharacterMovementDataSchemaCooldown) SetTotalSeconds(val int) {
	s.TotalSeconds = val
}

// SetRemainingSeconds sets the value of RemainingSeconds.
func (s *CharacterMovementDataSchemaCooldown) SetRemainingSeconds(val int) {
	s.RemainingSeconds = val
}

// SetExpiration sets the value of Expiration.
func (s *CharacterMovementDataSchemaCooldown) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetReason sets the value of Reason.
func (s *CharacterMovementDataSchemaCooldown) SetReason(val CharacterMovementDataSchemaCooldownReason) {
	s.Reason = val
}

// The reason of the cooldown.
type CharacterMovementDataSchemaCooldownReason string

const (
	CharacterMovementDataSchemaCooldownReasonMovement     CharacterMovementDataSchemaCooldownReason = "movement"
	CharacterMovementDataSchemaCooldownReasonFight        CharacterMovementDataSchemaCooldownReason = "fight"
	CharacterMovementDataSchemaCooldownReasonCrafting     CharacterMovementDataSchemaCooldownReason = "crafting"
	CharacterMovementDataSchemaCooldownReasonGathering    CharacterMovementDataSchemaCooldownReason = "gathering"
	CharacterMovementDataSchemaCooldownReasonBuyGe        CharacterMovementDataSchemaCooldownReason = "buy_ge"
	CharacterMovementDataSchemaCooldownReasonSellGe       CharacterMovementDataSchemaCooldownReason = "sell_ge"
	CharacterMovementDataSchemaCooldownReasonDeleteItem   CharacterMovementDataSchemaCooldownReason = "delete_item"
	CharacterMovementDataSchemaCooldownReasonDepositBank  CharacterMovementDataSchemaCooldownReason = "deposit_bank"
	CharacterMovementDataSchemaCooldownReasonWithdrawBank CharacterMovementDataSchemaCooldownReason = "withdraw_bank"
	CharacterMovementDataSchemaCooldownReasonEquip        CharacterMovementDataSchemaCooldownReason = "equip"
	CharacterMovementDataSchemaCooldownReasonUnequip      CharacterMovementDataSchemaCooldownReason = "unequip"
	CharacterMovementDataSchemaCooldownReasonTask         CharacterMovementDataSchemaCooldownReason = "task"
	CharacterMovementDataSchemaCooldownReasonRecycling    CharacterMovementDataSchemaCooldownReason = "recycling"
)

// AllValues returns all CharacterMovementDataSchemaCooldownReason values.
func (CharacterMovementDataSchemaCooldownReason) AllValues() []CharacterMovementDataSchemaCooldownReason {
	return []CharacterMovementDataSchemaCooldownReason{
		CharacterMovementDataSchemaCooldownReasonMovement,
		CharacterMovementDataSchemaCooldownReasonFight,
		CharacterMovementDataSchemaCooldownReasonCrafting,
		CharacterMovementDataSchemaCooldownReasonGathering,
		CharacterMovementDataSchemaCooldownReasonBuyGe,
		CharacterMovementDataSchemaCooldownReasonSellGe,
		CharacterMovementDataSchemaCooldownReasonDeleteItem,
		CharacterMovementDataSchemaCooldownReasonDepositBank,
		CharacterMovementDataSchemaCooldownReasonWithdrawBank,
		CharacterMovementDataSchemaCooldownReasonEquip,
		CharacterMovementDataSchemaCooldownReasonUnequip,
		CharacterMovementDataSchemaCooldownReasonTask,
		CharacterMovementDataSchemaCooldownReasonRecycling,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CharacterMovementDataSchemaCooldownReason) MarshalText() ([]byte, error) {
	switch s {
	case CharacterMovementDataSchemaCooldownReasonMovement:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonFight:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonCrafting:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonGathering:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonBuyGe:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonSellGe:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonDeleteItem:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonDepositBank:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonWithdrawBank:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonEquip:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonUnequip:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonTask:
		return []byte(s), nil
	case CharacterMovementDataSchemaCooldownReasonRecycling:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CharacterMovementDataSchemaCooldownReason) UnmarshalText(data []byte) error {
	switch CharacterMovementDataSchemaCooldownReason(data) {
	case CharacterMovementDataSchemaCooldownReasonMovement:
		*s = CharacterMovementDataSchemaCooldownReasonMovement
		return nil
	case CharacterMovementDataSchemaCooldownReasonFight:
		*s = CharacterMovementDataSchemaCooldownReasonFight
		return nil
	case CharacterMovementDataSchemaCooldownReasonCrafting:
		*s = CharacterMovementDataSchemaCooldownReasonCrafting
		return nil
	case CharacterMovementDataSchemaCooldownReasonGathering:
		*s = CharacterMovementDataSchemaCooldownReasonGathering
		return nil
	case CharacterMovementDataSchemaCooldownReasonBuyGe:
		*s = CharacterMovementDataSchemaCooldownReasonBuyGe
		return nil
	case CharacterMovementDataSchemaCooldownReasonSellGe:
		*s = CharacterMovementDataSchemaCooldownReasonSellGe
		return nil
	case CharacterMovementDataSchemaCooldownReasonDeleteItem:
		*s = CharacterMovementDataSchemaCooldownReasonDeleteItem
		return nil
	case CharacterMovementDataSchemaCooldownReasonDepositBank:
		*s = CharacterMovementDataSchemaCooldownReasonDepositBank
		return nil
	case CharacterMovementDataSchemaCooldownReasonWithdrawBank:
		*s = CharacterMovementDataSchemaCooldownReasonWithdrawBank
		return nil
	case CharacterMovementDataSchemaCooldownReasonEquip:
		*s = CharacterMovementDataSchemaCooldownReasonEquip
		return nil
	case CharacterMovementDataSchemaCooldownReasonUnequip:
		*s = CharacterMovementDataSchemaCooldownReasonUnequip
		return nil
	case CharacterMovementDataSchemaCooldownReasonTask:
		*s = CharacterMovementDataSchemaCooldownReasonTask
		return nil
	case CharacterMovementDataSchemaCooldownReasonRecycling:
		*s = CharacterMovementDataSchemaCooldownReasonRecycling
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type CharacterMovementDataSchemaDestination struct {
	// The name of the destination.
	Name string `json:"name"`
	// The x coordinate of the destination.
	X int `json:"x"`
	// The y coordinate of the destination.
	Y int `json:"y"`
	// Content of the destination.
	Content jx.Raw `json:"content"`
}

// GetName returns the value of Name.
func (s *CharacterMovementDataSchemaDestination) GetName() string {
	return s.Name
}

// GetX returns the value of X.
func (s *CharacterMovementDataSchemaDestination) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *CharacterMovementDataSchemaDestination) GetY() int {
	return s.Y
}

// GetContent returns the value of Content.
func (s *CharacterMovementDataSchemaDestination) GetContent() jx.Raw {
	return s.Content
}

// SetName sets the value of Name.
func (s *CharacterMovementDataSchemaDestination) SetName(val string) {
	s.Name = val
}

// SetX sets the value of X.
func (s *CharacterMovementDataSchemaDestination) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *CharacterMovementDataSchemaDestination) SetY(val int) {
	s.Y = val
}

// SetContent sets the value of Content.
func (s *CharacterMovementDataSchemaDestination) SetContent(val jx.Raw) {
	s.Content = val
}

// Ref: #/components/schemas/CharacterMovementResponseSchema
type CharacterMovementResponseSchema struct {
	Data CharacterMovementDataSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *CharacterMovementResponseSchema) GetData() CharacterMovementDataSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *CharacterMovementResponseSchema) SetData(val CharacterMovementDataSchema) {
	s.Data = val
}

func (*CharacterMovementResponseSchema) actionMoveMyNameActionMovePostRes() {}

// Ref: #/components/schemas/CharacterResponseSchema
type CharacterResponseSchema struct {
	Data CharacterSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *CharacterResponseSchema) GetData() CharacterSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *CharacterResponseSchema) SetData(val CharacterSchema) {
	s.Data = val
}

func (*CharacterResponseSchema) createCharacterCharactersCreatePostRes() {}
func (*CharacterResponseSchema) getCharacterCharactersNameGetRes()       {}

// Ref: #/components/schemas/CharacterSchema
type CharacterSchema struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin CharacterSchemaSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptCharacterSchemaCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *CharacterSchema) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *CharacterSchema) GetSkin() CharacterSchemaSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *CharacterSchema) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *CharacterSchema) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *CharacterSchema) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *CharacterSchema) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *CharacterSchema) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *CharacterSchema) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *CharacterSchema) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *CharacterSchema) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *CharacterSchema) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *CharacterSchema) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *CharacterSchema) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *CharacterSchema) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *CharacterSchema) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *CharacterSchema) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *CharacterSchema) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *CharacterSchema) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *CharacterSchema) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *CharacterSchema) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *CharacterSchema) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *CharacterSchema) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *CharacterSchema) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *CharacterSchema) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *CharacterSchema) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *CharacterSchema) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *CharacterSchema) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *CharacterSchema) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *CharacterSchema) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *CharacterSchema) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *CharacterSchema) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *CharacterSchema) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *CharacterSchema) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *CharacterSchema) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *CharacterSchema) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *CharacterSchema) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *CharacterSchema) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *CharacterSchema) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *CharacterSchema) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *CharacterSchema) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *CharacterSchema) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *CharacterSchema) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *CharacterSchema) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *CharacterSchema) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *CharacterSchema) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *CharacterSchema) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *CharacterSchema) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *CharacterSchema) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *CharacterSchema) GetCooldownExpiration() OptCharacterSchemaCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *CharacterSchema) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *CharacterSchema) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *CharacterSchema) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *CharacterSchema) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *CharacterSchema) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *CharacterSchema) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *CharacterSchema) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *CharacterSchema) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *CharacterSchema) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *CharacterSchema) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *CharacterSchema) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *CharacterSchema) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *CharacterSchema) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *CharacterSchema) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *CharacterSchema) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *CharacterSchema) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *CharacterSchema) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *CharacterSchema) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *CharacterSchema) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *CharacterSchema) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *CharacterSchema) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *CharacterSchema) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *CharacterSchema) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *CharacterSchema) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *CharacterSchema) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *CharacterSchema) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *CharacterSchema) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *CharacterSchema) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *CharacterSchema) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *CharacterSchema) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *CharacterSchema) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *CharacterSchema) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *CharacterSchema) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *CharacterSchema) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *CharacterSchema) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *CharacterSchema) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *CharacterSchema) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *CharacterSchema) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *CharacterSchema) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *CharacterSchema) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *CharacterSchema) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *CharacterSchema) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *CharacterSchema) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *CharacterSchema) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *CharacterSchema) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *CharacterSchema) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *CharacterSchema) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *CharacterSchema) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *CharacterSchema) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *CharacterSchema) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *CharacterSchema) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *CharacterSchema) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *CharacterSchema) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *CharacterSchema) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *CharacterSchema) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *CharacterSchema) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *CharacterSchema) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *CharacterSchema) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *CharacterSchema) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *CharacterSchema) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *CharacterSchema) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *CharacterSchema) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *CharacterSchema) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *CharacterSchema) SetSkin(val CharacterSchemaSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *CharacterSchema) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *CharacterSchema) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *CharacterSchema) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *CharacterSchema) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *CharacterSchema) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *CharacterSchema) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *CharacterSchema) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *CharacterSchema) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *CharacterSchema) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *CharacterSchema) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *CharacterSchema) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *CharacterSchema) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *CharacterSchema) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *CharacterSchema) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *CharacterSchema) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *CharacterSchema) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *CharacterSchema) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *CharacterSchema) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *CharacterSchema) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *CharacterSchema) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *CharacterSchema) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *CharacterSchema) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *CharacterSchema) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *CharacterSchema) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *CharacterSchema) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *CharacterSchema) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *CharacterSchema) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *CharacterSchema) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *CharacterSchema) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *CharacterSchema) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *CharacterSchema) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *CharacterSchema) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *CharacterSchema) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *CharacterSchema) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *CharacterSchema) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *CharacterSchema) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *CharacterSchema) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *CharacterSchema) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *CharacterSchema) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *CharacterSchema) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *CharacterSchema) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *CharacterSchema) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *CharacterSchema) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *CharacterSchema) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *CharacterSchema) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *CharacterSchema) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *CharacterSchema) SetCooldownExpiration(val OptCharacterSchemaCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *CharacterSchema) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *CharacterSchema) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *CharacterSchema) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *CharacterSchema) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *CharacterSchema) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *CharacterSchema) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *CharacterSchema) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *CharacterSchema) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *CharacterSchema) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *CharacterSchema) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *CharacterSchema) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *CharacterSchema) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *CharacterSchema) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *CharacterSchema) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *CharacterSchema) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *CharacterSchema) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *CharacterSchema) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *CharacterSchema) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *CharacterSchema) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *CharacterSchema) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *CharacterSchema) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *CharacterSchema) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *CharacterSchema) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *CharacterSchema) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *CharacterSchema) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *CharacterSchema) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *CharacterSchema) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *CharacterSchema) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *CharacterSchema) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *CharacterSchema) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *CharacterSchema) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *CharacterSchema) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *CharacterSchema) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *CharacterSchema) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *CharacterSchema) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *CharacterSchema) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *CharacterSchema) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *CharacterSchema) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *CharacterSchema) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *CharacterSchema) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *CharacterSchema) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *CharacterSchema) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *CharacterSchema) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *CharacterSchema) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *CharacterSchema) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *CharacterSchema) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *CharacterSchema) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *CharacterSchema) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *CharacterSchema) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *CharacterSchema) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *CharacterSchema) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *CharacterSchema) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *CharacterSchema) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *CharacterSchema) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *CharacterSchema) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *CharacterSchema) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *CharacterSchema) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *CharacterSchema) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *CharacterSchema) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *CharacterSchema) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *CharacterSchema) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *CharacterSchema) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// CharacterSchemaCooldownExpiration represents sum type.
type CharacterSchemaCooldownExpiration struct {
	Type     CharacterSchemaCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// CharacterSchemaCooldownExpirationType is oneOf type of CharacterSchemaCooldownExpiration.
type CharacterSchemaCooldownExpirationType string

// Possible values for CharacterSchemaCooldownExpirationType.
const (
	DateTimeCharacterSchemaCooldownExpiration CharacterSchemaCooldownExpirationType = "time.Time"
	NullCharacterSchemaCooldownExpiration     CharacterSchemaCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether CharacterSchemaCooldownExpiration is time.Time.
func (s CharacterSchemaCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeCharacterSchemaCooldownExpiration
}

// IsNull reports whether CharacterSchemaCooldownExpiration is struct{}.
func (s CharacterSchemaCooldownExpiration) IsNull() bool {
	return s.Type == NullCharacterSchemaCooldownExpiration
}

// SetDateTime sets CharacterSchemaCooldownExpiration to time.Time.
func (s *CharacterSchemaCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeCharacterSchemaCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if CharacterSchemaCooldownExpiration is time.Time.
func (s CharacterSchemaCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeCharacterSchemaCooldownExpiration returns new CharacterSchemaCooldownExpiration from time.Time.
func NewDateTimeCharacterSchemaCooldownExpiration(v time.Time) CharacterSchemaCooldownExpiration {
	var s CharacterSchemaCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets CharacterSchemaCooldownExpiration to struct{}.
func (s *CharacterSchemaCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullCharacterSchemaCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if CharacterSchemaCooldownExpiration is struct{}.
func (s CharacterSchemaCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullCharacterSchemaCooldownExpiration returns new CharacterSchemaCooldownExpiration from struct{}.
func NewNullCharacterSchemaCooldownExpiration(v struct{}) CharacterSchemaCooldownExpiration {
	var s CharacterSchemaCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type CharacterSchemaSkin string

const (
	CharacterSchemaSkinMen1   CharacterSchemaSkin = "men1"
	CharacterSchemaSkinMen2   CharacterSchemaSkin = "men2"
	CharacterSchemaSkinMen3   CharacterSchemaSkin = "men3"
	CharacterSchemaSkinWomen1 CharacterSchemaSkin = "women1"
	CharacterSchemaSkinWomen2 CharacterSchemaSkin = "women2"
	CharacterSchemaSkinWomen3 CharacterSchemaSkin = "women3"
)

// AllValues returns all CharacterSchemaSkin values.
func (CharacterSchemaSkin) AllValues() []CharacterSchemaSkin {
	return []CharacterSchemaSkin{
		CharacterSchemaSkinMen1,
		CharacterSchemaSkinMen2,
		CharacterSchemaSkinMen3,
		CharacterSchemaSkinWomen1,
		CharacterSchemaSkinWomen2,
		CharacterSchemaSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CharacterSchemaSkin) MarshalText() ([]byte, error) {
	switch s {
	case CharacterSchemaSkinMen1:
		return []byte(s), nil
	case CharacterSchemaSkinMen2:
		return []byte(s), nil
	case CharacterSchemaSkinMen3:
		return []byte(s), nil
	case CharacterSchemaSkinWomen1:
		return []byte(s), nil
	case CharacterSchemaSkinWomen2:
		return []byte(s), nil
	case CharacterSchemaSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CharacterSchemaSkin) UnmarshalText(data []byte) error {
	switch CharacterSchemaSkin(data) {
	case CharacterSchemaSkinMen1:
		*s = CharacterSchemaSkinMen1
		return nil
	case CharacterSchemaSkinMen2:
		*s = CharacterSchemaSkinMen2
		return nil
	case CharacterSchemaSkinMen3:
		*s = CharacterSchemaSkinMen3
		return nil
	case CharacterSchemaSkinWomen1:
		*s = CharacterSchemaSkinWomen1
		return nil
	case CharacterSchemaSkinWomen2:
		*s = CharacterSchemaSkinWomen2
		return nil
	case CharacterSchemaSkinWomen3:
		*s = CharacterSchemaSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CraftSchema
type CraftSchema struct {
	// Skill required to craft the item.
	Skill OptCraftSchemaSkill `json:"skill"`
	// The skill level required to craft the item.
	Level OptCraftSchemaLevel `json:"level"`
	// List of items required to craft the item.
	Items []SimpleItemSchema `json:"items"`
	// Quantity of items crafted.
	Quantity OptCraftSchemaQuantity `json:"quantity"`
}

// GetSkill returns the value of Skill.
func (s *CraftSchema) GetSkill() OptCraftSchemaSkill {
	return s.Skill
}

// GetLevel returns the value of Level.
func (s *CraftSchema) GetLevel() OptCraftSchemaLevel {
	return s.Level
}

// GetItems returns the value of Items.
func (s *CraftSchema) GetItems() []SimpleItemSchema {
	return s.Items
}

// GetQuantity returns the value of Quantity.
func (s *CraftSchema) GetQuantity() OptCraftSchemaQuantity {
	return s.Quantity
}

// SetSkill sets the value of Skill.
func (s *CraftSchema) SetSkill(val OptCraftSchemaSkill) {
	s.Skill = val
}

// SetLevel sets the value of Level.
func (s *CraftSchema) SetLevel(val OptCraftSchemaLevel) {
	s.Level = val
}

// SetItems sets the value of Items.
func (s *CraftSchema) SetItems(val []SimpleItemSchema) {
	s.Items = val
}

// SetQuantity sets the value of Quantity.
func (s *CraftSchema) SetQuantity(val OptCraftSchemaQuantity) {
	s.Quantity = val
}

// The skill level required to craft the item.
// CraftSchemaLevel represents sum type.
type CraftSchemaLevel struct {
	Type CraftSchemaLevelType // switch on this field
	Int  int
	Null struct{}
}

// CraftSchemaLevelType is oneOf type of CraftSchemaLevel.
type CraftSchemaLevelType string

// Possible values for CraftSchemaLevelType.
const (
	IntCraftSchemaLevel  CraftSchemaLevelType = "int"
	NullCraftSchemaLevel CraftSchemaLevelType = "struct{}"
)

// IsInt reports whether CraftSchemaLevel is int.
func (s CraftSchemaLevel) IsInt() bool { return s.Type == IntCraftSchemaLevel }

// IsNull reports whether CraftSchemaLevel is struct{}.
func (s CraftSchemaLevel) IsNull() bool { return s.Type == NullCraftSchemaLevel }

// SetInt sets CraftSchemaLevel to int.
func (s *CraftSchemaLevel) SetInt(v int) {
	s.Type = IntCraftSchemaLevel
	s.Int = v
}

// GetInt returns int and true boolean if CraftSchemaLevel is int.
func (s CraftSchemaLevel) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntCraftSchemaLevel returns new CraftSchemaLevel from int.
func NewIntCraftSchemaLevel(v int) CraftSchemaLevel {
	var s CraftSchemaLevel
	s.SetInt(v)
	return s
}

// SetNull sets CraftSchemaLevel to struct{}.
func (s *CraftSchemaLevel) SetNull(v struct{}) {
	s.Type = NullCraftSchemaLevel
	s.Null = v
}

// GetNull returns struct{} and true boolean if CraftSchemaLevel is struct{}.
func (s CraftSchemaLevel) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullCraftSchemaLevel returns new CraftSchemaLevel from struct{}.
func NewNullCraftSchemaLevel(v struct{}) CraftSchemaLevel {
	var s CraftSchemaLevel
	s.SetNull(v)
	return s
}

// Quantity of items crafted.
// CraftSchemaQuantity represents sum type.
type CraftSchemaQuantity struct {
	Type CraftSchemaQuantityType // switch on this field
	Int  int
	Null struct{}
}

// CraftSchemaQuantityType is oneOf type of CraftSchemaQuantity.
type CraftSchemaQuantityType string

// Possible values for CraftSchemaQuantityType.
const (
	IntCraftSchemaQuantity  CraftSchemaQuantityType = "int"
	NullCraftSchemaQuantity CraftSchemaQuantityType = "struct{}"
)

// IsInt reports whether CraftSchemaQuantity is int.
func (s CraftSchemaQuantity) IsInt() bool { return s.Type == IntCraftSchemaQuantity }

// IsNull reports whether CraftSchemaQuantity is struct{}.
func (s CraftSchemaQuantity) IsNull() bool { return s.Type == NullCraftSchemaQuantity }

// SetInt sets CraftSchemaQuantity to int.
func (s *CraftSchemaQuantity) SetInt(v int) {
	s.Type = IntCraftSchemaQuantity
	s.Int = v
}

// GetInt returns int and true boolean if CraftSchemaQuantity is int.
func (s CraftSchemaQuantity) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntCraftSchemaQuantity returns new CraftSchemaQuantity from int.
func NewIntCraftSchemaQuantity(v int) CraftSchemaQuantity {
	var s CraftSchemaQuantity
	s.SetInt(v)
	return s
}

// SetNull sets CraftSchemaQuantity to struct{}.
func (s *CraftSchemaQuantity) SetNull(v struct{}) {
	s.Type = NullCraftSchemaQuantity
	s.Null = v
}

// GetNull returns struct{} and true boolean if CraftSchemaQuantity is struct{}.
func (s CraftSchemaQuantity) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullCraftSchemaQuantity returns new CraftSchemaQuantity from struct{}.
func NewNullCraftSchemaQuantity(v struct{}) CraftSchemaQuantity {
	var s CraftSchemaQuantity
	s.SetNull(v)
	return s
}

// Skill required to craft the item.
// CraftSchemaSkill represents sum type.
type CraftSchemaSkill struct {
	Type              CraftSchemaSkillType // switch on this field
	CraftSchemaSkill0 CraftSchemaSkill0
	Null              struct{}
}

// CraftSchemaSkillType is oneOf type of CraftSchemaSkill.
type CraftSchemaSkillType string

// Possible values for CraftSchemaSkillType.
const (
	CraftSchemaSkill0CraftSchemaSkill CraftSchemaSkillType = "CraftSchemaSkill0"
	NullCraftSchemaSkill              CraftSchemaSkillType = "struct{}"
)

// IsCraftSchemaSkill0 reports whether CraftSchemaSkill is CraftSchemaSkill0.
func (s CraftSchemaSkill) IsCraftSchemaSkill0() bool {
	return s.Type == CraftSchemaSkill0CraftSchemaSkill
}

// IsNull reports whether CraftSchemaSkill is struct{}.
func (s CraftSchemaSkill) IsNull() bool { return s.Type == NullCraftSchemaSkill }

// SetCraftSchemaSkill0 sets CraftSchemaSkill to CraftSchemaSkill0.
func (s *CraftSchemaSkill) SetCraftSchemaSkill0(v CraftSchemaSkill0) {
	s.Type = CraftSchemaSkill0CraftSchemaSkill
	s.CraftSchemaSkill0 = v
}

// GetCraftSchemaSkill0 returns CraftSchemaSkill0 and true boolean if CraftSchemaSkill is CraftSchemaSkill0.
func (s CraftSchemaSkill) GetCraftSchemaSkill0() (v CraftSchemaSkill0, ok bool) {
	if !s.IsCraftSchemaSkill0() {
		return v, false
	}
	return s.CraftSchemaSkill0, true
}

// NewCraftSchemaSkill0CraftSchemaSkill returns new CraftSchemaSkill from CraftSchemaSkill0.
func NewCraftSchemaSkill0CraftSchemaSkill(v CraftSchemaSkill0) CraftSchemaSkill {
	var s CraftSchemaSkill
	s.SetCraftSchemaSkill0(v)
	return s
}

// SetNull sets CraftSchemaSkill to struct{}.
func (s *CraftSchemaSkill) SetNull(v struct{}) {
	s.Type = NullCraftSchemaSkill
	s.Null = v
}

// GetNull returns struct{} and true boolean if CraftSchemaSkill is struct{}.
func (s CraftSchemaSkill) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullCraftSchemaSkill returns new CraftSchemaSkill from struct{}.
func NewNullCraftSchemaSkill(v struct{}) CraftSchemaSkill {
	var s CraftSchemaSkill
	s.SetNull(v)
	return s
}

type CraftSchemaSkill0 string

const (
	CraftSchemaSkill0Weaponcrafting  CraftSchemaSkill0 = "weaponcrafting"
	CraftSchemaSkill0Gearcrafting    CraftSchemaSkill0 = "gearcrafting"
	CraftSchemaSkill0Jewelrycrafting CraftSchemaSkill0 = "jewelrycrafting"
	CraftSchemaSkill0Cooking         CraftSchemaSkill0 = "cooking"
	CraftSchemaSkill0Woodcutting     CraftSchemaSkill0 = "woodcutting"
	CraftSchemaSkill0Mining          CraftSchemaSkill0 = "mining"
)

// AllValues returns all CraftSchemaSkill0 values.
func (CraftSchemaSkill0) AllValues() []CraftSchemaSkill0 {
	return []CraftSchemaSkill0{
		CraftSchemaSkill0Weaponcrafting,
		CraftSchemaSkill0Gearcrafting,
		CraftSchemaSkill0Jewelrycrafting,
		CraftSchemaSkill0Cooking,
		CraftSchemaSkill0Woodcutting,
		CraftSchemaSkill0Mining,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s CraftSchemaSkill0) MarshalText() ([]byte, error) {
	switch s {
	case CraftSchemaSkill0Weaponcrafting:
		return []byte(s), nil
	case CraftSchemaSkill0Gearcrafting:
		return []byte(s), nil
	case CraftSchemaSkill0Jewelrycrafting:
		return []byte(s), nil
	case CraftSchemaSkill0Cooking:
		return []byte(s), nil
	case CraftSchemaSkill0Woodcutting:
		return []byte(s), nil
	case CraftSchemaSkill0Mining:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *CraftSchemaSkill0) UnmarshalText(data []byte) error {
	switch CraftSchemaSkill0(data) {
	case CraftSchemaSkill0Weaponcrafting:
		*s = CraftSchemaSkill0Weaponcrafting
		return nil
	case CraftSchemaSkill0Gearcrafting:
		*s = CraftSchemaSkill0Gearcrafting
		return nil
	case CraftSchemaSkill0Jewelrycrafting:
		*s = CraftSchemaSkill0Jewelrycrafting
		return nil
	case CraftSchemaSkill0Cooking:
		*s = CraftSchemaSkill0Cooking
		return nil
	case CraftSchemaSkill0Woodcutting:
		*s = CraftSchemaSkill0Woodcutting
		return nil
	case CraftSchemaSkill0Mining:
		*s = CraftSchemaSkill0Mining
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/CraftingSchema
type CraftingSchema struct {
	// Craft code.
	Code string `json:"code"`
	// Quantity of items to craft.
	Quantity OptInt `json:"quantity"`
}

// GetCode returns the value of Code.
func (s *CraftingSchema) GetCode() string {
	return s.Code
}

// GetQuantity returns the value of Quantity.
func (s *CraftingSchema) GetQuantity() OptInt {
	return s.Quantity
}

// SetCode sets the value of Code.
func (s *CraftingSchema) SetCode(val string) {
	s.Code = val
}

// SetQuantity sets the value of Quantity.
func (s *CraftingSchema) SetQuantity(val OptInt) {
	s.Quantity = val
}

// CreateAccountAccountsCreatePostCode456 is response for CreateAccountAccountsCreatePost operation.
type CreateAccountAccountsCreatePostCode456 struct{}

func (*CreateAccountAccountsCreatePostCode456) createAccountAccountsCreatePostRes() {}

// CreateAccountAccountsCreatePostCode457 is response for CreateAccountAccountsCreatePost operation.
type CreateAccountAccountsCreatePostCode457 struct{}

func (*CreateAccountAccountsCreatePostCode457) createAccountAccountsCreatePostRes() {}

// CreateCharacterCharactersCreatePostCode494 is response for CreateCharacterCharactersCreatePost operation.
type CreateCharacterCharactersCreatePostCode494 struct{}

func (*CreateCharacterCharactersCreatePostCode494) createCharacterCharactersCreatePostRes() {}

// CreateCharacterCharactersCreatePostCode495 is response for CreateCharacterCharactersCreatePost operation.
type CreateCharacterCharactersCreatePostCode495 struct{}

func (*CreateCharacterCharactersCreatePostCode495) createCharacterCharactersCreatePostRes() {}

// Ref: #/components/schemas/DataPage_CharacterSchema_
type DataPageCharacterSchema struct {
	Data  []CharacterSchema               `json:"data"`
	Total DataPageCharacterSchemaTotal    `json:"total"`
	Page  DataPageCharacterSchemaPage     `json:"page"`
	Size  DataPageCharacterSchemaSize     `json:"size"`
	Pages OptDataPageCharacterSchemaPages `json:"pages"`
}

// GetData returns the value of Data.
func (s *DataPageCharacterSchema) GetData() []CharacterSchema {
	return s.Data
}

// GetTotal returns the value of Total.
func (s *DataPageCharacterSchema) GetTotal() DataPageCharacterSchemaTotal {
	return s.Total
}

// GetPage returns the value of Page.
func (s *DataPageCharacterSchema) GetPage() DataPageCharacterSchemaPage {
	return s.Page
}

// GetSize returns the value of Size.
func (s *DataPageCharacterSchema) GetSize() DataPageCharacterSchemaSize {
	return s.Size
}

// GetPages returns the value of Pages.
func (s *DataPageCharacterSchema) GetPages() OptDataPageCharacterSchemaPages {
	return s.Pages
}

// SetData sets the value of Data.
func (s *DataPageCharacterSchema) SetData(val []CharacterSchema) {
	s.Data = val
}

// SetTotal sets the value of Total.
func (s *DataPageCharacterSchema) SetTotal(val DataPageCharacterSchemaTotal) {
	s.Total = val
}

// SetPage sets the value of Page.
func (s *DataPageCharacterSchema) SetPage(val DataPageCharacterSchemaPage) {
	s.Page = val
}

// SetSize sets the value of Size.
func (s *DataPageCharacterSchema) SetSize(val DataPageCharacterSchemaSize) {
	s.Size = val
}

// SetPages sets the value of Pages.
func (s *DataPageCharacterSchema) SetPages(val OptDataPageCharacterSchemaPages) {
	s.Pages = val
}

func (*DataPageCharacterSchema) getAllCharactersCharactersGetRes() {}

// DataPageCharacterSchemaPage represents sum type.
type DataPageCharacterSchemaPage struct {
	Type DataPageCharacterSchemaPageType // switch on this field
	Int  int
	Null struct{}
}

// DataPageCharacterSchemaPageType is oneOf type of DataPageCharacterSchemaPage.
type DataPageCharacterSchemaPageType string

// Possible values for DataPageCharacterSchemaPageType.
const (
	IntDataPageCharacterSchemaPage  DataPageCharacterSchemaPageType = "int"
	NullDataPageCharacterSchemaPage DataPageCharacterSchemaPageType = "struct{}"
)

// IsInt reports whether DataPageCharacterSchemaPage is int.
func (s DataPageCharacterSchemaPage) IsInt() bool { return s.Type == IntDataPageCharacterSchemaPage }

// IsNull reports whether DataPageCharacterSchemaPage is struct{}.
func (s DataPageCharacterSchemaPage) IsNull() bool { return s.Type == NullDataPageCharacterSchemaPage }

// SetInt sets DataPageCharacterSchemaPage to int.
func (s *DataPageCharacterSchemaPage) SetInt(v int) {
	s.Type = IntDataPageCharacterSchemaPage
	s.Int = v
}

// GetInt returns int and true boolean if DataPageCharacterSchemaPage is int.
func (s DataPageCharacterSchemaPage) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageCharacterSchemaPage returns new DataPageCharacterSchemaPage from int.
func NewIntDataPageCharacterSchemaPage(v int) DataPageCharacterSchemaPage {
	var s DataPageCharacterSchemaPage
	s.SetInt(v)
	return s
}

// SetNull sets DataPageCharacterSchemaPage to struct{}.
func (s *DataPageCharacterSchemaPage) SetNull(v struct{}) {
	s.Type = NullDataPageCharacterSchemaPage
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageCharacterSchemaPage is struct{}.
func (s DataPageCharacterSchemaPage) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageCharacterSchemaPage returns new DataPageCharacterSchemaPage from struct{}.
func NewNullDataPageCharacterSchemaPage(v struct{}) DataPageCharacterSchemaPage {
	var s DataPageCharacterSchemaPage
	s.SetNull(v)
	return s
}

// DataPageCharacterSchemaPages represents sum type.
type DataPageCharacterSchemaPages struct {
	Type DataPageCharacterSchemaPagesType // switch on this field
	Int  int
	Null struct{}
}

// DataPageCharacterSchemaPagesType is oneOf type of DataPageCharacterSchemaPages.
type DataPageCharacterSchemaPagesType string

// Possible values for DataPageCharacterSchemaPagesType.
const (
	IntDataPageCharacterSchemaPages  DataPageCharacterSchemaPagesType = "int"
	NullDataPageCharacterSchemaPages DataPageCharacterSchemaPagesType = "struct{}"
)

// IsInt reports whether DataPageCharacterSchemaPages is int.
func (s DataPageCharacterSchemaPages) IsInt() bool { return s.Type == IntDataPageCharacterSchemaPages }

// IsNull reports whether DataPageCharacterSchemaPages is struct{}.
func (s DataPageCharacterSchemaPages) IsNull() bool {
	return s.Type == NullDataPageCharacterSchemaPages
}

// SetInt sets DataPageCharacterSchemaPages to int.
func (s *DataPageCharacterSchemaPages) SetInt(v int) {
	s.Type = IntDataPageCharacterSchemaPages
	s.Int = v
}

// GetInt returns int and true boolean if DataPageCharacterSchemaPages is int.
func (s DataPageCharacterSchemaPages) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageCharacterSchemaPages returns new DataPageCharacterSchemaPages from int.
func NewIntDataPageCharacterSchemaPages(v int) DataPageCharacterSchemaPages {
	var s DataPageCharacterSchemaPages
	s.SetInt(v)
	return s
}

// SetNull sets DataPageCharacterSchemaPages to struct{}.
func (s *DataPageCharacterSchemaPages) SetNull(v struct{}) {
	s.Type = NullDataPageCharacterSchemaPages
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageCharacterSchemaPages is struct{}.
func (s DataPageCharacterSchemaPages) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageCharacterSchemaPages returns new DataPageCharacterSchemaPages from struct{}.
func NewNullDataPageCharacterSchemaPages(v struct{}) DataPageCharacterSchemaPages {
	var s DataPageCharacterSchemaPages
	s.SetNull(v)
	return s
}

// DataPageCharacterSchemaSize represents sum type.
type DataPageCharacterSchemaSize struct {
	Type DataPageCharacterSchemaSizeType // switch on this field
	Int  int
	Null struct{}
}

// DataPageCharacterSchemaSizeType is oneOf type of DataPageCharacterSchemaSize.
type DataPageCharacterSchemaSizeType string

// Possible values for DataPageCharacterSchemaSizeType.
const (
	IntDataPageCharacterSchemaSize  DataPageCharacterSchemaSizeType = "int"
	NullDataPageCharacterSchemaSize DataPageCharacterSchemaSizeType = "struct{}"
)

// IsInt reports whether DataPageCharacterSchemaSize is int.
func (s DataPageCharacterSchemaSize) IsInt() bool { return s.Type == IntDataPageCharacterSchemaSize }

// IsNull reports whether DataPageCharacterSchemaSize is struct{}.
func (s DataPageCharacterSchemaSize) IsNull() bool { return s.Type == NullDataPageCharacterSchemaSize }

// SetInt sets DataPageCharacterSchemaSize to int.
func (s *DataPageCharacterSchemaSize) SetInt(v int) {
	s.Type = IntDataPageCharacterSchemaSize
	s.Int = v
}

// GetInt returns int and true boolean if DataPageCharacterSchemaSize is int.
func (s DataPageCharacterSchemaSize) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageCharacterSchemaSize returns new DataPageCharacterSchemaSize from int.
func NewIntDataPageCharacterSchemaSize(v int) DataPageCharacterSchemaSize {
	var s DataPageCharacterSchemaSize
	s.SetInt(v)
	return s
}

// SetNull sets DataPageCharacterSchemaSize to struct{}.
func (s *DataPageCharacterSchemaSize) SetNull(v struct{}) {
	s.Type = NullDataPageCharacterSchemaSize
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageCharacterSchemaSize is struct{}.
func (s DataPageCharacterSchemaSize) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageCharacterSchemaSize returns new DataPageCharacterSchemaSize from struct{}.
func NewNullDataPageCharacterSchemaSize(v struct{}) DataPageCharacterSchemaSize {
	var s DataPageCharacterSchemaSize
	s.SetNull(v)
	return s
}

// DataPageCharacterSchemaTotal represents sum type.
type DataPageCharacterSchemaTotal struct {
	Type DataPageCharacterSchemaTotalType // switch on this field
	Int  int
	Null struct{}
}

// DataPageCharacterSchemaTotalType is oneOf type of DataPageCharacterSchemaTotal.
type DataPageCharacterSchemaTotalType string

// Possible values for DataPageCharacterSchemaTotalType.
const (
	IntDataPageCharacterSchemaTotal  DataPageCharacterSchemaTotalType = "int"
	NullDataPageCharacterSchemaTotal DataPageCharacterSchemaTotalType = "struct{}"
)

// IsInt reports whether DataPageCharacterSchemaTotal is int.
func (s DataPageCharacterSchemaTotal) IsInt() bool { return s.Type == IntDataPageCharacterSchemaTotal }

// IsNull reports whether DataPageCharacterSchemaTotal is struct{}.
func (s DataPageCharacterSchemaTotal) IsNull() bool {
	return s.Type == NullDataPageCharacterSchemaTotal
}

// SetInt sets DataPageCharacterSchemaTotal to int.
func (s *DataPageCharacterSchemaTotal) SetInt(v int) {
	s.Type = IntDataPageCharacterSchemaTotal
	s.Int = v
}

// GetInt returns int and true boolean if DataPageCharacterSchemaTotal is int.
func (s DataPageCharacterSchemaTotal) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageCharacterSchemaTotal returns new DataPageCharacterSchemaTotal from int.
func NewIntDataPageCharacterSchemaTotal(v int) DataPageCharacterSchemaTotal {
	var s DataPageCharacterSchemaTotal
	s.SetInt(v)
	return s
}

// SetNull sets DataPageCharacterSchemaTotal to struct{}.
func (s *DataPageCharacterSchemaTotal) SetNull(v struct{}) {
	s.Type = NullDataPageCharacterSchemaTotal
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageCharacterSchemaTotal is struct{}.
func (s DataPageCharacterSchemaTotal) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageCharacterSchemaTotal returns new DataPageCharacterSchemaTotal from struct{}.
func NewNullDataPageCharacterSchemaTotal(v struct{}) DataPageCharacterSchemaTotal {
	var s DataPageCharacterSchemaTotal
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/DataPage_EventSchema_
type DataPageEventSchema struct {
	Data  []EventSchema               `json:"data"`
	Total DataPageEventSchemaTotal    `json:"total"`
	Page  DataPageEventSchemaPage     `json:"page"`
	Size  DataPageEventSchemaSize     `json:"size"`
	Pages OptDataPageEventSchemaPages `json:"pages"`
}

// GetData returns the value of Data.
func (s *DataPageEventSchema) GetData() []EventSchema {
	return s.Data
}

// GetTotal returns the value of Total.
func (s *DataPageEventSchema) GetTotal() DataPageEventSchemaTotal {
	return s.Total
}

// GetPage returns the value of Page.
func (s *DataPageEventSchema) GetPage() DataPageEventSchemaPage {
	return s.Page
}

// GetSize returns the value of Size.
func (s *DataPageEventSchema) GetSize() DataPageEventSchemaSize {
	return s.Size
}

// GetPages returns the value of Pages.
func (s *DataPageEventSchema) GetPages() OptDataPageEventSchemaPages {
	return s.Pages
}

// SetData sets the value of Data.
func (s *DataPageEventSchema) SetData(val []EventSchema) {
	s.Data = val
}

// SetTotal sets the value of Total.
func (s *DataPageEventSchema) SetTotal(val DataPageEventSchemaTotal) {
	s.Total = val
}

// SetPage sets the value of Page.
func (s *DataPageEventSchema) SetPage(val DataPageEventSchemaPage) {
	s.Page = val
}

// SetSize sets the value of Size.
func (s *DataPageEventSchema) SetSize(val DataPageEventSchemaSize) {
	s.Size = val
}

// SetPages sets the value of Pages.
func (s *DataPageEventSchema) SetPages(val OptDataPageEventSchemaPages) {
	s.Pages = val
}

func (*DataPageEventSchema) getAllEventsEventsGetRes() {}

// DataPageEventSchemaPage represents sum type.
type DataPageEventSchemaPage struct {
	Type DataPageEventSchemaPageType // switch on this field
	Int  int
	Null struct{}
}

// DataPageEventSchemaPageType is oneOf type of DataPageEventSchemaPage.
type DataPageEventSchemaPageType string

// Possible values for DataPageEventSchemaPageType.
const (
	IntDataPageEventSchemaPage  DataPageEventSchemaPageType = "int"
	NullDataPageEventSchemaPage DataPageEventSchemaPageType = "struct{}"
)

// IsInt reports whether DataPageEventSchemaPage is int.
func (s DataPageEventSchemaPage) IsInt() bool { return s.Type == IntDataPageEventSchemaPage }

// IsNull reports whether DataPageEventSchemaPage is struct{}.
func (s DataPageEventSchemaPage) IsNull() bool { return s.Type == NullDataPageEventSchemaPage }

// SetInt sets DataPageEventSchemaPage to int.
func (s *DataPageEventSchemaPage) SetInt(v int) {
	s.Type = IntDataPageEventSchemaPage
	s.Int = v
}

// GetInt returns int and true boolean if DataPageEventSchemaPage is int.
func (s DataPageEventSchemaPage) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageEventSchemaPage returns new DataPageEventSchemaPage from int.
func NewIntDataPageEventSchemaPage(v int) DataPageEventSchemaPage {
	var s DataPageEventSchemaPage
	s.SetInt(v)
	return s
}

// SetNull sets DataPageEventSchemaPage to struct{}.
func (s *DataPageEventSchemaPage) SetNull(v struct{}) {
	s.Type = NullDataPageEventSchemaPage
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageEventSchemaPage is struct{}.
func (s DataPageEventSchemaPage) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageEventSchemaPage returns new DataPageEventSchemaPage from struct{}.
func NewNullDataPageEventSchemaPage(v struct{}) DataPageEventSchemaPage {
	var s DataPageEventSchemaPage
	s.SetNull(v)
	return s
}

// DataPageEventSchemaPages represents sum type.
type DataPageEventSchemaPages struct {
	Type DataPageEventSchemaPagesType // switch on this field
	Int  int
	Null struct{}
}

// DataPageEventSchemaPagesType is oneOf type of DataPageEventSchemaPages.
type DataPageEventSchemaPagesType string

// Possible values for DataPageEventSchemaPagesType.
const (
	IntDataPageEventSchemaPages  DataPageEventSchemaPagesType = "int"
	NullDataPageEventSchemaPages DataPageEventSchemaPagesType = "struct{}"
)

// IsInt reports whether DataPageEventSchemaPages is int.
func (s DataPageEventSchemaPages) IsInt() bool { return s.Type == IntDataPageEventSchemaPages }

// IsNull reports whether DataPageEventSchemaPages is struct{}.
func (s DataPageEventSchemaPages) IsNull() bool { return s.Type == NullDataPageEventSchemaPages }

// SetInt sets DataPageEventSchemaPages to int.
func (s *DataPageEventSchemaPages) SetInt(v int) {
	s.Type = IntDataPageEventSchemaPages
	s.Int = v
}

// GetInt returns int and true boolean if DataPageEventSchemaPages is int.
func (s DataPageEventSchemaPages) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageEventSchemaPages returns new DataPageEventSchemaPages from int.
func NewIntDataPageEventSchemaPages(v int) DataPageEventSchemaPages {
	var s DataPageEventSchemaPages
	s.SetInt(v)
	return s
}

// SetNull sets DataPageEventSchemaPages to struct{}.
func (s *DataPageEventSchemaPages) SetNull(v struct{}) {
	s.Type = NullDataPageEventSchemaPages
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageEventSchemaPages is struct{}.
func (s DataPageEventSchemaPages) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageEventSchemaPages returns new DataPageEventSchemaPages from struct{}.
func NewNullDataPageEventSchemaPages(v struct{}) DataPageEventSchemaPages {
	var s DataPageEventSchemaPages
	s.SetNull(v)
	return s
}

// DataPageEventSchemaSize represents sum type.
type DataPageEventSchemaSize struct {
	Type DataPageEventSchemaSizeType // switch on this field
	Int  int
	Null struct{}
}

// DataPageEventSchemaSizeType is oneOf type of DataPageEventSchemaSize.
type DataPageEventSchemaSizeType string

// Possible values for DataPageEventSchemaSizeType.
const (
	IntDataPageEventSchemaSize  DataPageEventSchemaSizeType = "int"
	NullDataPageEventSchemaSize DataPageEventSchemaSizeType = "struct{}"
)

// IsInt reports whether DataPageEventSchemaSize is int.
func (s DataPageEventSchemaSize) IsInt() bool { return s.Type == IntDataPageEventSchemaSize }

// IsNull reports whether DataPageEventSchemaSize is struct{}.
func (s DataPageEventSchemaSize) IsNull() bool { return s.Type == NullDataPageEventSchemaSize }

// SetInt sets DataPageEventSchemaSize to int.
func (s *DataPageEventSchemaSize) SetInt(v int) {
	s.Type = IntDataPageEventSchemaSize
	s.Int = v
}

// GetInt returns int and true boolean if DataPageEventSchemaSize is int.
func (s DataPageEventSchemaSize) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageEventSchemaSize returns new DataPageEventSchemaSize from int.
func NewIntDataPageEventSchemaSize(v int) DataPageEventSchemaSize {
	var s DataPageEventSchemaSize
	s.SetInt(v)
	return s
}

// SetNull sets DataPageEventSchemaSize to struct{}.
func (s *DataPageEventSchemaSize) SetNull(v struct{}) {
	s.Type = NullDataPageEventSchemaSize
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageEventSchemaSize is struct{}.
func (s DataPageEventSchemaSize) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageEventSchemaSize returns new DataPageEventSchemaSize from struct{}.
func NewNullDataPageEventSchemaSize(v struct{}) DataPageEventSchemaSize {
	var s DataPageEventSchemaSize
	s.SetNull(v)
	return s
}

// DataPageEventSchemaTotal represents sum type.
type DataPageEventSchemaTotal struct {
	Type DataPageEventSchemaTotalType // switch on this field
	Int  int
	Null struct{}
}

// DataPageEventSchemaTotalType is oneOf type of DataPageEventSchemaTotal.
type DataPageEventSchemaTotalType string

// Possible values for DataPageEventSchemaTotalType.
const (
	IntDataPageEventSchemaTotal  DataPageEventSchemaTotalType = "int"
	NullDataPageEventSchemaTotal DataPageEventSchemaTotalType = "struct{}"
)

// IsInt reports whether DataPageEventSchemaTotal is int.
func (s DataPageEventSchemaTotal) IsInt() bool { return s.Type == IntDataPageEventSchemaTotal }

// IsNull reports whether DataPageEventSchemaTotal is struct{}.
func (s DataPageEventSchemaTotal) IsNull() bool { return s.Type == NullDataPageEventSchemaTotal }

// SetInt sets DataPageEventSchemaTotal to int.
func (s *DataPageEventSchemaTotal) SetInt(v int) {
	s.Type = IntDataPageEventSchemaTotal
	s.Int = v
}

// GetInt returns int and true boolean if DataPageEventSchemaTotal is int.
func (s DataPageEventSchemaTotal) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageEventSchemaTotal returns new DataPageEventSchemaTotal from int.
func NewIntDataPageEventSchemaTotal(v int) DataPageEventSchemaTotal {
	var s DataPageEventSchemaTotal
	s.SetInt(v)
	return s
}

// SetNull sets DataPageEventSchemaTotal to struct{}.
func (s *DataPageEventSchemaTotal) SetNull(v struct{}) {
	s.Type = NullDataPageEventSchemaTotal
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageEventSchemaTotal is struct{}.
func (s DataPageEventSchemaTotal) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageEventSchemaTotal returns new DataPageEventSchemaTotal from struct{}.
func NewNullDataPageEventSchemaTotal(v struct{}) DataPageEventSchemaTotal {
	var s DataPageEventSchemaTotal
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/DataPage_GEItemSchema_
type DataPageGEItemSchema struct {
	Data  []GEItemSchema               `json:"data"`
	Total DataPageGEItemSchemaTotal    `json:"total"`
	Page  DataPageGEItemSchemaPage     `json:"page"`
	Size  DataPageGEItemSchemaSize     `json:"size"`
	Pages OptDataPageGEItemSchemaPages `json:"pages"`
}

// GetData returns the value of Data.
func (s *DataPageGEItemSchema) GetData() []GEItemSchema {
	return s.Data
}

// GetTotal returns the value of Total.
func (s *DataPageGEItemSchema) GetTotal() DataPageGEItemSchemaTotal {
	return s.Total
}

// GetPage returns the value of Page.
func (s *DataPageGEItemSchema) GetPage() DataPageGEItemSchemaPage {
	return s.Page
}

// GetSize returns the value of Size.
func (s *DataPageGEItemSchema) GetSize() DataPageGEItemSchemaSize {
	return s.Size
}

// GetPages returns the value of Pages.
func (s *DataPageGEItemSchema) GetPages() OptDataPageGEItemSchemaPages {
	return s.Pages
}

// SetData sets the value of Data.
func (s *DataPageGEItemSchema) SetData(val []GEItemSchema) {
	s.Data = val
}

// SetTotal sets the value of Total.
func (s *DataPageGEItemSchema) SetTotal(val DataPageGEItemSchemaTotal) {
	s.Total = val
}

// SetPage sets the value of Page.
func (s *DataPageGEItemSchema) SetPage(val DataPageGEItemSchemaPage) {
	s.Page = val
}

// SetSize sets the value of Size.
func (s *DataPageGEItemSchema) SetSize(val DataPageGEItemSchemaSize) {
	s.Size = val
}

// SetPages sets the value of Pages.
func (s *DataPageGEItemSchema) SetPages(val OptDataPageGEItemSchemaPages) {
	s.Pages = val
}

func (*DataPageGEItemSchema) getAllGeItemsGeGetRes() {}

// DataPageGEItemSchemaPage represents sum type.
type DataPageGEItemSchemaPage struct {
	Type DataPageGEItemSchemaPageType // switch on this field
	Int  int
	Null struct{}
}

// DataPageGEItemSchemaPageType is oneOf type of DataPageGEItemSchemaPage.
type DataPageGEItemSchemaPageType string

// Possible values for DataPageGEItemSchemaPageType.
const (
	IntDataPageGEItemSchemaPage  DataPageGEItemSchemaPageType = "int"
	NullDataPageGEItemSchemaPage DataPageGEItemSchemaPageType = "struct{}"
)

// IsInt reports whether DataPageGEItemSchemaPage is int.
func (s DataPageGEItemSchemaPage) IsInt() bool { return s.Type == IntDataPageGEItemSchemaPage }

// IsNull reports whether DataPageGEItemSchemaPage is struct{}.
func (s DataPageGEItemSchemaPage) IsNull() bool { return s.Type == NullDataPageGEItemSchemaPage }

// SetInt sets DataPageGEItemSchemaPage to int.
func (s *DataPageGEItemSchemaPage) SetInt(v int) {
	s.Type = IntDataPageGEItemSchemaPage
	s.Int = v
}

// GetInt returns int and true boolean if DataPageGEItemSchemaPage is int.
func (s DataPageGEItemSchemaPage) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageGEItemSchemaPage returns new DataPageGEItemSchemaPage from int.
func NewIntDataPageGEItemSchemaPage(v int) DataPageGEItemSchemaPage {
	var s DataPageGEItemSchemaPage
	s.SetInt(v)
	return s
}

// SetNull sets DataPageGEItemSchemaPage to struct{}.
func (s *DataPageGEItemSchemaPage) SetNull(v struct{}) {
	s.Type = NullDataPageGEItemSchemaPage
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageGEItemSchemaPage is struct{}.
func (s DataPageGEItemSchemaPage) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageGEItemSchemaPage returns new DataPageGEItemSchemaPage from struct{}.
func NewNullDataPageGEItemSchemaPage(v struct{}) DataPageGEItemSchemaPage {
	var s DataPageGEItemSchemaPage
	s.SetNull(v)
	return s
}

// DataPageGEItemSchemaPages represents sum type.
type DataPageGEItemSchemaPages struct {
	Type DataPageGEItemSchemaPagesType // switch on this field
	Int  int
	Null struct{}
}

// DataPageGEItemSchemaPagesType is oneOf type of DataPageGEItemSchemaPages.
type DataPageGEItemSchemaPagesType string

// Possible values for DataPageGEItemSchemaPagesType.
const (
	IntDataPageGEItemSchemaPages  DataPageGEItemSchemaPagesType = "int"
	NullDataPageGEItemSchemaPages DataPageGEItemSchemaPagesType = "struct{}"
)

// IsInt reports whether DataPageGEItemSchemaPages is int.
func (s DataPageGEItemSchemaPages) IsInt() bool { return s.Type == IntDataPageGEItemSchemaPages }

// IsNull reports whether DataPageGEItemSchemaPages is struct{}.
func (s DataPageGEItemSchemaPages) IsNull() bool { return s.Type == NullDataPageGEItemSchemaPages }

// SetInt sets DataPageGEItemSchemaPages to int.
func (s *DataPageGEItemSchemaPages) SetInt(v int) {
	s.Type = IntDataPageGEItemSchemaPages
	s.Int = v
}

// GetInt returns int and true boolean if DataPageGEItemSchemaPages is int.
func (s DataPageGEItemSchemaPages) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageGEItemSchemaPages returns new DataPageGEItemSchemaPages from int.
func NewIntDataPageGEItemSchemaPages(v int) DataPageGEItemSchemaPages {
	var s DataPageGEItemSchemaPages
	s.SetInt(v)
	return s
}

// SetNull sets DataPageGEItemSchemaPages to struct{}.
func (s *DataPageGEItemSchemaPages) SetNull(v struct{}) {
	s.Type = NullDataPageGEItemSchemaPages
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageGEItemSchemaPages is struct{}.
func (s DataPageGEItemSchemaPages) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageGEItemSchemaPages returns new DataPageGEItemSchemaPages from struct{}.
func NewNullDataPageGEItemSchemaPages(v struct{}) DataPageGEItemSchemaPages {
	var s DataPageGEItemSchemaPages
	s.SetNull(v)
	return s
}

// DataPageGEItemSchemaSize represents sum type.
type DataPageGEItemSchemaSize struct {
	Type DataPageGEItemSchemaSizeType // switch on this field
	Int  int
	Null struct{}
}

// DataPageGEItemSchemaSizeType is oneOf type of DataPageGEItemSchemaSize.
type DataPageGEItemSchemaSizeType string

// Possible values for DataPageGEItemSchemaSizeType.
const (
	IntDataPageGEItemSchemaSize  DataPageGEItemSchemaSizeType = "int"
	NullDataPageGEItemSchemaSize DataPageGEItemSchemaSizeType = "struct{}"
)

// IsInt reports whether DataPageGEItemSchemaSize is int.
func (s DataPageGEItemSchemaSize) IsInt() bool { return s.Type == IntDataPageGEItemSchemaSize }

// IsNull reports whether DataPageGEItemSchemaSize is struct{}.
func (s DataPageGEItemSchemaSize) IsNull() bool { return s.Type == NullDataPageGEItemSchemaSize }

// SetInt sets DataPageGEItemSchemaSize to int.
func (s *DataPageGEItemSchemaSize) SetInt(v int) {
	s.Type = IntDataPageGEItemSchemaSize
	s.Int = v
}

// GetInt returns int and true boolean if DataPageGEItemSchemaSize is int.
func (s DataPageGEItemSchemaSize) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageGEItemSchemaSize returns new DataPageGEItemSchemaSize from int.
func NewIntDataPageGEItemSchemaSize(v int) DataPageGEItemSchemaSize {
	var s DataPageGEItemSchemaSize
	s.SetInt(v)
	return s
}

// SetNull sets DataPageGEItemSchemaSize to struct{}.
func (s *DataPageGEItemSchemaSize) SetNull(v struct{}) {
	s.Type = NullDataPageGEItemSchemaSize
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageGEItemSchemaSize is struct{}.
func (s DataPageGEItemSchemaSize) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageGEItemSchemaSize returns new DataPageGEItemSchemaSize from struct{}.
func NewNullDataPageGEItemSchemaSize(v struct{}) DataPageGEItemSchemaSize {
	var s DataPageGEItemSchemaSize
	s.SetNull(v)
	return s
}

// DataPageGEItemSchemaTotal represents sum type.
type DataPageGEItemSchemaTotal struct {
	Type DataPageGEItemSchemaTotalType // switch on this field
	Int  int
	Null struct{}
}

// DataPageGEItemSchemaTotalType is oneOf type of DataPageGEItemSchemaTotal.
type DataPageGEItemSchemaTotalType string

// Possible values for DataPageGEItemSchemaTotalType.
const (
	IntDataPageGEItemSchemaTotal  DataPageGEItemSchemaTotalType = "int"
	NullDataPageGEItemSchemaTotal DataPageGEItemSchemaTotalType = "struct{}"
)

// IsInt reports whether DataPageGEItemSchemaTotal is int.
func (s DataPageGEItemSchemaTotal) IsInt() bool { return s.Type == IntDataPageGEItemSchemaTotal }

// IsNull reports whether DataPageGEItemSchemaTotal is struct{}.
func (s DataPageGEItemSchemaTotal) IsNull() bool { return s.Type == NullDataPageGEItemSchemaTotal }

// SetInt sets DataPageGEItemSchemaTotal to int.
func (s *DataPageGEItemSchemaTotal) SetInt(v int) {
	s.Type = IntDataPageGEItemSchemaTotal
	s.Int = v
}

// GetInt returns int and true boolean if DataPageGEItemSchemaTotal is int.
func (s DataPageGEItemSchemaTotal) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageGEItemSchemaTotal returns new DataPageGEItemSchemaTotal from int.
func NewIntDataPageGEItemSchemaTotal(v int) DataPageGEItemSchemaTotal {
	var s DataPageGEItemSchemaTotal
	s.SetInt(v)
	return s
}

// SetNull sets DataPageGEItemSchemaTotal to struct{}.
func (s *DataPageGEItemSchemaTotal) SetNull(v struct{}) {
	s.Type = NullDataPageGEItemSchemaTotal
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageGEItemSchemaTotal is struct{}.
func (s DataPageGEItemSchemaTotal) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageGEItemSchemaTotal returns new DataPageGEItemSchemaTotal from struct{}.
func NewNullDataPageGEItemSchemaTotal(v struct{}) DataPageGEItemSchemaTotal {
	var s DataPageGEItemSchemaTotal
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/DataPage_ItemSchema_
type DataPageItemSchema struct {
	Data  []ItemSchema               `json:"data"`
	Total DataPageItemSchemaTotal    `json:"total"`
	Page  DataPageItemSchemaPage     `json:"page"`
	Size  DataPageItemSchemaSize     `json:"size"`
	Pages OptDataPageItemSchemaPages `json:"pages"`
}

// GetData returns the value of Data.
func (s *DataPageItemSchema) GetData() []ItemSchema {
	return s.Data
}

// GetTotal returns the value of Total.
func (s *DataPageItemSchema) GetTotal() DataPageItemSchemaTotal {
	return s.Total
}

// GetPage returns the value of Page.
func (s *DataPageItemSchema) GetPage() DataPageItemSchemaPage {
	return s.Page
}

// GetSize returns the value of Size.
func (s *DataPageItemSchema) GetSize() DataPageItemSchemaSize {
	return s.Size
}

// GetPages returns the value of Pages.
func (s *DataPageItemSchema) GetPages() OptDataPageItemSchemaPages {
	return s.Pages
}

// SetData sets the value of Data.
func (s *DataPageItemSchema) SetData(val []ItemSchema) {
	s.Data = val
}

// SetTotal sets the value of Total.
func (s *DataPageItemSchema) SetTotal(val DataPageItemSchemaTotal) {
	s.Total = val
}

// SetPage sets the value of Page.
func (s *DataPageItemSchema) SetPage(val DataPageItemSchemaPage) {
	s.Page = val
}

// SetSize sets the value of Size.
func (s *DataPageItemSchema) SetSize(val DataPageItemSchemaSize) {
	s.Size = val
}

// SetPages sets the value of Pages.
func (s *DataPageItemSchema) SetPages(val OptDataPageItemSchemaPages) {
	s.Pages = val
}

func (*DataPageItemSchema) getAllItemsItemsGetRes() {}

// DataPageItemSchemaPage represents sum type.
type DataPageItemSchemaPage struct {
	Type DataPageItemSchemaPageType // switch on this field
	Int  int
	Null struct{}
}

// DataPageItemSchemaPageType is oneOf type of DataPageItemSchemaPage.
type DataPageItemSchemaPageType string

// Possible values for DataPageItemSchemaPageType.
const (
	IntDataPageItemSchemaPage  DataPageItemSchemaPageType = "int"
	NullDataPageItemSchemaPage DataPageItemSchemaPageType = "struct{}"
)

// IsInt reports whether DataPageItemSchemaPage is int.
func (s DataPageItemSchemaPage) IsInt() bool { return s.Type == IntDataPageItemSchemaPage }

// IsNull reports whether DataPageItemSchemaPage is struct{}.
func (s DataPageItemSchemaPage) IsNull() bool { return s.Type == NullDataPageItemSchemaPage }

// SetInt sets DataPageItemSchemaPage to int.
func (s *DataPageItemSchemaPage) SetInt(v int) {
	s.Type = IntDataPageItemSchemaPage
	s.Int = v
}

// GetInt returns int and true boolean if DataPageItemSchemaPage is int.
func (s DataPageItemSchemaPage) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageItemSchemaPage returns new DataPageItemSchemaPage from int.
func NewIntDataPageItemSchemaPage(v int) DataPageItemSchemaPage {
	var s DataPageItemSchemaPage
	s.SetInt(v)
	return s
}

// SetNull sets DataPageItemSchemaPage to struct{}.
func (s *DataPageItemSchemaPage) SetNull(v struct{}) {
	s.Type = NullDataPageItemSchemaPage
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageItemSchemaPage is struct{}.
func (s DataPageItemSchemaPage) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageItemSchemaPage returns new DataPageItemSchemaPage from struct{}.
func NewNullDataPageItemSchemaPage(v struct{}) DataPageItemSchemaPage {
	var s DataPageItemSchemaPage
	s.SetNull(v)
	return s
}

// DataPageItemSchemaPages represents sum type.
type DataPageItemSchemaPages struct {
	Type DataPageItemSchemaPagesType // switch on this field
	Int  int
	Null struct{}
}

// DataPageItemSchemaPagesType is oneOf type of DataPageItemSchemaPages.
type DataPageItemSchemaPagesType string

// Possible values for DataPageItemSchemaPagesType.
const (
	IntDataPageItemSchemaPages  DataPageItemSchemaPagesType = "int"
	NullDataPageItemSchemaPages DataPageItemSchemaPagesType = "struct{}"
)

// IsInt reports whether DataPageItemSchemaPages is int.
func (s DataPageItemSchemaPages) IsInt() bool { return s.Type == IntDataPageItemSchemaPages }

// IsNull reports whether DataPageItemSchemaPages is struct{}.
func (s DataPageItemSchemaPages) IsNull() bool { return s.Type == NullDataPageItemSchemaPages }

// SetInt sets DataPageItemSchemaPages to int.
func (s *DataPageItemSchemaPages) SetInt(v int) {
	s.Type = IntDataPageItemSchemaPages
	s.Int = v
}

// GetInt returns int and true boolean if DataPageItemSchemaPages is int.
func (s DataPageItemSchemaPages) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageItemSchemaPages returns new DataPageItemSchemaPages from int.
func NewIntDataPageItemSchemaPages(v int) DataPageItemSchemaPages {
	var s DataPageItemSchemaPages
	s.SetInt(v)
	return s
}

// SetNull sets DataPageItemSchemaPages to struct{}.
func (s *DataPageItemSchemaPages) SetNull(v struct{}) {
	s.Type = NullDataPageItemSchemaPages
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageItemSchemaPages is struct{}.
func (s DataPageItemSchemaPages) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageItemSchemaPages returns new DataPageItemSchemaPages from struct{}.
func NewNullDataPageItemSchemaPages(v struct{}) DataPageItemSchemaPages {
	var s DataPageItemSchemaPages
	s.SetNull(v)
	return s
}

// DataPageItemSchemaSize represents sum type.
type DataPageItemSchemaSize struct {
	Type DataPageItemSchemaSizeType // switch on this field
	Int  int
	Null struct{}
}

// DataPageItemSchemaSizeType is oneOf type of DataPageItemSchemaSize.
type DataPageItemSchemaSizeType string

// Possible values for DataPageItemSchemaSizeType.
const (
	IntDataPageItemSchemaSize  DataPageItemSchemaSizeType = "int"
	NullDataPageItemSchemaSize DataPageItemSchemaSizeType = "struct{}"
)

// IsInt reports whether DataPageItemSchemaSize is int.
func (s DataPageItemSchemaSize) IsInt() bool { return s.Type == IntDataPageItemSchemaSize }

// IsNull reports whether DataPageItemSchemaSize is struct{}.
func (s DataPageItemSchemaSize) IsNull() bool { return s.Type == NullDataPageItemSchemaSize }

// SetInt sets DataPageItemSchemaSize to int.
func (s *DataPageItemSchemaSize) SetInt(v int) {
	s.Type = IntDataPageItemSchemaSize
	s.Int = v
}

// GetInt returns int and true boolean if DataPageItemSchemaSize is int.
func (s DataPageItemSchemaSize) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageItemSchemaSize returns new DataPageItemSchemaSize from int.
func NewIntDataPageItemSchemaSize(v int) DataPageItemSchemaSize {
	var s DataPageItemSchemaSize
	s.SetInt(v)
	return s
}

// SetNull sets DataPageItemSchemaSize to struct{}.
func (s *DataPageItemSchemaSize) SetNull(v struct{}) {
	s.Type = NullDataPageItemSchemaSize
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageItemSchemaSize is struct{}.
func (s DataPageItemSchemaSize) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageItemSchemaSize returns new DataPageItemSchemaSize from struct{}.
func NewNullDataPageItemSchemaSize(v struct{}) DataPageItemSchemaSize {
	var s DataPageItemSchemaSize
	s.SetNull(v)
	return s
}

// DataPageItemSchemaTotal represents sum type.
type DataPageItemSchemaTotal struct {
	Type DataPageItemSchemaTotalType // switch on this field
	Int  int
	Null struct{}
}

// DataPageItemSchemaTotalType is oneOf type of DataPageItemSchemaTotal.
type DataPageItemSchemaTotalType string

// Possible values for DataPageItemSchemaTotalType.
const (
	IntDataPageItemSchemaTotal  DataPageItemSchemaTotalType = "int"
	NullDataPageItemSchemaTotal DataPageItemSchemaTotalType = "struct{}"
)

// IsInt reports whether DataPageItemSchemaTotal is int.
func (s DataPageItemSchemaTotal) IsInt() bool { return s.Type == IntDataPageItemSchemaTotal }

// IsNull reports whether DataPageItemSchemaTotal is struct{}.
func (s DataPageItemSchemaTotal) IsNull() bool { return s.Type == NullDataPageItemSchemaTotal }

// SetInt sets DataPageItemSchemaTotal to int.
func (s *DataPageItemSchemaTotal) SetInt(v int) {
	s.Type = IntDataPageItemSchemaTotal
	s.Int = v
}

// GetInt returns int and true boolean if DataPageItemSchemaTotal is int.
func (s DataPageItemSchemaTotal) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageItemSchemaTotal returns new DataPageItemSchemaTotal from int.
func NewIntDataPageItemSchemaTotal(v int) DataPageItemSchemaTotal {
	var s DataPageItemSchemaTotal
	s.SetInt(v)
	return s
}

// SetNull sets DataPageItemSchemaTotal to struct{}.
func (s *DataPageItemSchemaTotal) SetNull(v struct{}) {
	s.Type = NullDataPageItemSchemaTotal
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageItemSchemaTotal is struct{}.
func (s DataPageItemSchemaTotal) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageItemSchemaTotal returns new DataPageItemSchemaTotal from struct{}.
func NewNullDataPageItemSchemaTotal(v struct{}) DataPageItemSchemaTotal {
	var s DataPageItemSchemaTotal
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/DataPage_LogSchema_
type DataPageLogSchema struct {
	Data  []LogSchema               `json:"data"`
	Total DataPageLogSchemaTotal    `json:"total"`
	Page  DataPageLogSchemaPage     `json:"page"`
	Size  DataPageLogSchemaSize     `json:"size"`
	Pages OptDataPageLogSchemaPages `json:"pages"`
}

// GetData returns the value of Data.
func (s *DataPageLogSchema) GetData() []LogSchema {
	return s.Data
}

// GetTotal returns the value of Total.
func (s *DataPageLogSchema) GetTotal() DataPageLogSchemaTotal {
	return s.Total
}

// GetPage returns the value of Page.
func (s *DataPageLogSchema) GetPage() DataPageLogSchemaPage {
	return s.Page
}

// GetSize returns the value of Size.
func (s *DataPageLogSchema) GetSize() DataPageLogSchemaSize {
	return s.Size
}

// GetPages returns the value of Pages.
func (s *DataPageLogSchema) GetPages() OptDataPageLogSchemaPages {
	return s.Pages
}

// SetData sets the value of Data.
func (s *DataPageLogSchema) SetData(val []LogSchema) {
	s.Data = val
}

// SetTotal sets the value of Total.
func (s *DataPageLogSchema) SetTotal(val DataPageLogSchemaTotal) {
	s.Total = val
}

// SetPage sets the value of Page.
func (s *DataPageLogSchema) SetPage(val DataPageLogSchemaPage) {
	s.Page = val
}

// SetSize sets the value of Size.
func (s *DataPageLogSchema) SetSize(val DataPageLogSchemaSize) {
	s.Size = val
}

// SetPages sets the value of Pages.
func (s *DataPageLogSchema) SetPages(val OptDataPageLogSchemaPages) {
	s.Pages = val
}

func (*DataPageLogSchema) getAllCharactersLogsMyLogsGetRes() {}
func (*DataPageLogSchema) getCharacterLogsMyNameLogsGetRes() {}

// DataPageLogSchemaPage represents sum type.
type DataPageLogSchemaPage struct {
	Type DataPageLogSchemaPageType // switch on this field
	Int  int
	Null struct{}
}

// DataPageLogSchemaPageType is oneOf type of DataPageLogSchemaPage.
type DataPageLogSchemaPageType string

// Possible values for DataPageLogSchemaPageType.
const (
	IntDataPageLogSchemaPage  DataPageLogSchemaPageType = "int"
	NullDataPageLogSchemaPage DataPageLogSchemaPageType = "struct{}"
)

// IsInt reports whether DataPageLogSchemaPage is int.
func (s DataPageLogSchemaPage) IsInt() bool { return s.Type == IntDataPageLogSchemaPage }

// IsNull reports whether DataPageLogSchemaPage is struct{}.
func (s DataPageLogSchemaPage) IsNull() bool { return s.Type == NullDataPageLogSchemaPage }

// SetInt sets DataPageLogSchemaPage to int.
func (s *DataPageLogSchemaPage) SetInt(v int) {
	s.Type = IntDataPageLogSchemaPage
	s.Int = v
}

// GetInt returns int and true boolean if DataPageLogSchemaPage is int.
func (s DataPageLogSchemaPage) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageLogSchemaPage returns new DataPageLogSchemaPage from int.
func NewIntDataPageLogSchemaPage(v int) DataPageLogSchemaPage {
	var s DataPageLogSchemaPage
	s.SetInt(v)
	return s
}

// SetNull sets DataPageLogSchemaPage to struct{}.
func (s *DataPageLogSchemaPage) SetNull(v struct{}) {
	s.Type = NullDataPageLogSchemaPage
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageLogSchemaPage is struct{}.
func (s DataPageLogSchemaPage) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageLogSchemaPage returns new DataPageLogSchemaPage from struct{}.
func NewNullDataPageLogSchemaPage(v struct{}) DataPageLogSchemaPage {
	var s DataPageLogSchemaPage
	s.SetNull(v)
	return s
}

// DataPageLogSchemaPages represents sum type.
type DataPageLogSchemaPages struct {
	Type DataPageLogSchemaPagesType // switch on this field
	Int  int
	Null struct{}
}

// DataPageLogSchemaPagesType is oneOf type of DataPageLogSchemaPages.
type DataPageLogSchemaPagesType string

// Possible values for DataPageLogSchemaPagesType.
const (
	IntDataPageLogSchemaPages  DataPageLogSchemaPagesType = "int"
	NullDataPageLogSchemaPages DataPageLogSchemaPagesType = "struct{}"
)

// IsInt reports whether DataPageLogSchemaPages is int.
func (s DataPageLogSchemaPages) IsInt() bool { return s.Type == IntDataPageLogSchemaPages }

// IsNull reports whether DataPageLogSchemaPages is struct{}.
func (s DataPageLogSchemaPages) IsNull() bool { return s.Type == NullDataPageLogSchemaPages }

// SetInt sets DataPageLogSchemaPages to int.
func (s *DataPageLogSchemaPages) SetInt(v int) {
	s.Type = IntDataPageLogSchemaPages
	s.Int = v
}

// GetInt returns int and true boolean if DataPageLogSchemaPages is int.
func (s DataPageLogSchemaPages) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageLogSchemaPages returns new DataPageLogSchemaPages from int.
func NewIntDataPageLogSchemaPages(v int) DataPageLogSchemaPages {
	var s DataPageLogSchemaPages
	s.SetInt(v)
	return s
}

// SetNull sets DataPageLogSchemaPages to struct{}.
func (s *DataPageLogSchemaPages) SetNull(v struct{}) {
	s.Type = NullDataPageLogSchemaPages
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageLogSchemaPages is struct{}.
func (s DataPageLogSchemaPages) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageLogSchemaPages returns new DataPageLogSchemaPages from struct{}.
func NewNullDataPageLogSchemaPages(v struct{}) DataPageLogSchemaPages {
	var s DataPageLogSchemaPages
	s.SetNull(v)
	return s
}

// DataPageLogSchemaSize represents sum type.
type DataPageLogSchemaSize struct {
	Type DataPageLogSchemaSizeType // switch on this field
	Int  int
	Null struct{}
}

// DataPageLogSchemaSizeType is oneOf type of DataPageLogSchemaSize.
type DataPageLogSchemaSizeType string

// Possible values for DataPageLogSchemaSizeType.
const (
	IntDataPageLogSchemaSize  DataPageLogSchemaSizeType = "int"
	NullDataPageLogSchemaSize DataPageLogSchemaSizeType = "struct{}"
)

// IsInt reports whether DataPageLogSchemaSize is int.
func (s DataPageLogSchemaSize) IsInt() bool { return s.Type == IntDataPageLogSchemaSize }

// IsNull reports whether DataPageLogSchemaSize is struct{}.
func (s DataPageLogSchemaSize) IsNull() bool { return s.Type == NullDataPageLogSchemaSize }

// SetInt sets DataPageLogSchemaSize to int.
func (s *DataPageLogSchemaSize) SetInt(v int) {
	s.Type = IntDataPageLogSchemaSize
	s.Int = v
}

// GetInt returns int and true boolean if DataPageLogSchemaSize is int.
func (s DataPageLogSchemaSize) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageLogSchemaSize returns new DataPageLogSchemaSize from int.
func NewIntDataPageLogSchemaSize(v int) DataPageLogSchemaSize {
	var s DataPageLogSchemaSize
	s.SetInt(v)
	return s
}

// SetNull sets DataPageLogSchemaSize to struct{}.
func (s *DataPageLogSchemaSize) SetNull(v struct{}) {
	s.Type = NullDataPageLogSchemaSize
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageLogSchemaSize is struct{}.
func (s DataPageLogSchemaSize) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageLogSchemaSize returns new DataPageLogSchemaSize from struct{}.
func NewNullDataPageLogSchemaSize(v struct{}) DataPageLogSchemaSize {
	var s DataPageLogSchemaSize
	s.SetNull(v)
	return s
}

// DataPageLogSchemaTotal represents sum type.
type DataPageLogSchemaTotal struct {
	Type DataPageLogSchemaTotalType // switch on this field
	Int  int
	Null struct{}
}

// DataPageLogSchemaTotalType is oneOf type of DataPageLogSchemaTotal.
type DataPageLogSchemaTotalType string

// Possible values for DataPageLogSchemaTotalType.
const (
	IntDataPageLogSchemaTotal  DataPageLogSchemaTotalType = "int"
	NullDataPageLogSchemaTotal DataPageLogSchemaTotalType = "struct{}"
)

// IsInt reports whether DataPageLogSchemaTotal is int.
func (s DataPageLogSchemaTotal) IsInt() bool { return s.Type == IntDataPageLogSchemaTotal }

// IsNull reports whether DataPageLogSchemaTotal is struct{}.
func (s DataPageLogSchemaTotal) IsNull() bool { return s.Type == NullDataPageLogSchemaTotal }

// SetInt sets DataPageLogSchemaTotal to int.
func (s *DataPageLogSchemaTotal) SetInt(v int) {
	s.Type = IntDataPageLogSchemaTotal
	s.Int = v
}

// GetInt returns int and true boolean if DataPageLogSchemaTotal is int.
func (s DataPageLogSchemaTotal) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageLogSchemaTotal returns new DataPageLogSchemaTotal from int.
func NewIntDataPageLogSchemaTotal(v int) DataPageLogSchemaTotal {
	var s DataPageLogSchemaTotal
	s.SetInt(v)
	return s
}

// SetNull sets DataPageLogSchemaTotal to struct{}.
func (s *DataPageLogSchemaTotal) SetNull(v struct{}) {
	s.Type = NullDataPageLogSchemaTotal
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageLogSchemaTotal is struct{}.
func (s DataPageLogSchemaTotal) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageLogSchemaTotal returns new DataPageLogSchemaTotal from struct{}.
func NewNullDataPageLogSchemaTotal(v struct{}) DataPageLogSchemaTotal {
	var s DataPageLogSchemaTotal
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/DataPage_MapSchema_
type DataPageMapSchema struct {
	Data  []MapSchema               `json:"data"`
	Total DataPageMapSchemaTotal    `json:"total"`
	Page  DataPageMapSchemaPage     `json:"page"`
	Size  DataPageMapSchemaSize     `json:"size"`
	Pages OptDataPageMapSchemaPages `json:"pages"`
}

// GetData returns the value of Data.
func (s *DataPageMapSchema) GetData() []MapSchema {
	return s.Data
}

// GetTotal returns the value of Total.
func (s *DataPageMapSchema) GetTotal() DataPageMapSchemaTotal {
	return s.Total
}

// GetPage returns the value of Page.
func (s *DataPageMapSchema) GetPage() DataPageMapSchemaPage {
	return s.Page
}

// GetSize returns the value of Size.
func (s *DataPageMapSchema) GetSize() DataPageMapSchemaSize {
	return s.Size
}

// GetPages returns the value of Pages.
func (s *DataPageMapSchema) GetPages() OptDataPageMapSchemaPages {
	return s.Pages
}

// SetData sets the value of Data.
func (s *DataPageMapSchema) SetData(val []MapSchema) {
	s.Data = val
}

// SetTotal sets the value of Total.
func (s *DataPageMapSchema) SetTotal(val DataPageMapSchemaTotal) {
	s.Total = val
}

// SetPage sets the value of Page.
func (s *DataPageMapSchema) SetPage(val DataPageMapSchemaPage) {
	s.Page = val
}

// SetSize sets the value of Size.
func (s *DataPageMapSchema) SetSize(val DataPageMapSchemaSize) {
	s.Size = val
}

// SetPages sets the value of Pages.
func (s *DataPageMapSchema) SetPages(val OptDataPageMapSchemaPages) {
	s.Pages = val
}

func (*DataPageMapSchema) getAllMapsMapsGetRes() {}

// DataPageMapSchemaPage represents sum type.
type DataPageMapSchemaPage struct {
	Type DataPageMapSchemaPageType // switch on this field
	Int  int
	Null struct{}
}

// DataPageMapSchemaPageType is oneOf type of DataPageMapSchemaPage.
type DataPageMapSchemaPageType string

// Possible values for DataPageMapSchemaPageType.
const (
	IntDataPageMapSchemaPage  DataPageMapSchemaPageType = "int"
	NullDataPageMapSchemaPage DataPageMapSchemaPageType = "struct{}"
)

// IsInt reports whether DataPageMapSchemaPage is int.
func (s DataPageMapSchemaPage) IsInt() bool { return s.Type == IntDataPageMapSchemaPage }

// IsNull reports whether DataPageMapSchemaPage is struct{}.
func (s DataPageMapSchemaPage) IsNull() bool { return s.Type == NullDataPageMapSchemaPage }

// SetInt sets DataPageMapSchemaPage to int.
func (s *DataPageMapSchemaPage) SetInt(v int) {
	s.Type = IntDataPageMapSchemaPage
	s.Int = v
}

// GetInt returns int and true boolean if DataPageMapSchemaPage is int.
func (s DataPageMapSchemaPage) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageMapSchemaPage returns new DataPageMapSchemaPage from int.
func NewIntDataPageMapSchemaPage(v int) DataPageMapSchemaPage {
	var s DataPageMapSchemaPage
	s.SetInt(v)
	return s
}

// SetNull sets DataPageMapSchemaPage to struct{}.
func (s *DataPageMapSchemaPage) SetNull(v struct{}) {
	s.Type = NullDataPageMapSchemaPage
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageMapSchemaPage is struct{}.
func (s DataPageMapSchemaPage) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageMapSchemaPage returns new DataPageMapSchemaPage from struct{}.
func NewNullDataPageMapSchemaPage(v struct{}) DataPageMapSchemaPage {
	var s DataPageMapSchemaPage
	s.SetNull(v)
	return s
}

// DataPageMapSchemaPages represents sum type.
type DataPageMapSchemaPages struct {
	Type DataPageMapSchemaPagesType // switch on this field
	Int  int
	Null struct{}
}

// DataPageMapSchemaPagesType is oneOf type of DataPageMapSchemaPages.
type DataPageMapSchemaPagesType string

// Possible values for DataPageMapSchemaPagesType.
const (
	IntDataPageMapSchemaPages  DataPageMapSchemaPagesType = "int"
	NullDataPageMapSchemaPages DataPageMapSchemaPagesType = "struct{}"
)

// IsInt reports whether DataPageMapSchemaPages is int.
func (s DataPageMapSchemaPages) IsInt() bool { return s.Type == IntDataPageMapSchemaPages }

// IsNull reports whether DataPageMapSchemaPages is struct{}.
func (s DataPageMapSchemaPages) IsNull() bool { return s.Type == NullDataPageMapSchemaPages }

// SetInt sets DataPageMapSchemaPages to int.
func (s *DataPageMapSchemaPages) SetInt(v int) {
	s.Type = IntDataPageMapSchemaPages
	s.Int = v
}

// GetInt returns int and true boolean if DataPageMapSchemaPages is int.
func (s DataPageMapSchemaPages) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageMapSchemaPages returns new DataPageMapSchemaPages from int.
func NewIntDataPageMapSchemaPages(v int) DataPageMapSchemaPages {
	var s DataPageMapSchemaPages
	s.SetInt(v)
	return s
}

// SetNull sets DataPageMapSchemaPages to struct{}.
func (s *DataPageMapSchemaPages) SetNull(v struct{}) {
	s.Type = NullDataPageMapSchemaPages
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageMapSchemaPages is struct{}.
func (s DataPageMapSchemaPages) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageMapSchemaPages returns new DataPageMapSchemaPages from struct{}.
func NewNullDataPageMapSchemaPages(v struct{}) DataPageMapSchemaPages {
	var s DataPageMapSchemaPages
	s.SetNull(v)
	return s
}

// DataPageMapSchemaSize represents sum type.
type DataPageMapSchemaSize struct {
	Type DataPageMapSchemaSizeType // switch on this field
	Int  int
	Null struct{}
}

// DataPageMapSchemaSizeType is oneOf type of DataPageMapSchemaSize.
type DataPageMapSchemaSizeType string

// Possible values for DataPageMapSchemaSizeType.
const (
	IntDataPageMapSchemaSize  DataPageMapSchemaSizeType = "int"
	NullDataPageMapSchemaSize DataPageMapSchemaSizeType = "struct{}"
)

// IsInt reports whether DataPageMapSchemaSize is int.
func (s DataPageMapSchemaSize) IsInt() bool { return s.Type == IntDataPageMapSchemaSize }

// IsNull reports whether DataPageMapSchemaSize is struct{}.
func (s DataPageMapSchemaSize) IsNull() bool { return s.Type == NullDataPageMapSchemaSize }

// SetInt sets DataPageMapSchemaSize to int.
func (s *DataPageMapSchemaSize) SetInt(v int) {
	s.Type = IntDataPageMapSchemaSize
	s.Int = v
}

// GetInt returns int and true boolean if DataPageMapSchemaSize is int.
func (s DataPageMapSchemaSize) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageMapSchemaSize returns new DataPageMapSchemaSize from int.
func NewIntDataPageMapSchemaSize(v int) DataPageMapSchemaSize {
	var s DataPageMapSchemaSize
	s.SetInt(v)
	return s
}

// SetNull sets DataPageMapSchemaSize to struct{}.
func (s *DataPageMapSchemaSize) SetNull(v struct{}) {
	s.Type = NullDataPageMapSchemaSize
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageMapSchemaSize is struct{}.
func (s DataPageMapSchemaSize) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageMapSchemaSize returns new DataPageMapSchemaSize from struct{}.
func NewNullDataPageMapSchemaSize(v struct{}) DataPageMapSchemaSize {
	var s DataPageMapSchemaSize
	s.SetNull(v)
	return s
}

// DataPageMapSchemaTotal represents sum type.
type DataPageMapSchemaTotal struct {
	Type DataPageMapSchemaTotalType // switch on this field
	Int  int
	Null struct{}
}

// DataPageMapSchemaTotalType is oneOf type of DataPageMapSchemaTotal.
type DataPageMapSchemaTotalType string

// Possible values for DataPageMapSchemaTotalType.
const (
	IntDataPageMapSchemaTotal  DataPageMapSchemaTotalType = "int"
	NullDataPageMapSchemaTotal DataPageMapSchemaTotalType = "struct{}"
)

// IsInt reports whether DataPageMapSchemaTotal is int.
func (s DataPageMapSchemaTotal) IsInt() bool { return s.Type == IntDataPageMapSchemaTotal }

// IsNull reports whether DataPageMapSchemaTotal is struct{}.
func (s DataPageMapSchemaTotal) IsNull() bool { return s.Type == NullDataPageMapSchemaTotal }

// SetInt sets DataPageMapSchemaTotal to int.
func (s *DataPageMapSchemaTotal) SetInt(v int) {
	s.Type = IntDataPageMapSchemaTotal
	s.Int = v
}

// GetInt returns int and true boolean if DataPageMapSchemaTotal is int.
func (s DataPageMapSchemaTotal) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageMapSchemaTotal returns new DataPageMapSchemaTotal from int.
func NewIntDataPageMapSchemaTotal(v int) DataPageMapSchemaTotal {
	var s DataPageMapSchemaTotal
	s.SetInt(v)
	return s
}

// SetNull sets DataPageMapSchemaTotal to struct{}.
func (s *DataPageMapSchemaTotal) SetNull(v struct{}) {
	s.Type = NullDataPageMapSchemaTotal
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageMapSchemaTotal is struct{}.
func (s DataPageMapSchemaTotal) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageMapSchemaTotal returns new DataPageMapSchemaTotal from struct{}.
func NewNullDataPageMapSchemaTotal(v struct{}) DataPageMapSchemaTotal {
	var s DataPageMapSchemaTotal
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/DataPage_MonsterSchema_
type DataPageMonsterSchema struct {
	Data  []MonsterSchema               `json:"data"`
	Total DataPageMonsterSchemaTotal    `json:"total"`
	Page  DataPageMonsterSchemaPage     `json:"page"`
	Size  DataPageMonsterSchemaSize     `json:"size"`
	Pages OptDataPageMonsterSchemaPages `json:"pages"`
}

// GetData returns the value of Data.
func (s *DataPageMonsterSchema) GetData() []MonsterSchema {
	return s.Data
}

// GetTotal returns the value of Total.
func (s *DataPageMonsterSchema) GetTotal() DataPageMonsterSchemaTotal {
	return s.Total
}

// GetPage returns the value of Page.
func (s *DataPageMonsterSchema) GetPage() DataPageMonsterSchemaPage {
	return s.Page
}

// GetSize returns the value of Size.
func (s *DataPageMonsterSchema) GetSize() DataPageMonsterSchemaSize {
	return s.Size
}

// GetPages returns the value of Pages.
func (s *DataPageMonsterSchema) GetPages() OptDataPageMonsterSchemaPages {
	return s.Pages
}

// SetData sets the value of Data.
func (s *DataPageMonsterSchema) SetData(val []MonsterSchema) {
	s.Data = val
}

// SetTotal sets the value of Total.
func (s *DataPageMonsterSchema) SetTotal(val DataPageMonsterSchemaTotal) {
	s.Total = val
}

// SetPage sets the value of Page.
func (s *DataPageMonsterSchema) SetPage(val DataPageMonsterSchemaPage) {
	s.Page = val
}

// SetSize sets the value of Size.
func (s *DataPageMonsterSchema) SetSize(val DataPageMonsterSchemaSize) {
	s.Size = val
}

// SetPages sets the value of Pages.
func (s *DataPageMonsterSchema) SetPages(val OptDataPageMonsterSchemaPages) {
	s.Pages = val
}

func (*DataPageMonsterSchema) getAllMonstersMonstersGetRes() {}

// DataPageMonsterSchemaPage represents sum type.
type DataPageMonsterSchemaPage struct {
	Type DataPageMonsterSchemaPageType // switch on this field
	Int  int
	Null struct{}
}

// DataPageMonsterSchemaPageType is oneOf type of DataPageMonsterSchemaPage.
type DataPageMonsterSchemaPageType string

// Possible values for DataPageMonsterSchemaPageType.
const (
	IntDataPageMonsterSchemaPage  DataPageMonsterSchemaPageType = "int"
	NullDataPageMonsterSchemaPage DataPageMonsterSchemaPageType = "struct{}"
)

// IsInt reports whether DataPageMonsterSchemaPage is int.
func (s DataPageMonsterSchemaPage) IsInt() bool { return s.Type == IntDataPageMonsterSchemaPage }

// IsNull reports whether DataPageMonsterSchemaPage is struct{}.
func (s DataPageMonsterSchemaPage) IsNull() bool { return s.Type == NullDataPageMonsterSchemaPage }

// SetInt sets DataPageMonsterSchemaPage to int.
func (s *DataPageMonsterSchemaPage) SetInt(v int) {
	s.Type = IntDataPageMonsterSchemaPage
	s.Int = v
}

// GetInt returns int and true boolean if DataPageMonsterSchemaPage is int.
func (s DataPageMonsterSchemaPage) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageMonsterSchemaPage returns new DataPageMonsterSchemaPage from int.
func NewIntDataPageMonsterSchemaPage(v int) DataPageMonsterSchemaPage {
	var s DataPageMonsterSchemaPage
	s.SetInt(v)
	return s
}

// SetNull sets DataPageMonsterSchemaPage to struct{}.
func (s *DataPageMonsterSchemaPage) SetNull(v struct{}) {
	s.Type = NullDataPageMonsterSchemaPage
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageMonsterSchemaPage is struct{}.
func (s DataPageMonsterSchemaPage) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageMonsterSchemaPage returns new DataPageMonsterSchemaPage from struct{}.
func NewNullDataPageMonsterSchemaPage(v struct{}) DataPageMonsterSchemaPage {
	var s DataPageMonsterSchemaPage
	s.SetNull(v)
	return s
}

// DataPageMonsterSchemaPages represents sum type.
type DataPageMonsterSchemaPages struct {
	Type DataPageMonsterSchemaPagesType // switch on this field
	Int  int
	Null struct{}
}

// DataPageMonsterSchemaPagesType is oneOf type of DataPageMonsterSchemaPages.
type DataPageMonsterSchemaPagesType string

// Possible values for DataPageMonsterSchemaPagesType.
const (
	IntDataPageMonsterSchemaPages  DataPageMonsterSchemaPagesType = "int"
	NullDataPageMonsterSchemaPages DataPageMonsterSchemaPagesType = "struct{}"
)

// IsInt reports whether DataPageMonsterSchemaPages is int.
func (s DataPageMonsterSchemaPages) IsInt() bool { return s.Type == IntDataPageMonsterSchemaPages }

// IsNull reports whether DataPageMonsterSchemaPages is struct{}.
func (s DataPageMonsterSchemaPages) IsNull() bool { return s.Type == NullDataPageMonsterSchemaPages }

// SetInt sets DataPageMonsterSchemaPages to int.
func (s *DataPageMonsterSchemaPages) SetInt(v int) {
	s.Type = IntDataPageMonsterSchemaPages
	s.Int = v
}

// GetInt returns int and true boolean if DataPageMonsterSchemaPages is int.
func (s DataPageMonsterSchemaPages) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageMonsterSchemaPages returns new DataPageMonsterSchemaPages from int.
func NewIntDataPageMonsterSchemaPages(v int) DataPageMonsterSchemaPages {
	var s DataPageMonsterSchemaPages
	s.SetInt(v)
	return s
}

// SetNull sets DataPageMonsterSchemaPages to struct{}.
func (s *DataPageMonsterSchemaPages) SetNull(v struct{}) {
	s.Type = NullDataPageMonsterSchemaPages
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageMonsterSchemaPages is struct{}.
func (s DataPageMonsterSchemaPages) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageMonsterSchemaPages returns new DataPageMonsterSchemaPages from struct{}.
func NewNullDataPageMonsterSchemaPages(v struct{}) DataPageMonsterSchemaPages {
	var s DataPageMonsterSchemaPages
	s.SetNull(v)
	return s
}

// DataPageMonsterSchemaSize represents sum type.
type DataPageMonsterSchemaSize struct {
	Type DataPageMonsterSchemaSizeType // switch on this field
	Int  int
	Null struct{}
}

// DataPageMonsterSchemaSizeType is oneOf type of DataPageMonsterSchemaSize.
type DataPageMonsterSchemaSizeType string

// Possible values for DataPageMonsterSchemaSizeType.
const (
	IntDataPageMonsterSchemaSize  DataPageMonsterSchemaSizeType = "int"
	NullDataPageMonsterSchemaSize DataPageMonsterSchemaSizeType = "struct{}"
)

// IsInt reports whether DataPageMonsterSchemaSize is int.
func (s DataPageMonsterSchemaSize) IsInt() bool { return s.Type == IntDataPageMonsterSchemaSize }

// IsNull reports whether DataPageMonsterSchemaSize is struct{}.
func (s DataPageMonsterSchemaSize) IsNull() bool { return s.Type == NullDataPageMonsterSchemaSize }

// SetInt sets DataPageMonsterSchemaSize to int.
func (s *DataPageMonsterSchemaSize) SetInt(v int) {
	s.Type = IntDataPageMonsterSchemaSize
	s.Int = v
}

// GetInt returns int and true boolean if DataPageMonsterSchemaSize is int.
func (s DataPageMonsterSchemaSize) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageMonsterSchemaSize returns new DataPageMonsterSchemaSize from int.
func NewIntDataPageMonsterSchemaSize(v int) DataPageMonsterSchemaSize {
	var s DataPageMonsterSchemaSize
	s.SetInt(v)
	return s
}

// SetNull sets DataPageMonsterSchemaSize to struct{}.
func (s *DataPageMonsterSchemaSize) SetNull(v struct{}) {
	s.Type = NullDataPageMonsterSchemaSize
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageMonsterSchemaSize is struct{}.
func (s DataPageMonsterSchemaSize) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageMonsterSchemaSize returns new DataPageMonsterSchemaSize from struct{}.
func NewNullDataPageMonsterSchemaSize(v struct{}) DataPageMonsterSchemaSize {
	var s DataPageMonsterSchemaSize
	s.SetNull(v)
	return s
}

// DataPageMonsterSchemaTotal represents sum type.
type DataPageMonsterSchemaTotal struct {
	Type DataPageMonsterSchemaTotalType // switch on this field
	Int  int
	Null struct{}
}

// DataPageMonsterSchemaTotalType is oneOf type of DataPageMonsterSchemaTotal.
type DataPageMonsterSchemaTotalType string

// Possible values for DataPageMonsterSchemaTotalType.
const (
	IntDataPageMonsterSchemaTotal  DataPageMonsterSchemaTotalType = "int"
	NullDataPageMonsterSchemaTotal DataPageMonsterSchemaTotalType = "struct{}"
)

// IsInt reports whether DataPageMonsterSchemaTotal is int.
func (s DataPageMonsterSchemaTotal) IsInt() bool { return s.Type == IntDataPageMonsterSchemaTotal }

// IsNull reports whether DataPageMonsterSchemaTotal is struct{}.
func (s DataPageMonsterSchemaTotal) IsNull() bool { return s.Type == NullDataPageMonsterSchemaTotal }

// SetInt sets DataPageMonsterSchemaTotal to int.
func (s *DataPageMonsterSchemaTotal) SetInt(v int) {
	s.Type = IntDataPageMonsterSchemaTotal
	s.Int = v
}

// GetInt returns int and true boolean if DataPageMonsterSchemaTotal is int.
func (s DataPageMonsterSchemaTotal) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageMonsterSchemaTotal returns new DataPageMonsterSchemaTotal from int.
func NewIntDataPageMonsterSchemaTotal(v int) DataPageMonsterSchemaTotal {
	var s DataPageMonsterSchemaTotal
	s.SetInt(v)
	return s
}

// SetNull sets DataPageMonsterSchemaTotal to struct{}.
func (s *DataPageMonsterSchemaTotal) SetNull(v struct{}) {
	s.Type = NullDataPageMonsterSchemaTotal
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageMonsterSchemaTotal is struct{}.
func (s DataPageMonsterSchemaTotal) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageMonsterSchemaTotal returns new DataPageMonsterSchemaTotal from struct{}.
func NewNullDataPageMonsterSchemaTotal(v struct{}) DataPageMonsterSchemaTotal {
	var s DataPageMonsterSchemaTotal
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/DataPage_ResourceSchema_
type DataPageResourceSchema struct {
	Data  []ResourceSchema               `json:"data"`
	Total DataPageResourceSchemaTotal    `json:"total"`
	Page  DataPageResourceSchemaPage     `json:"page"`
	Size  DataPageResourceSchemaSize     `json:"size"`
	Pages OptDataPageResourceSchemaPages `json:"pages"`
}

// GetData returns the value of Data.
func (s *DataPageResourceSchema) GetData() []ResourceSchema {
	return s.Data
}

// GetTotal returns the value of Total.
func (s *DataPageResourceSchema) GetTotal() DataPageResourceSchemaTotal {
	return s.Total
}

// GetPage returns the value of Page.
func (s *DataPageResourceSchema) GetPage() DataPageResourceSchemaPage {
	return s.Page
}

// GetSize returns the value of Size.
func (s *DataPageResourceSchema) GetSize() DataPageResourceSchemaSize {
	return s.Size
}

// GetPages returns the value of Pages.
func (s *DataPageResourceSchema) GetPages() OptDataPageResourceSchemaPages {
	return s.Pages
}

// SetData sets the value of Data.
func (s *DataPageResourceSchema) SetData(val []ResourceSchema) {
	s.Data = val
}

// SetTotal sets the value of Total.
func (s *DataPageResourceSchema) SetTotal(val DataPageResourceSchemaTotal) {
	s.Total = val
}

// SetPage sets the value of Page.
func (s *DataPageResourceSchema) SetPage(val DataPageResourceSchemaPage) {
	s.Page = val
}

// SetSize sets the value of Size.
func (s *DataPageResourceSchema) SetSize(val DataPageResourceSchemaSize) {
	s.Size = val
}

// SetPages sets the value of Pages.
func (s *DataPageResourceSchema) SetPages(val OptDataPageResourceSchemaPages) {
	s.Pages = val
}

func (*DataPageResourceSchema) getAllResourcesResourcesGetRes() {}

// DataPageResourceSchemaPage represents sum type.
type DataPageResourceSchemaPage struct {
	Type DataPageResourceSchemaPageType // switch on this field
	Int  int
	Null struct{}
}

// DataPageResourceSchemaPageType is oneOf type of DataPageResourceSchemaPage.
type DataPageResourceSchemaPageType string

// Possible values for DataPageResourceSchemaPageType.
const (
	IntDataPageResourceSchemaPage  DataPageResourceSchemaPageType = "int"
	NullDataPageResourceSchemaPage DataPageResourceSchemaPageType = "struct{}"
)

// IsInt reports whether DataPageResourceSchemaPage is int.
func (s DataPageResourceSchemaPage) IsInt() bool { return s.Type == IntDataPageResourceSchemaPage }

// IsNull reports whether DataPageResourceSchemaPage is struct{}.
func (s DataPageResourceSchemaPage) IsNull() bool { return s.Type == NullDataPageResourceSchemaPage }

// SetInt sets DataPageResourceSchemaPage to int.
func (s *DataPageResourceSchemaPage) SetInt(v int) {
	s.Type = IntDataPageResourceSchemaPage
	s.Int = v
}

// GetInt returns int and true boolean if DataPageResourceSchemaPage is int.
func (s DataPageResourceSchemaPage) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageResourceSchemaPage returns new DataPageResourceSchemaPage from int.
func NewIntDataPageResourceSchemaPage(v int) DataPageResourceSchemaPage {
	var s DataPageResourceSchemaPage
	s.SetInt(v)
	return s
}

// SetNull sets DataPageResourceSchemaPage to struct{}.
func (s *DataPageResourceSchemaPage) SetNull(v struct{}) {
	s.Type = NullDataPageResourceSchemaPage
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageResourceSchemaPage is struct{}.
func (s DataPageResourceSchemaPage) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageResourceSchemaPage returns new DataPageResourceSchemaPage from struct{}.
func NewNullDataPageResourceSchemaPage(v struct{}) DataPageResourceSchemaPage {
	var s DataPageResourceSchemaPage
	s.SetNull(v)
	return s
}

// DataPageResourceSchemaPages represents sum type.
type DataPageResourceSchemaPages struct {
	Type DataPageResourceSchemaPagesType // switch on this field
	Int  int
	Null struct{}
}

// DataPageResourceSchemaPagesType is oneOf type of DataPageResourceSchemaPages.
type DataPageResourceSchemaPagesType string

// Possible values for DataPageResourceSchemaPagesType.
const (
	IntDataPageResourceSchemaPages  DataPageResourceSchemaPagesType = "int"
	NullDataPageResourceSchemaPages DataPageResourceSchemaPagesType = "struct{}"
)

// IsInt reports whether DataPageResourceSchemaPages is int.
func (s DataPageResourceSchemaPages) IsInt() bool { return s.Type == IntDataPageResourceSchemaPages }

// IsNull reports whether DataPageResourceSchemaPages is struct{}.
func (s DataPageResourceSchemaPages) IsNull() bool { return s.Type == NullDataPageResourceSchemaPages }

// SetInt sets DataPageResourceSchemaPages to int.
func (s *DataPageResourceSchemaPages) SetInt(v int) {
	s.Type = IntDataPageResourceSchemaPages
	s.Int = v
}

// GetInt returns int and true boolean if DataPageResourceSchemaPages is int.
func (s DataPageResourceSchemaPages) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageResourceSchemaPages returns new DataPageResourceSchemaPages from int.
func NewIntDataPageResourceSchemaPages(v int) DataPageResourceSchemaPages {
	var s DataPageResourceSchemaPages
	s.SetInt(v)
	return s
}

// SetNull sets DataPageResourceSchemaPages to struct{}.
func (s *DataPageResourceSchemaPages) SetNull(v struct{}) {
	s.Type = NullDataPageResourceSchemaPages
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageResourceSchemaPages is struct{}.
func (s DataPageResourceSchemaPages) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageResourceSchemaPages returns new DataPageResourceSchemaPages from struct{}.
func NewNullDataPageResourceSchemaPages(v struct{}) DataPageResourceSchemaPages {
	var s DataPageResourceSchemaPages
	s.SetNull(v)
	return s
}

// DataPageResourceSchemaSize represents sum type.
type DataPageResourceSchemaSize struct {
	Type DataPageResourceSchemaSizeType // switch on this field
	Int  int
	Null struct{}
}

// DataPageResourceSchemaSizeType is oneOf type of DataPageResourceSchemaSize.
type DataPageResourceSchemaSizeType string

// Possible values for DataPageResourceSchemaSizeType.
const (
	IntDataPageResourceSchemaSize  DataPageResourceSchemaSizeType = "int"
	NullDataPageResourceSchemaSize DataPageResourceSchemaSizeType = "struct{}"
)

// IsInt reports whether DataPageResourceSchemaSize is int.
func (s DataPageResourceSchemaSize) IsInt() bool { return s.Type == IntDataPageResourceSchemaSize }

// IsNull reports whether DataPageResourceSchemaSize is struct{}.
func (s DataPageResourceSchemaSize) IsNull() bool { return s.Type == NullDataPageResourceSchemaSize }

// SetInt sets DataPageResourceSchemaSize to int.
func (s *DataPageResourceSchemaSize) SetInt(v int) {
	s.Type = IntDataPageResourceSchemaSize
	s.Int = v
}

// GetInt returns int and true boolean if DataPageResourceSchemaSize is int.
func (s DataPageResourceSchemaSize) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageResourceSchemaSize returns new DataPageResourceSchemaSize from int.
func NewIntDataPageResourceSchemaSize(v int) DataPageResourceSchemaSize {
	var s DataPageResourceSchemaSize
	s.SetInt(v)
	return s
}

// SetNull sets DataPageResourceSchemaSize to struct{}.
func (s *DataPageResourceSchemaSize) SetNull(v struct{}) {
	s.Type = NullDataPageResourceSchemaSize
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageResourceSchemaSize is struct{}.
func (s DataPageResourceSchemaSize) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageResourceSchemaSize returns new DataPageResourceSchemaSize from struct{}.
func NewNullDataPageResourceSchemaSize(v struct{}) DataPageResourceSchemaSize {
	var s DataPageResourceSchemaSize
	s.SetNull(v)
	return s
}

// DataPageResourceSchemaTotal represents sum type.
type DataPageResourceSchemaTotal struct {
	Type DataPageResourceSchemaTotalType // switch on this field
	Int  int
	Null struct{}
}

// DataPageResourceSchemaTotalType is oneOf type of DataPageResourceSchemaTotal.
type DataPageResourceSchemaTotalType string

// Possible values for DataPageResourceSchemaTotalType.
const (
	IntDataPageResourceSchemaTotal  DataPageResourceSchemaTotalType = "int"
	NullDataPageResourceSchemaTotal DataPageResourceSchemaTotalType = "struct{}"
)

// IsInt reports whether DataPageResourceSchemaTotal is int.
func (s DataPageResourceSchemaTotal) IsInt() bool { return s.Type == IntDataPageResourceSchemaTotal }

// IsNull reports whether DataPageResourceSchemaTotal is struct{}.
func (s DataPageResourceSchemaTotal) IsNull() bool { return s.Type == NullDataPageResourceSchemaTotal }

// SetInt sets DataPageResourceSchemaTotal to int.
func (s *DataPageResourceSchemaTotal) SetInt(v int) {
	s.Type = IntDataPageResourceSchemaTotal
	s.Int = v
}

// GetInt returns int and true boolean if DataPageResourceSchemaTotal is int.
func (s DataPageResourceSchemaTotal) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageResourceSchemaTotal returns new DataPageResourceSchemaTotal from int.
func NewIntDataPageResourceSchemaTotal(v int) DataPageResourceSchemaTotal {
	var s DataPageResourceSchemaTotal
	s.SetInt(v)
	return s
}

// SetNull sets DataPageResourceSchemaTotal to struct{}.
func (s *DataPageResourceSchemaTotal) SetNull(v struct{}) {
	s.Type = NullDataPageResourceSchemaTotal
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageResourceSchemaTotal is struct{}.
func (s DataPageResourceSchemaTotal) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageResourceSchemaTotal returns new DataPageResourceSchemaTotal from struct{}.
func NewNullDataPageResourceSchemaTotal(v struct{}) DataPageResourceSchemaTotal {
	var s DataPageResourceSchemaTotal
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/DataPage_SimpleItemSchema_
type DataPageSimpleItemSchema struct {
	Data  []SimpleItemSchema               `json:"data"`
	Total DataPageSimpleItemSchemaTotal    `json:"total"`
	Page  DataPageSimpleItemSchemaPage     `json:"page"`
	Size  DataPageSimpleItemSchemaSize     `json:"size"`
	Pages OptDataPageSimpleItemSchemaPages `json:"pages"`
}

// GetData returns the value of Data.
func (s *DataPageSimpleItemSchema) GetData() []SimpleItemSchema {
	return s.Data
}

// GetTotal returns the value of Total.
func (s *DataPageSimpleItemSchema) GetTotal() DataPageSimpleItemSchemaTotal {
	return s.Total
}

// GetPage returns the value of Page.
func (s *DataPageSimpleItemSchema) GetPage() DataPageSimpleItemSchemaPage {
	return s.Page
}

// GetSize returns the value of Size.
func (s *DataPageSimpleItemSchema) GetSize() DataPageSimpleItemSchemaSize {
	return s.Size
}

// GetPages returns the value of Pages.
func (s *DataPageSimpleItemSchema) GetPages() OptDataPageSimpleItemSchemaPages {
	return s.Pages
}

// SetData sets the value of Data.
func (s *DataPageSimpleItemSchema) SetData(val []SimpleItemSchema) {
	s.Data = val
}

// SetTotal sets the value of Total.
func (s *DataPageSimpleItemSchema) SetTotal(val DataPageSimpleItemSchemaTotal) {
	s.Total = val
}

// SetPage sets the value of Page.
func (s *DataPageSimpleItemSchema) SetPage(val DataPageSimpleItemSchemaPage) {
	s.Page = val
}

// SetSize sets the value of Size.
func (s *DataPageSimpleItemSchema) SetSize(val DataPageSimpleItemSchemaSize) {
	s.Size = val
}

// SetPages sets the value of Pages.
func (s *DataPageSimpleItemSchema) SetPages(val OptDataPageSimpleItemSchemaPages) {
	s.Pages = val
}

func (*DataPageSimpleItemSchema) getBankItemsMyBankItemsGetRes() {}

// DataPageSimpleItemSchemaPage represents sum type.
type DataPageSimpleItemSchemaPage struct {
	Type DataPageSimpleItemSchemaPageType // switch on this field
	Int  int
	Null struct{}
}

// DataPageSimpleItemSchemaPageType is oneOf type of DataPageSimpleItemSchemaPage.
type DataPageSimpleItemSchemaPageType string

// Possible values for DataPageSimpleItemSchemaPageType.
const (
	IntDataPageSimpleItemSchemaPage  DataPageSimpleItemSchemaPageType = "int"
	NullDataPageSimpleItemSchemaPage DataPageSimpleItemSchemaPageType = "struct{}"
)

// IsInt reports whether DataPageSimpleItemSchemaPage is int.
func (s DataPageSimpleItemSchemaPage) IsInt() bool { return s.Type == IntDataPageSimpleItemSchemaPage }

// IsNull reports whether DataPageSimpleItemSchemaPage is struct{}.
func (s DataPageSimpleItemSchemaPage) IsNull() bool {
	return s.Type == NullDataPageSimpleItemSchemaPage
}

// SetInt sets DataPageSimpleItemSchemaPage to int.
func (s *DataPageSimpleItemSchemaPage) SetInt(v int) {
	s.Type = IntDataPageSimpleItemSchemaPage
	s.Int = v
}

// GetInt returns int and true boolean if DataPageSimpleItemSchemaPage is int.
func (s DataPageSimpleItemSchemaPage) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageSimpleItemSchemaPage returns new DataPageSimpleItemSchemaPage from int.
func NewIntDataPageSimpleItemSchemaPage(v int) DataPageSimpleItemSchemaPage {
	var s DataPageSimpleItemSchemaPage
	s.SetInt(v)
	return s
}

// SetNull sets DataPageSimpleItemSchemaPage to struct{}.
func (s *DataPageSimpleItemSchemaPage) SetNull(v struct{}) {
	s.Type = NullDataPageSimpleItemSchemaPage
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageSimpleItemSchemaPage is struct{}.
func (s DataPageSimpleItemSchemaPage) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageSimpleItemSchemaPage returns new DataPageSimpleItemSchemaPage from struct{}.
func NewNullDataPageSimpleItemSchemaPage(v struct{}) DataPageSimpleItemSchemaPage {
	var s DataPageSimpleItemSchemaPage
	s.SetNull(v)
	return s
}

// DataPageSimpleItemSchemaPages represents sum type.
type DataPageSimpleItemSchemaPages struct {
	Type DataPageSimpleItemSchemaPagesType // switch on this field
	Int  int
	Null struct{}
}

// DataPageSimpleItemSchemaPagesType is oneOf type of DataPageSimpleItemSchemaPages.
type DataPageSimpleItemSchemaPagesType string

// Possible values for DataPageSimpleItemSchemaPagesType.
const (
	IntDataPageSimpleItemSchemaPages  DataPageSimpleItemSchemaPagesType = "int"
	NullDataPageSimpleItemSchemaPages DataPageSimpleItemSchemaPagesType = "struct{}"
)

// IsInt reports whether DataPageSimpleItemSchemaPages is int.
func (s DataPageSimpleItemSchemaPages) IsInt() bool {
	return s.Type == IntDataPageSimpleItemSchemaPages
}

// IsNull reports whether DataPageSimpleItemSchemaPages is struct{}.
func (s DataPageSimpleItemSchemaPages) IsNull() bool {
	return s.Type == NullDataPageSimpleItemSchemaPages
}

// SetInt sets DataPageSimpleItemSchemaPages to int.
func (s *DataPageSimpleItemSchemaPages) SetInt(v int) {
	s.Type = IntDataPageSimpleItemSchemaPages
	s.Int = v
}

// GetInt returns int and true boolean if DataPageSimpleItemSchemaPages is int.
func (s DataPageSimpleItemSchemaPages) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageSimpleItemSchemaPages returns new DataPageSimpleItemSchemaPages from int.
func NewIntDataPageSimpleItemSchemaPages(v int) DataPageSimpleItemSchemaPages {
	var s DataPageSimpleItemSchemaPages
	s.SetInt(v)
	return s
}

// SetNull sets DataPageSimpleItemSchemaPages to struct{}.
func (s *DataPageSimpleItemSchemaPages) SetNull(v struct{}) {
	s.Type = NullDataPageSimpleItemSchemaPages
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageSimpleItemSchemaPages is struct{}.
func (s DataPageSimpleItemSchemaPages) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageSimpleItemSchemaPages returns new DataPageSimpleItemSchemaPages from struct{}.
func NewNullDataPageSimpleItemSchemaPages(v struct{}) DataPageSimpleItemSchemaPages {
	var s DataPageSimpleItemSchemaPages
	s.SetNull(v)
	return s
}

// DataPageSimpleItemSchemaSize represents sum type.
type DataPageSimpleItemSchemaSize struct {
	Type DataPageSimpleItemSchemaSizeType // switch on this field
	Int  int
	Null struct{}
}

// DataPageSimpleItemSchemaSizeType is oneOf type of DataPageSimpleItemSchemaSize.
type DataPageSimpleItemSchemaSizeType string

// Possible values for DataPageSimpleItemSchemaSizeType.
const (
	IntDataPageSimpleItemSchemaSize  DataPageSimpleItemSchemaSizeType = "int"
	NullDataPageSimpleItemSchemaSize DataPageSimpleItemSchemaSizeType = "struct{}"
)

// IsInt reports whether DataPageSimpleItemSchemaSize is int.
func (s DataPageSimpleItemSchemaSize) IsInt() bool { return s.Type == IntDataPageSimpleItemSchemaSize }

// IsNull reports whether DataPageSimpleItemSchemaSize is struct{}.
func (s DataPageSimpleItemSchemaSize) IsNull() bool {
	return s.Type == NullDataPageSimpleItemSchemaSize
}

// SetInt sets DataPageSimpleItemSchemaSize to int.
func (s *DataPageSimpleItemSchemaSize) SetInt(v int) {
	s.Type = IntDataPageSimpleItemSchemaSize
	s.Int = v
}

// GetInt returns int and true boolean if DataPageSimpleItemSchemaSize is int.
func (s DataPageSimpleItemSchemaSize) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageSimpleItemSchemaSize returns new DataPageSimpleItemSchemaSize from int.
func NewIntDataPageSimpleItemSchemaSize(v int) DataPageSimpleItemSchemaSize {
	var s DataPageSimpleItemSchemaSize
	s.SetInt(v)
	return s
}

// SetNull sets DataPageSimpleItemSchemaSize to struct{}.
func (s *DataPageSimpleItemSchemaSize) SetNull(v struct{}) {
	s.Type = NullDataPageSimpleItemSchemaSize
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageSimpleItemSchemaSize is struct{}.
func (s DataPageSimpleItemSchemaSize) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageSimpleItemSchemaSize returns new DataPageSimpleItemSchemaSize from struct{}.
func NewNullDataPageSimpleItemSchemaSize(v struct{}) DataPageSimpleItemSchemaSize {
	var s DataPageSimpleItemSchemaSize
	s.SetNull(v)
	return s
}

// DataPageSimpleItemSchemaTotal represents sum type.
type DataPageSimpleItemSchemaTotal struct {
	Type DataPageSimpleItemSchemaTotalType // switch on this field
	Int  int
	Null struct{}
}

// DataPageSimpleItemSchemaTotalType is oneOf type of DataPageSimpleItemSchemaTotal.
type DataPageSimpleItemSchemaTotalType string

// Possible values for DataPageSimpleItemSchemaTotalType.
const (
	IntDataPageSimpleItemSchemaTotal  DataPageSimpleItemSchemaTotalType = "int"
	NullDataPageSimpleItemSchemaTotal DataPageSimpleItemSchemaTotalType = "struct{}"
)

// IsInt reports whether DataPageSimpleItemSchemaTotal is int.
func (s DataPageSimpleItemSchemaTotal) IsInt() bool {
	return s.Type == IntDataPageSimpleItemSchemaTotal
}

// IsNull reports whether DataPageSimpleItemSchemaTotal is struct{}.
func (s DataPageSimpleItemSchemaTotal) IsNull() bool {
	return s.Type == NullDataPageSimpleItemSchemaTotal
}

// SetInt sets DataPageSimpleItemSchemaTotal to int.
func (s *DataPageSimpleItemSchemaTotal) SetInt(v int) {
	s.Type = IntDataPageSimpleItemSchemaTotal
	s.Int = v
}

// GetInt returns int and true boolean if DataPageSimpleItemSchemaTotal is int.
func (s DataPageSimpleItemSchemaTotal) GetInt() (v int, ok bool) {
	if !s.IsInt() {
		return v, false
	}
	return s.Int, true
}

// NewIntDataPageSimpleItemSchemaTotal returns new DataPageSimpleItemSchemaTotal from int.
func NewIntDataPageSimpleItemSchemaTotal(v int) DataPageSimpleItemSchemaTotal {
	var s DataPageSimpleItemSchemaTotal
	s.SetInt(v)
	return s
}

// SetNull sets DataPageSimpleItemSchemaTotal to struct{}.
func (s *DataPageSimpleItemSchemaTotal) SetNull(v struct{}) {
	s.Type = NullDataPageSimpleItemSchemaTotal
	s.Null = v
}

// GetNull returns struct{} and true boolean if DataPageSimpleItemSchemaTotal is struct{}.
func (s DataPageSimpleItemSchemaTotal) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDataPageSimpleItemSchemaTotal returns new DataPageSimpleItemSchemaTotal from struct{}.
func NewNullDataPageSimpleItemSchemaTotal(v struct{}) DataPageSimpleItemSchemaTotal {
	var s DataPageSimpleItemSchemaTotal
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/DeleteItemResponseSchema
type DeleteItemResponseSchema struct {
	Data DeleteItemSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *DeleteItemResponseSchema) GetData() DeleteItemSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *DeleteItemResponseSchema) SetData(val DeleteItemSchema) {
	s.Data = val
}

func (*DeleteItemResponseSchema) actionDeleteItemMyNameActionDeletePostRes() {}

// Ref: #/components/schemas/DeleteItemSchema
type DeleteItemSchema struct {
	// Cooldown details.
	Cooldown DeleteItemSchemaCooldown `json:"cooldown"`
	// Item details.
	Item DeleteItemSchemaItem `json:"item"`
	// Player details.
	Character DeleteItemSchemaCharacter `json:"character"`
}

// GetCooldown returns the value of Cooldown.
func (s *DeleteItemSchema) GetCooldown() DeleteItemSchemaCooldown {
	return s.Cooldown
}

// GetItem returns the value of Item.
func (s *DeleteItemSchema) GetItem() DeleteItemSchemaItem {
	return s.Item
}

// GetCharacter returns the value of Character.
func (s *DeleteItemSchema) GetCharacter() DeleteItemSchemaCharacter {
	return s.Character
}

// SetCooldown sets the value of Cooldown.
func (s *DeleteItemSchema) SetCooldown(val DeleteItemSchemaCooldown) {
	s.Cooldown = val
}

// SetItem sets the value of Item.
func (s *DeleteItemSchema) SetItem(val DeleteItemSchemaItem) {
	s.Item = val
}

// SetCharacter sets the value of Character.
func (s *DeleteItemSchema) SetCharacter(val DeleteItemSchemaCharacter) {
	s.Character = val
}

type DeleteItemSchemaCharacter struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin DeleteItemSchemaCharacterSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptDeleteItemSchemaCharacterCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *DeleteItemSchemaCharacter) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *DeleteItemSchemaCharacter) GetSkin() DeleteItemSchemaCharacterSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *DeleteItemSchemaCharacter) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *DeleteItemSchemaCharacter) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *DeleteItemSchemaCharacter) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *DeleteItemSchemaCharacter) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *DeleteItemSchemaCharacter) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *DeleteItemSchemaCharacter) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *DeleteItemSchemaCharacter) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *DeleteItemSchemaCharacter) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *DeleteItemSchemaCharacter) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *DeleteItemSchemaCharacter) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *DeleteItemSchemaCharacter) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *DeleteItemSchemaCharacter) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *DeleteItemSchemaCharacter) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *DeleteItemSchemaCharacter) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *DeleteItemSchemaCharacter) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *DeleteItemSchemaCharacter) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *DeleteItemSchemaCharacter) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *DeleteItemSchemaCharacter) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *DeleteItemSchemaCharacter) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *DeleteItemSchemaCharacter) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *DeleteItemSchemaCharacter) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *DeleteItemSchemaCharacter) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *DeleteItemSchemaCharacter) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *DeleteItemSchemaCharacter) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *DeleteItemSchemaCharacter) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *DeleteItemSchemaCharacter) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *DeleteItemSchemaCharacter) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *DeleteItemSchemaCharacter) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *DeleteItemSchemaCharacter) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *DeleteItemSchemaCharacter) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *DeleteItemSchemaCharacter) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *DeleteItemSchemaCharacter) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *DeleteItemSchemaCharacter) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *DeleteItemSchemaCharacter) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *DeleteItemSchemaCharacter) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *DeleteItemSchemaCharacter) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *DeleteItemSchemaCharacter) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *DeleteItemSchemaCharacter) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *DeleteItemSchemaCharacter) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *DeleteItemSchemaCharacter) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *DeleteItemSchemaCharacter) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *DeleteItemSchemaCharacter) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *DeleteItemSchemaCharacter) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *DeleteItemSchemaCharacter) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *DeleteItemSchemaCharacter) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *DeleteItemSchemaCharacter) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *DeleteItemSchemaCharacter) GetCooldownExpiration() OptDeleteItemSchemaCharacterCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *DeleteItemSchemaCharacter) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *DeleteItemSchemaCharacter) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *DeleteItemSchemaCharacter) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *DeleteItemSchemaCharacter) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *DeleteItemSchemaCharacter) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *DeleteItemSchemaCharacter) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *DeleteItemSchemaCharacter) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *DeleteItemSchemaCharacter) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *DeleteItemSchemaCharacter) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *DeleteItemSchemaCharacter) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *DeleteItemSchemaCharacter) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *DeleteItemSchemaCharacter) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *DeleteItemSchemaCharacter) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *DeleteItemSchemaCharacter) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *DeleteItemSchemaCharacter) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *DeleteItemSchemaCharacter) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *DeleteItemSchemaCharacter) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *DeleteItemSchemaCharacter) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *DeleteItemSchemaCharacter) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *DeleteItemSchemaCharacter) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *DeleteItemSchemaCharacter) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *DeleteItemSchemaCharacter) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *DeleteItemSchemaCharacter) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *DeleteItemSchemaCharacter) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *DeleteItemSchemaCharacter) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *DeleteItemSchemaCharacter) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *DeleteItemSchemaCharacter) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *DeleteItemSchemaCharacter) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *DeleteItemSchemaCharacter) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *DeleteItemSchemaCharacter) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *DeleteItemSchemaCharacter) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *DeleteItemSchemaCharacter) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *DeleteItemSchemaCharacter) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *DeleteItemSchemaCharacter) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *DeleteItemSchemaCharacter) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *DeleteItemSchemaCharacter) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *DeleteItemSchemaCharacter) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *DeleteItemSchemaCharacter) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *DeleteItemSchemaCharacter) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *DeleteItemSchemaCharacter) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *DeleteItemSchemaCharacter) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *DeleteItemSchemaCharacter) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *DeleteItemSchemaCharacter) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *DeleteItemSchemaCharacter) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *DeleteItemSchemaCharacter) SetSkin(val DeleteItemSchemaCharacterSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *DeleteItemSchemaCharacter) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *DeleteItemSchemaCharacter) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *DeleteItemSchemaCharacter) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *DeleteItemSchemaCharacter) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *DeleteItemSchemaCharacter) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *DeleteItemSchemaCharacter) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *DeleteItemSchemaCharacter) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *DeleteItemSchemaCharacter) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *DeleteItemSchemaCharacter) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *DeleteItemSchemaCharacter) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *DeleteItemSchemaCharacter) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *DeleteItemSchemaCharacter) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *DeleteItemSchemaCharacter) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *DeleteItemSchemaCharacter) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *DeleteItemSchemaCharacter) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *DeleteItemSchemaCharacter) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *DeleteItemSchemaCharacter) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *DeleteItemSchemaCharacter) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *DeleteItemSchemaCharacter) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *DeleteItemSchemaCharacter) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *DeleteItemSchemaCharacter) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *DeleteItemSchemaCharacter) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *DeleteItemSchemaCharacter) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *DeleteItemSchemaCharacter) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *DeleteItemSchemaCharacter) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *DeleteItemSchemaCharacter) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *DeleteItemSchemaCharacter) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *DeleteItemSchemaCharacter) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *DeleteItemSchemaCharacter) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *DeleteItemSchemaCharacter) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *DeleteItemSchemaCharacter) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *DeleteItemSchemaCharacter) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *DeleteItemSchemaCharacter) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *DeleteItemSchemaCharacter) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *DeleteItemSchemaCharacter) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *DeleteItemSchemaCharacter) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *DeleteItemSchemaCharacter) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *DeleteItemSchemaCharacter) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *DeleteItemSchemaCharacter) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *DeleteItemSchemaCharacter) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *DeleteItemSchemaCharacter) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *DeleteItemSchemaCharacter) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *DeleteItemSchemaCharacter) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *DeleteItemSchemaCharacter) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *DeleteItemSchemaCharacter) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *DeleteItemSchemaCharacter) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *DeleteItemSchemaCharacter) SetCooldownExpiration(val OptDeleteItemSchemaCharacterCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *DeleteItemSchemaCharacter) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *DeleteItemSchemaCharacter) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *DeleteItemSchemaCharacter) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *DeleteItemSchemaCharacter) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *DeleteItemSchemaCharacter) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *DeleteItemSchemaCharacter) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *DeleteItemSchemaCharacter) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *DeleteItemSchemaCharacter) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *DeleteItemSchemaCharacter) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *DeleteItemSchemaCharacter) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *DeleteItemSchemaCharacter) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *DeleteItemSchemaCharacter) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *DeleteItemSchemaCharacter) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *DeleteItemSchemaCharacter) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *DeleteItemSchemaCharacter) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *DeleteItemSchemaCharacter) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *DeleteItemSchemaCharacter) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *DeleteItemSchemaCharacter) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *DeleteItemSchemaCharacter) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *DeleteItemSchemaCharacter) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *DeleteItemSchemaCharacter) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *DeleteItemSchemaCharacter) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *DeleteItemSchemaCharacter) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *DeleteItemSchemaCharacter) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *DeleteItemSchemaCharacter) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *DeleteItemSchemaCharacter) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *DeleteItemSchemaCharacter) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *DeleteItemSchemaCharacter) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *DeleteItemSchemaCharacter) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *DeleteItemSchemaCharacter) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *DeleteItemSchemaCharacter) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *DeleteItemSchemaCharacter) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *DeleteItemSchemaCharacter) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *DeleteItemSchemaCharacter) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *DeleteItemSchemaCharacter) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *DeleteItemSchemaCharacter) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *DeleteItemSchemaCharacter) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *DeleteItemSchemaCharacter) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *DeleteItemSchemaCharacter) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *DeleteItemSchemaCharacter) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *DeleteItemSchemaCharacter) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *DeleteItemSchemaCharacter) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *DeleteItemSchemaCharacter) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// DeleteItemSchemaCharacterCooldownExpiration represents sum type.
type DeleteItemSchemaCharacterCooldownExpiration struct {
	Type     DeleteItemSchemaCharacterCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// DeleteItemSchemaCharacterCooldownExpirationType is oneOf type of DeleteItemSchemaCharacterCooldownExpiration.
type DeleteItemSchemaCharacterCooldownExpirationType string

// Possible values for DeleteItemSchemaCharacterCooldownExpirationType.
const (
	DateTimeDeleteItemSchemaCharacterCooldownExpiration DeleteItemSchemaCharacterCooldownExpirationType = "time.Time"
	NullDeleteItemSchemaCharacterCooldownExpiration     DeleteItemSchemaCharacterCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether DeleteItemSchemaCharacterCooldownExpiration is time.Time.
func (s DeleteItemSchemaCharacterCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeDeleteItemSchemaCharacterCooldownExpiration
}

// IsNull reports whether DeleteItemSchemaCharacterCooldownExpiration is struct{}.
func (s DeleteItemSchemaCharacterCooldownExpiration) IsNull() bool {
	return s.Type == NullDeleteItemSchemaCharacterCooldownExpiration
}

// SetDateTime sets DeleteItemSchemaCharacterCooldownExpiration to time.Time.
func (s *DeleteItemSchemaCharacterCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeDeleteItemSchemaCharacterCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if DeleteItemSchemaCharacterCooldownExpiration is time.Time.
func (s DeleteItemSchemaCharacterCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeDeleteItemSchemaCharacterCooldownExpiration returns new DeleteItemSchemaCharacterCooldownExpiration from time.Time.
func NewDateTimeDeleteItemSchemaCharacterCooldownExpiration(v time.Time) DeleteItemSchemaCharacterCooldownExpiration {
	var s DeleteItemSchemaCharacterCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets DeleteItemSchemaCharacterCooldownExpiration to struct{}.
func (s *DeleteItemSchemaCharacterCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullDeleteItemSchemaCharacterCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if DeleteItemSchemaCharacterCooldownExpiration is struct{}.
func (s DeleteItemSchemaCharacterCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullDeleteItemSchemaCharacterCooldownExpiration returns new DeleteItemSchemaCharacterCooldownExpiration from struct{}.
func NewNullDeleteItemSchemaCharacterCooldownExpiration(v struct{}) DeleteItemSchemaCharacterCooldownExpiration {
	var s DeleteItemSchemaCharacterCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type DeleteItemSchemaCharacterSkin string

const (
	DeleteItemSchemaCharacterSkinMen1   DeleteItemSchemaCharacterSkin = "men1"
	DeleteItemSchemaCharacterSkinMen2   DeleteItemSchemaCharacterSkin = "men2"
	DeleteItemSchemaCharacterSkinMen3   DeleteItemSchemaCharacterSkin = "men3"
	DeleteItemSchemaCharacterSkinWomen1 DeleteItemSchemaCharacterSkin = "women1"
	DeleteItemSchemaCharacterSkinWomen2 DeleteItemSchemaCharacterSkin = "women2"
	DeleteItemSchemaCharacterSkinWomen3 DeleteItemSchemaCharacterSkin = "women3"
)

// AllValues returns all DeleteItemSchemaCharacterSkin values.
func (DeleteItemSchemaCharacterSkin) AllValues() []DeleteItemSchemaCharacterSkin {
	return []DeleteItemSchemaCharacterSkin{
		DeleteItemSchemaCharacterSkinMen1,
		DeleteItemSchemaCharacterSkinMen2,
		DeleteItemSchemaCharacterSkinMen3,
		DeleteItemSchemaCharacterSkinWomen1,
		DeleteItemSchemaCharacterSkinWomen2,
		DeleteItemSchemaCharacterSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DeleteItemSchemaCharacterSkin) MarshalText() ([]byte, error) {
	switch s {
	case DeleteItemSchemaCharacterSkinMen1:
		return []byte(s), nil
	case DeleteItemSchemaCharacterSkinMen2:
		return []byte(s), nil
	case DeleteItemSchemaCharacterSkinMen3:
		return []byte(s), nil
	case DeleteItemSchemaCharacterSkinWomen1:
		return []byte(s), nil
	case DeleteItemSchemaCharacterSkinWomen2:
		return []byte(s), nil
	case DeleteItemSchemaCharacterSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DeleteItemSchemaCharacterSkin) UnmarshalText(data []byte) error {
	switch DeleteItemSchemaCharacterSkin(data) {
	case DeleteItemSchemaCharacterSkinMen1:
		*s = DeleteItemSchemaCharacterSkinMen1
		return nil
	case DeleteItemSchemaCharacterSkinMen2:
		*s = DeleteItemSchemaCharacterSkinMen2
		return nil
	case DeleteItemSchemaCharacterSkinMen3:
		*s = DeleteItemSchemaCharacterSkinMen3
		return nil
	case DeleteItemSchemaCharacterSkinWomen1:
		*s = DeleteItemSchemaCharacterSkinWomen1
		return nil
	case DeleteItemSchemaCharacterSkinWomen2:
		*s = DeleteItemSchemaCharacterSkinWomen2
		return nil
	case DeleteItemSchemaCharacterSkinWomen3:
		*s = DeleteItemSchemaCharacterSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type DeleteItemSchemaCooldown struct {
	// The total seconds of the cooldown.
	TotalSeconds int `json:"total_seconds"`
	// The remaining seconds of the cooldown.
	RemainingSeconds int `json:"remaining_seconds"`
	// The expiration of the cooldown.
	Expiration time.Time `json:"expiration"`
	// The reason of the cooldown.
	Reason DeleteItemSchemaCooldownReason `json:"reason"`
}

// GetTotalSeconds returns the value of TotalSeconds.
func (s *DeleteItemSchemaCooldown) GetTotalSeconds() int {
	return s.TotalSeconds
}

// GetRemainingSeconds returns the value of RemainingSeconds.
func (s *DeleteItemSchemaCooldown) GetRemainingSeconds() int {
	return s.RemainingSeconds
}

// GetExpiration returns the value of Expiration.
func (s *DeleteItemSchemaCooldown) GetExpiration() time.Time {
	return s.Expiration
}

// GetReason returns the value of Reason.
func (s *DeleteItemSchemaCooldown) GetReason() DeleteItemSchemaCooldownReason {
	return s.Reason
}

// SetTotalSeconds sets the value of TotalSeconds.
func (s *DeleteItemSchemaCooldown) SetTotalSeconds(val int) {
	s.TotalSeconds = val
}

// SetRemainingSeconds sets the value of RemainingSeconds.
func (s *DeleteItemSchemaCooldown) SetRemainingSeconds(val int) {
	s.RemainingSeconds = val
}

// SetExpiration sets the value of Expiration.
func (s *DeleteItemSchemaCooldown) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetReason sets the value of Reason.
func (s *DeleteItemSchemaCooldown) SetReason(val DeleteItemSchemaCooldownReason) {
	s.Reason = val
}

// The reason of the cooldown.
type DeleteItemSchemaCooldownReason string

const (
	DeleteItemSchemaCooldownReasonMovement     DeleteItemSchemaCooldownReason = "movement"
	DeleteItemSchemaCooldownReasonFight        DeleteItemSchemaCooldownReason = "fight"
	DeleteItemSchemaCooldownReasonCrafting     DeleteItemSchemaCooldownReason = "crafting"
	DeleteItemSchemaCooldownReasonGathering    DeleteItemSchemaCooldownReason = "gathering"
	DeleteItemSchemaCooldownReasonBuyGe        DeleteItemSchemaCooldownReason = "buy_ge"
	DeleteItemSchemaCooldownReasonSellGe       DeleteItemSchemaCooldownReason = "sell_ge"
	DeleteItemSchemaCooldownReasonDeleteItem   DeleteItemSchemaCooldownReason = "delete_item"
	DeleteItemSchemaCooldownReasonDepositBank  DeleteItemSchemaCooldownReason = "deposit_bank"
	DeleteItemSchemaCooldownReasonWithdrawBank DeleteItemSchemaCooldownReason = "withdraw_bank"
	DeleteItemSchemaCooldownReasonEquip        DeleteItemSchemaCooldownReason = "equip"
	DeleteItemSchemaCooldownReasonUnequip      DeleteItemSchemaCooldownReason = "unequip"
	DeleteItemSchemaCooldownReasonTask         DeleteItemSchemaCooldownReason = "task"
	DeleteItemSchemaCooldownReasonRecycling    DeleteItemSchemaCooldownReason = "recycling"
)

// AllValues returns all DeleteItemSchemaCooldownReason values.
func (DeleteItemSchemaCooldownReason) AllValues() []DeleteItemSchemaCooldownReason {
	return []DeleteItemSchemaCooldownReason{
		DeleteItemSchemaCooldownReasonMovement,
		DeleteItemSchemaCooldownReasonFight,
		DeleteItemSchemaCooldownReasonCrafting,
		DeleteItemSchemaCooldownReasonGathering,
		DeleteItemSchemaCooldownReasonBuyGe,
		DeleteItemSchemaCooldownReasonSellGe,
		DeleteItemSchemaCooldownReasonDeleteItem,
		DeleteItemSchemaCooldownReasonDepositBank,
		DeleteItemSchemaCooldownReasonWithdrawBank,
		DeleteItemSchemaCooldownReasonEquip,
		DeleteItemSchemaCooldownReasonUnequip,
		DeleteItemSchemaCooldownReasonTask,
		DeleteItemSchemaCooldownReasonRecycling,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s DeleteItemSchemaCooldownReason) MarshalText() ([]byte, error) {
	switch s {
	case DeleteItemSchemaCooldownReasonMovement:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonFight:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonCrafting:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonGathering:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonBuyGe:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonSellGe:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonDeleteItem:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonDepositBank:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonWithdrawBank:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonEquip:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonUnequip:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonTask:
		return []byte(s), nil
	case DeleteItemSchemaCooldownReasonRecycling:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *DeleteItemSchemaCooldownReason) UnmarshalText(data []byte) error {
	switch DeleteItemSchemaCooldownReason(data) {
	case DeleteItemSchemaCooldownReasonMovement:
		*s = DeleteItemSchemaCooldownReasonMovement
		return nil
	case DeleteItemSchemaCooldownReasonFight:
		*s = DeleteItemSchemaCooldownReasonFight
		return nil
	case DeleteItemSchemaCooldownReasonCrafting:
		*s = DeleteItemSchemaCooldownReasonCrafting
		return nil
	case DeleteItemSchemaCooldownReasonGathering:
		*s = DeleteItemSchemaCooldownReasonGathering
		return nil
	case DeleteItemSchemaCooldownReasonBuyGe:
		*s = DeleteItemSchemaCooldownReasonBuyGe
		return nil
	case DeleteItemSchemaCooldownReasonSellGe:
		*s = DeleteItemSchemaCooldownReasonSellGe
		return nil
	case DeleteItemSchemaCooldownReasonDeleteItem:
		*s = DeleteItemSchemaCooldownReasonDeleteItem
		return nil
	case DeleteItemSchemaCooldownReasonDepositBank:
		*s = DeleteItemSchemaCooldownReasonDepositBank
		return nil
	case DeleteItemSchemaCooldownReasonWithdrawBank:
		*s = DeleteItemSchemaCooldownReasonWithdrawBank
		return nil
	case DeleteItemSchemaCooldownReasonEquip:
		*s = DeleteItemSchemaCooldownReasonEquip
		return nil
	case DeleteItemSchemaCooldownReasonUnequip:
		*s = DeleteItemSchemaCooldownReasonUnequip
		return nil
	case DeleteItemSchemaCooldownReasonTask:
		*s = DeleteItemSchemaCooldownReasonTask
		return nil
	case DeleteItemSchemaCooldownReasonRecycling:
		*s = DeleteItemSchemaCooldownReasonRecycling
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type DeleteItemSchemaItem struct {
	// Item code.
	Code string `json:"code"`
	// Item quantity.
	Quantity int `json:"quantity"`
}

// GetCode returns the value of Code.
func (s *DeleteItemSchemaItem) GetCode() string {
	return s.Code
}

// GetQuantity returns the value of Quantity.
func (s *DeleteItemSchemaItem) GetQuantity() int {
	return s.Quantity
}

// SetCode sets the value of Code.
func (s *DeleteItemSchemaItem) SetCode(val string) {
	s.Code = val
}

// SetQuantity sets the value of Quantity.
func (s *DeleteItemSchemaItem) SetQuantity(val int) {
	s.Quantity = val
}

// Ref: #/components/schemas/DepositWithdrawGoldSchema
type DepositWithdrawGoldSchema struct {
	// Quantity of gold.
	Quantity int `json:"quantity"`
}

// GetQuantity returns the value of Quantity.
func (s *DepositWithdrawGoldSchema) GetQuantity() int {
	return s.Quantity
}

// SetQuantity sets the value of Quantity.
func (s *DepositWithdrawGoldSchema) SetQuantity(val int) {
	s.Quantity = val
}

// Ref: #/components/schemas/DestinationSchema
type DestinationSchema struct {
	// The x coordinate of the destination.
	X int `json:"x"`
	// The y coordinate of the destination.
	Y int `json:"y"`
}

// GetX returns the value of X.
func (s *DestinationSchema) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *DestinationSchema) GetY() int {
	return s.Y
}

// SetX sets the value of X.
func (s *DestinationSchema) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *DestinationSchema) SetY(val int) {
	s.Y = val
}

// Ref: #/components/schemas/DropRateSchema
type DropRateSchema struct {
	// Item code.
	Code string `json:"code"`
	// Chance rate.
	Rate int `json:"rate"`
	// Minimum quantity.
	MinQuantity int `json:"min_quantity"`
	// Maximum quantity.
	MaxQuantity int `json:"max_quantity"`
}

// GetCode returns the value of Code.
func (s *DropRateSchema) GetCode() string {
	return s.Code
}

// GetRate returns the value of Rate.
func (s *DropRateSchema) GetRate() int {
	return s.Rate
}

// GetMinQuantity returns the value of MinQuantity.
func (s *DropRateSchema) GetMinQuantity() int {
	return s.MinQuantity
}

// GetMaxQuantity returns the value of MaxQuantity.
func (s *DropRateSchema) GetMaxQuantity() int {
	return s.MaxQuantity
}

// SetCode sets the value of Code.
func (s *DropRateSchema) SetCode(val string) {
	s.Code = val
}

// SetRate sets the value of Rate.
func (s *DropRateSchema) SetRate(val int) {
	s.Rate = val
}

// SetMinQuantity sets the value of MinQuantity.
func (s *DropRateSchema) SetMinQuantity(val int) {
	s.MinQuantity = val
}

// SetMaxQuantity sets the value of MaxQuantity.
func (s *DropRateSchema) SetMaxQuantity(val int) {
	s.MaxQuantity = val
}

// Ref: #/components/schemas/DropSchema
type DropSchema struct {
	// The code of the item.
	Code string `json:"code"`
	// The quantity of the item.
	Quantity int `json:"quantity"`
}

// GetCode returns the value of Code.
func (s *DropSchema) GetCode() string {
	return s.Code
}

// GetQuantity returns the value of Quantity.
func (s *DropSchema) GetQuantity() int {
	return s.Quantity
}

// SetCode sets the value of Code.
func (s *DropSchema) SetCode(val string) {
	s.Code = val
}

// SetQuantity sets the value of Quantity.
func (s *DropSchema) SetQuantity(val int) {
	s.Quantity = val
}

// Ref: #/components/schemas/EquipRequestSchema
type EquipRequestSchema struct {
	// Cooldown details.
	Cooldown EquipRequestSchemaCooldown `json:"cooldown"`
	// Item slot.
	Slot EquipRequestSchemaSlot `json:"slot"`
	// Item details.
	Item EquipRequestSchemaItem `json:"item"`
	// Player details.
	Character EquipRequestSchemaCharacter `json:"character"`
}

// GetCooldown returns the value of Cooldown.
func (s *EquipRequestSchema) GetCooldown() EquipRequestSchemaCooldown {
	return s.Cooldown
}

// GetSlot returns the value of Slot.
func (s *EquipRequestSchema) GetSlot() EquipRequestSchemaSlot {
	return s.Slot
}

// GetItem returns the value of Item.
func (s *EquipRequestSchema) GetItem() EquipRequestSchemaItem {
	return s.Item
}

// GetCharacter returns the value of Character.
func (s *EquipRequestSchema) GetCharacter() EquipRequestSchemaCharacter {
	return s.Character
}

// SetCooldown sets the value of Cooldown.
func (s *EquipRequestSchema) SetCooldown(val EquipRequestSchemaCooldown) {
	s.Cooldown = val
}

// SetSlot sets the value of Slot.
func (s *EquipRequestSchema) SetSlot(val EquipRequestSchemaSlot) {
	s.Slot = val
}

// SetItem sets the value of Item.
func (s *EquipRequestSchema) SetItem(val EquipRequestSchemaItem) {
	s.Item = val
}

// SetCharacter sets the value of Character.
func (s *EquipRequestSchema) SetCharacter(val EquipRequestSchemaCharacter) {
	s.Character = val
}

type EquipRequestSchemaCharacter struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin EquipRequestSchemaCharacterSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptEquipRequestSchemaCharacterCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *EquipRequestSchemaCharacter) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *EquipRequestSchemaCharacter) GetSkin() EquipRequestSchemaCharacterSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *EquipRequestSchemaCharacter) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *EquipRequestSchemaCharacter) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *EquipRequestSchemaCharacter) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *EquipRequestSchemaCharacter) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *EquipRequestSchemaCharacter) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *EquipRequestSchemaCharacter) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *EquipRequestSchemaCharacter) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *EquipRequestSchemaCharacter) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *EquipRequestSchemaCharacter) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *EquipRequestSchemaCharacter) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *EquipRequestSchemaCharacter) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *EquipRequestSchemaCharacter) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *EquipRequestSchemaCharacter) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *EquipRequestSchemaCharacter) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *EquipRequestSchemaCharacter) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *EquipRequestSchemaCharacter) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *EquipRequestSchemaCharacter) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *EquipRequestSchemaCharacter) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *EquipRequestSchemaCharacter) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *EquipRequestSchemaCharacter) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *EquipRequestSchemaCharacter) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *EquipRequestSchemaCharacter) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *EquipRequestSchemaCharacter) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *EquipRequestSchemaCharacter) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *EquipRequestSchemaCharacter) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *EquipRequestSchemaCharacter) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *EquipRequestSchemaCharacter) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *EquipRequestSchemaCharacter) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *EquipRequestSchemaCharacter) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *EquipRequestSchemaCharacter) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *EquipRequestSchemaCharacter) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *EquipRequestSchemaCharacter) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *EquipRequestSchemaCharacter) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *EquipRequestSchemaCharacter) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *EquipRequestSchemaCharacter) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *EquipRequestSchemaCharacter) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *EquipRequestSchemaCharacter) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *EquipRequestSchemaCharacter) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *EquipRequestSchemaCharacter) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *EquipRequestSchemaCharacter) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *EquipRequestSchemaCharacter) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *EquipRequestSchemaCharacter) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *EquipRequestSchemaCharacter) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *EquipRequestSchemaCharacter) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *EquipRequestSchemaCharacter) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *EquipRequestSchemaCharacter) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *EquipRequestSchemaCharacter) GetCooldownExpiration() OptEquipRequestSchemaCharacterCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *EquipRequestSchemaCharacter) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *EquipRequestSchemaCharacter) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *EquipRequestSchemaCharacter) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *EquipRequestSchemaCharacter) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *EquipRequestSchemaCharacter) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *EquipRequestSchemaCharacter) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *EquipRequestSchemaCharacter) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *EquipRequestSchemaCharacter) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *EquipRequestSchemaCharacter) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *EquipRequestSchemaCharacter) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *EquipRequestSchemaCharacter) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *EquipRequestSchemaCharacter) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *EquipRequestSchemaCharacter) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *EquipRequestSchemaCharacter) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *EquipRequestSchemaCharacter) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *EquipRequestSchemaCharacter) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *EquipRequestSchemaCharacter) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *EquipRequestSchemaCharacter) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *EquipRequestSchemaCharacter) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *EquipRequestSchemaCharacter) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *EquipRequestSchemaCharacter) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *EquipRequestSchemaCharacter) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *EquipRequestSchemaCharacter) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *EquipRequestSchemaCharacter) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *EquipRequestSchemaCharacter) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *EquipRequestSchemaCharacter) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *EquipRequestSchemaCharacter) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *EquipRequestSchemaCharacter) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *EquipRequestSchemaCharacter) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *EquipRequestSchemaCharacter) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *EquipRequestSchemaCharacter) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *EquipRequestSchemaCharacter) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *EquipRequestSchemaCharacter) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *EquipRequestSchemaCharacter) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *EquipRequestSchemaCharacter) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *EquipRequestSchemaCharacter) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *EquipRequestSchemaCharacter) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *EquipRequestSchemaCharacter) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *EquipRequestSchemaCharacter) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *EquipRequestSchemaCharacter) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *EquipRequestSchemaCharacter) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *EquipRequestSchemaCharacter) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *EquipRequestSchemaCharacter) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *EquipRequestSchemaCharacter) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *EquipRequestSchemaCharacter) SetSkin(val EquipRequestSchemaCharacterSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *EquipRequestSchemaCharacter) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *EquipRequestSchemaCharacter) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *EquipRequestSchemaCharacter) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *EquipRequestSchemaCharacter) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *EquipRequestSchemaCharacter) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *EquipRequestSchemaCharacter) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *EquipRequestSchemaCharacter) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *EquipRequestSchemaCharacter) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *EquipRequestSchemaCharacter) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *EquipRequestSchemaCharacter) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *EquipRequestSchemaCharacter) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *EquipRequestSchemaCharacter) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *EquipRequestSchemaCharacter) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *EquipRequestSchemaCharacter) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *EquipRequestSchemaCharacter) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *EquipRequestSchemaCharacter) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *EquipRequestSchemaCharacter) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *EquipRequestSchemaCharacter) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *EquipRequestSchemaCharacter) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *EquipRequestSchemaCharacter) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *EquipRequestSchemaCharacter) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *EquipRequestSchemaCharacter) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *EquipRequestSchemaCharacter) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *EquipRequestSchemaCharacter) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *EquipRequestSchemaCharacter) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *EquipRequestSchemaCharacter) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *EquipRequestSchemaCharacter) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *EquipRequestSchemaCharacter) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *EquipRequestSchemaCharacter) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *EquipRequestSchemaCharacter) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *EquipRequestSchemaCharacter) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *EquipRequestSchemaCharacter) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *EquipRequestSchemaCharacter) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *EquipRequestSchemaCharacter) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *EquipRequestSchemaCharacter) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *EquipRequestSchemaCharacter) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *EquipRequestSchemaCharacter) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *EquipRequestSchemaCharacter) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *EquipRequestSchemaCharacter) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *EquipRequestSchemaCharacter) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *EquipRequestSchemaCharacter) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *EquipRequestSchemaCharacter) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *EquipRequestSchemaCharacter) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *EquipRequestSchemaCharacter) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *EquipRequestSchemaCharacter) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *EquipRequestSchemaCharacter) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *EquipRequestSchemaCharacter) SetCooldownExpiration(val OptEquipRequestSchemaCharacterCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *EquipRequestSchemaCharacter) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *EquipRequestSchemaCharacter) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *EquipRequestSchemaCharacter) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *EquipRequestSchemaCharacter) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *EquipRequestSchemaCharacter) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *EquipRequestSchemaCharacter) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *EquipRequestSchemaCharacter) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *EquipRequestSchemaCharacter) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *EquipRequestSchemaCharacter) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *EquipRequestSchemaCharacter) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *EquipRequestSchemaCharacter) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *EquipRequestSchemaCharacter) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *EquipRequestSchemaCharacter) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *EquipRequestSchemaCharacter) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *EquipRequestSchemaCharacter) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *EquipRequestSchemaCharacter) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *EquipRequestSchemaCharacter) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *EquipRequestSchemaCharacter) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *EquipRequestSchemaCharacter) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *EquipRequestSchemaCharacter) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *EquipRequestSchemaCharacter) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *EquipRequestSchemaCharacter) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *EquipRequestSchemaCharacter) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *EquipRequestSchemaCharacter) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *EquipRequestSchemaCharacter) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *EquipRequestSchemaCharacter) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *EquipRequestSchemaCharacter) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *EquipRequestSchemaCharacter) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *EquipRequestSchemaCharacter) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *EquipRequestSchemaCharacter) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *EquipRequestSchemaCharacter) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *EquipRequestSchemaCharacter) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *EquipRequestSchemaCharacter) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *EquipRequestSchemaCharacter) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *EquipRequestSchemaCharacter) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *EquipRequestSchemaCharacter) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *EquipRequestSchemaCharacter) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *EquipRequestSchemaCharacter) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *EquipRequestSchemaCharacter) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *EquipRequestSchemaCharacter) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *EquipRequestSchemaCharacter) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *EquipRequestSchemaCharacter) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *EquipRequestSchemaCharacter) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// EquipRequestSchemaCharacterCooldownExpiration represents sum type.
type EquipRequestSchemaCharacterCooldownExpiration struct {
	Type     EquipRequestSchemaCharacterCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// EquipRequestSchemaCharacterCooldownExpirationType is oneOf type of EquipRequestSchemaCharacterCooldownExpiration.
type EquipRequestSchemaCharacterCooldownExpirationType string

// Possible values for EquipRequestSchemaCharacterCooldownExpirationType.
const (
	DateTimeEquipRequestSchemaCharacterCooldownExpiration EquipRequestSchemaCharacterCooldownExpirationType = "time.Time"
	NullEquipRequestSchemaCharacterCooldownExpiration     EquipRequestSchemaCharacterCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether EquipRequestSchemaCharacterCooldownExpiration is time.Time.
func (s EquipRequestSchemaCharacterCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeEquipRequestSchemaCharacterCooldownExpiration
}

// IsNull reports whether EquipRequestSchemaCharacterCooldownExpiration is struct{}.
func (s EquipRequestSchemaCharacterCooldownExpiration) IsNull() bool {
	return s.Type == NullEquipRequestSchemaCharacterCooldownExpiration
}

// SetDateTime sets EquipRequestSchemaCharacterCooldownExpiration to time.Time.
func (s *EquipRequestSchemaCharacterCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeEquipRequestSchemaCharacterCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if EquipRequestSchemaCharacterCooldownExpiration is time.Time.
func (s EquipRequestSchemaCharacterCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeEquipRequestSchemaCharacterCooldownExpiration returns new EquipRequestSchemaCharacterCooldownExpiration from time.Time.
func NewDateTimeEquipRequestSchemaCharacterCooldownExpiration(v time.Time) EquipRequestSchemaCharacterCooldownExpiration {
	var s EquipRequestSchemaCharacterCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets EquipRequestSchemaCharacterCooldownExpiration to struct{}.
func (s *EquipRequestSchemaCharacterCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullEquipRequestSchemaCharacterCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if EquipRequestSchemaCharacterCooldownExpiration is struct{}.
func (s EquipRequestSchemaCharacterCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullEquipRequestSchemaCharacterCooldownExpiration returns new EquipRequestSchemaCharacterCooldownExpiration from struct{}.
func NewNullEquipRequestSchemaCharacterCooldownExpiration(v struct{}) EquipRequestSchemaCharacterCooldownExpiration {
	var s EquipRequestSchemaCharacterCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type EquipRequestSchemaCharacterSkin string

const (
	EquipRequestSchemaCharacterSkinMen1   EquipRequestSchemaCharacterSkin = "men1"
	EquipRequestSchemaCharacterSkinMen2   EquipRequestSchemaCharacterSkin = "men2"
	EquipRequestSchemaCharacterSkinMen3   EquipRequestSchemaCharacterSkin = "men3"
	EquipRequestSchemaCharacterSkinWomen1 EquipRequestSchemaCharacterSkin = "women1"
	EquipRequestSchemaCharacterSkinWomen2 EquipRequestSchemaCharacterSkin = "women2"
	EquipRequestSchemaCharacterSkinWomen3 EquipRequestSchemaCharacterSkin = "women3"
)

// AllValues returns all EquipRequestSchemaCharacterSkin values.
func (EquipRequestSchemaCharacterSkin) AllValues() []EquipRequestSchemaCharacterSkin {
	return []EquipRequestSchemaCharacterSkin{
		EquipRequestSchemaCharacterSkinMen1,
		EquipRequestSchemaCharacterSkinMen2,
		EquipRequestSchemaCharacterSkinMen3,
		EquipRequestSchemaCharacterSkinWomen1,
		EquipRequestSchemaCharacterSkinWomen2,
		EquipRequestSchemaCharacterSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EquipRequestSchemaCharacterSkin) MarshalText() ([]byte, error) {
	switch s {
	case EquipRequestSchemaCharacterSkinMen1:
		return []byte(s), nil
	case EquipRequestSchemaCharacterSkinMen2:
		return []byte(s), nil
	case EquipRequestSchemaCharacterSkinMen3:
		return []byte(s), nil
	case EquipRequestSchemaCharacterSkinWomen1:
		return []byte(s), nil
	case EquipRequestSchemaCharacterSkinWomen2:
		return []byte(s), nil
	case EquipRequestSchemaCharacterSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EquipRequestSchemaCharacterSkin) UnmarshalText(data []byte) error {
	switch EquipRequestSchemaCharacterSkin(data) {
	case EquipRequestSchemaCharacterSkinMen1:
		*s = EquipRequestSchemaCharacterSkinMen1
		return nil
	case EquipRequestSchemaCharacterSkinMen2:
		*s = EquipRequestSchemaCharacterSkinMen2
		return nil
	case EquipRequestSchemaCharacterSkinMen3:
		*s = EquipRequestSchemaCharacterSkinMen3
		return nil
	case EquipRequestSchemaCharacterSkinWomen1:
		*s = EquipRequestSchemaCharacterSkinWomen1
		return nil
	case EquipRequestSchemaCharacterSkinWomen2:
		*s = EquipRequestSchemaCharacterSkinWomen2
		return nil
	case EquipRequestSchemaCharacterSkinWomen3:
		*s = EquipRequestSchemaCharacterSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type EquipRequestSchemaCooldown struct {
	// The total seconds of the cooldown.
	TotalSeconds int `json:"total_seconds"`
	// The remaining seconds of the cooldown.
	RemainingSeconds int `json:"remaining_seconds"`
	// The expiration of the cooldown.
	Expiration time.Time `json:"expiration"`
	// The reason of the cooldown.
	Reason EquipRequestSchemaCooldownReason `json:"reason"`
}

// GetTotalSeconds returns the value of TotalSeconds.
func (s *EquipRequestSchemaCooldown) GetTotalSeconds() int {
	return s.TotalSeconds
}

// GetRemainingSeconds returns the value of RemainingSeconds.
func (s *EquipRequestSchemaCooldown) GetRemainingSeconds() int {
	return s.RemainingSeconds
}

// GetExpiration returns the value of Expiration.
func (s *EquipRequestSchemaCooldown) GetExpiration() time.Time {
	return s.Expiration
}

// GetReason returns the value of Reason.
func (s *EquipRequestSchemaCooldown) GetReason() EquipRequestSchemaCooldownReason {
	return s.Reason
}

// SetTotalSeconds sets the value of TotalSeconds.
func (s *EquipRequestSchemaCooldown) SetTotalSeconds(val int) {
	s.TotalSeconds = val
}

// SetRemainingSeconds sets the value of RemainingSeconds.
func (s *EquipRequestSchemaCooldown) SetRemainingSeconds(val int) {
	s.RemainingSeconds = val
}

// SetExpiration sets the value of Expiration.
func (s *EquipRequestSchemaCooldown) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetReason sets the value of Reason.
func (s *EquipRequestSchemaCooldown) SetReason(val EquipRequestSchemaCooldownReason) {
	s.Reason = val
}

// The reason of the cooldown.
type EquipRequestSchemaCooldownReason string

const (
	EquipRequestSchemaCooldownReasonMovement     EquipRequestSchemaCooldownReason = "movement"
	EquipRequestSchemaCooldownReasonFight        EquipRequestSchemaCooldownReason = "fight"
	EquipRequestSchemaCooldownReasonCrafting     EquipRequestSchemaCooldownReason = "crafting"
	EquipRequestSchemaCooldownReasonGathering    EquipRequestSchemaCooldownReason = "gathering"
	EquipRequestSchemaCooldownReasonBuyGe        EquipRequestSchemaCooldownReason = "buy_ge"
	EquipRequestSchemaCooldownReasonSellGe       EquipRequestSchemaCooldownReason = "sell_ge"
	EquipRequestSchemaCooldownReasonDeleteItem   EquipRequestSchemaCooldownReason = "delete_item"
	EquipRequestSchemaCooldownReasonDepositBank  EquipRequestSchemaCooldownReason = "deposit_bank"
	EquipRequestSchemaCooldownReasonWithdrawBank EquipRequestSchemaCooldownReason = "withdraw_bank"
	EquipRequestSchemaCooldownReasonEquip        EquipRequestSchemaCooldownReason = "equip"
	EquipRequestSchemaCooldownReasonUnequip      EquipRequestSchemaCooldownReason = "unequip"
	EquipRequestSchemaCooldownReasonTask         EquipRequestSchemaCooldownReason = "task"
	EquipRequestSchemaCooldownReasonRecycling    EquipRequestSchemaCooldownReason = "recycling"
)

// AllValues returns all EquipRequestSchemaCooldownReason values.
func (EquipRequestSchemaCooldownReason) AllValues() []EquipRequestSchemaCooldownReason {
	return []EquipRequestSchemaCooldownReason{
		EquipRequestSchemaCooldownReasonMovement,
		EquipRequestSchemaCooldownReasonFight,
		EquipRequestSchemaCooldownReasonCrafting,
		EquipRequestSchemaCooldownReasonGathering,
		EquipRequestSchemaCooldownReasonBuyGe,
		EquipRequestSchemaCooldownReasonSellGe,
		EquipRequestSchemaCooldownReasonDeleteItem,
		EquipRequestSchemaCooldownReasonDepositBank,
		EquipRequestSchemaCooldownReasonWithdrawBank,
		EquipRequestSchemaCooldownReasonEquip,
		EquipRequestSchemaCooldownReasonUnequip,
		EquipRequestSchemaCooldownReasonTask,
		EquipRequestSchemaCooldownReasonRecycling,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EquipRequestSchemaCooldownReason) MarshalText() ([]byte, error) {
	switch s {
	case EquipRequestSchemaCooldownReasonMovement:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonFight:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonCrafting:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonGathering:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonBuyGe:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonSellGe:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonDeleteItem:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonDepositBank:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonWithdrawBank:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonEquip:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonUnequip:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonTask:
		return []byte(s), nil
	case EquipRequestSchemaCooldownReasonRecycling:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EquipRequestSchemaCooldownReason) UnmarshalText(data []byte) error {
	switch EquipRequestSchemaCooldownReason(data) {
	case EquipRequestSchemaCooldownReasonMovement:
		*s = EquipRequestSchemaCooldownReasonMovement
		return nil
	case EquipRequestSchemaCooldownReasonFight:
		*s = EquipRequestSchemaCooldownReasonFight
		return nil
	case EquipRequestSchemaCooldownReasonCrafting:
		*s = EquipRequestSchemaCooldownReasonCrafting
		return nil
	case EquipRequestSchemaCooldownReasonGathering:
		*s = EquipRequestSchemaCooldownReasonGathering
		return nil
	case EquipRequestSchemaCooldownReasonBuyGe:
		*s = EquipRequestSchemaCooldownReasonBuyGe
		return nil
	case EquipRequestSchemaCooldownReasonSellGe:
		*s = EquipRequestSchemaCooldownReasonSellGe
		return nil
	case EquipRequestSchemaCooldownReasonDeleteItem:
		*s = EquipRequestSchemaCooldownReasonDeleteItem
		return nil
	case EquipRequestSchemaCooldownReasonDepositBank:
		*s = EquipRequestSchemaCooldownReasonDepositBank
		return nil
	case EquipRequestSchemaCooldownReasonWithdrawBank:
		*s = EquipRequestSchemaCooldownReasonWithdrawBank
		return nil
	case EquipRequestSchemaCooldownReasonEquip:
		*s = EquipRequestSchemaCooldownReasonEquip
		return nil
	case EquipRequestSchemaCooldownReasonUnequip:
		*s = EquipRequestSchemaCooldownReasonUnequip
		return nil
	case EquipRequestSchemaCooldownReasonTask:
		*s = EquipRequestSchemaCooldownReasonTask
		return nil
	case EquipRequestSchemaCooldownReasonRecycling:
		*s = EquipRequestSchemaCooldownReasonRecycling
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type EquipRequestSchemaItem struct {
	// Item name.
	Name string `json:"name"`
	// Item code. This is the item's unique identifier (ID).
	Code string `json:"code"`
	// Item level.
	Level int `json:"level"`
	// Item type.
	Type string `json:"type"`
	// Item subtype.
	Subtype string `json:"subtype"`
	// Item description.
	Description string `json:"description"`
	// List of object effects. For equipment, it will include item stats.
	Effects []ItemEffectSchema `json:"effects"`
	// Craft information. If applicable.
	Craft OptEquipRequestSchemaItemCraft `json:"craft"`
}

// GetName returns the value of Name.
func (s *EquipRequestSchemaItem) GetName() string {
	return s.Name
}

// GetCode returns the value of Code.
func (s *EquipRequestSchemaItem) GetCode() string {
	return s.Code
}

// GetLevel returns the value of Level.
func (s *EquipRequestSchemaItem) GetLevel() int {
	return s.Level
}

// GetType returns the value of Type.
func (s *EquipRequestSchemaItem) GetType() string {
	return s.Type
}

// GetSubtype returns the value of Subtype.
func (s *EquipRequestSchemaItem) GetSubtype() string {
	return s.Subtype
}

// GetDescription returns the value of Description.
func (s *EquipRequestSchemaItem) GetDescription() string {
	return s.Description
}

// GetEffects returns the value of Effects.
func (s *EquipRequestSchemaItem) GetEffects() []ItemEffectSchema {
	return s.Effects
}

// GetCraft returns the value of Craft.
func (s *EquipRequestSchemaItem) GetCraft() OptEquipRequestSchemaItemCraft {
	return s.Craft
}

// SetName sets the value of Name.
func (s *EquipRequestSchemaItem) SetName(val string) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *EquipRequestSchemaItem) SetCode(val string) {
	s.Code = val
}

// SetLevel sets the value of Level.
func (s *EquipRequestSchemaItem) SetLevel(val int) {
	s.Level = val
}

// SetType sets the value of Type.
func (s *EquipRequestSchemaItem) SetType(val string) {
	s.Type = val
}

// SetSubtype sets the value of Subtype.
func (s *EquipRequestSchemaItem) SetSubtype(val string) {
	s.Subtype = val
}

// SetDescription sets the value of Description.
func (s *EquipRequestSchemaItem) SetDescription(val string) {
	s.Description = val
}

// SetEffects sets the value of Effects.
func (s *EquipRequestSchemaItem) SetEffects(val []ItemEffectSchema) {
	s.Effects = val
}

// SetCraft sets the value of Craft.
func (s *EquipRequestSchemaItem) SetCraft(val OptEquipRequestSchemaItemCraft) {
	s.Craft = val
}

// Craft information. If applicable.
// EquipRequestSchemaItemCraft represents sum type.
type EquipRequestSchemaItemCraft struct {
	Type        EquipRequestSchemaItemCraftType // switch on this field
	CraftSchema CraftSchema
	Null        struct{}
}

// EquipRequestSchemaItemCraftType is oneOf type of EquipRequestSchemaItemCraft.
type EquipRequestSchemaItemCraftType string

// Possible values for EquipRequestSchemaItemCraftType.
const (
	CraftSchemaEquipRequestSchemaItemCraft EquipRequestSchemaItemCraftType = "CraftSchema"
	NullEquipRequestSchemaItemCraft        EquipRequestSchemaItemCraftType = "struct{}"
)

// IsCraftSchema reports whether EquipRequestSchemaItemCraft is CraftSchema.
func (s EquipRequestSchemaItemCraft) IsCraftSchema() bool {
	return s.Type == CraftSchemaEquipRequestSchemaItemCraft
}

// IsNull reports whether EquipRequestSchemaItemCraft is struct{}.
func (s EquipRequestSchemaItemCraft) IsNull() bool { return s.Type == NullEquipRequestSchemaItemCraft }

// SetCraftSchema sets EquipRequestSchemaItemCraft to CraftSchema.
func (s *EquipRequestSchemaItemCraft) SetCraftSchema(v CraftSchema) {
	s.Type = CraftSchemaEquipRequestSchemaItemCraft
	s.CraftSchema = v
}

// GetCraftSchema returns CraftSchema and true boolean if EquipRequestSchemaItemCraft is CraftSchema.
func (s EquipRequestSchemaItemCraft) GetCraftSchema() (v CraftSchema, ok bool) {
	if !s.IsCraftSchema() {
		return v, false
	}
	return s.CraftSchema, true
}

// NewCraftSchemaEquipRequestSchemaItemCraft returns new EquipRequestSchemaItemCraft from CraftSchema.
func NewCraftSchemaEquipRequestSchemaItemCraft(v CraftSchema) EquipRequestSchemaItemCraft {
	var s EquipRequestSchemaItemCraft
	s.SetCraftSchema(v)
	return s
}

// SetNull sets EquipRequestSchemaItemCraft to struct{}.
func (s *EquipRequestSchemaItemCraft) SetNull(v struct{}) {
	s.Type = NullEquipRequestSchemaItemCraft
	s.Null = v
}

// GetNull returns struct{} and true boolean if EquipRequestSchemaItemCraft is struct{}.
func (s EquipRequestSchemaItemCraft) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullEquipRequestSchemaItemCraft returns new EquipRequestSchemaItemCraft from struct{}.
func NewNullEquipRequestSchemaItemCraft(v struct{}) EquipRequestSchemaItemCraft {
	var s EquipRequestSchemaItemCraft
	s.SetNull(v)
	return s
}

// Item slot.
type EquipRequestSchemaSlot string

const (
	EquipRequestSchemaSlotWeapon      EquipRequestSchemaSlot = "weapon"
	EquipRequestSchemaSlotShield      EquipRequestSchemaSlot = "shield"
	EquipRequestSchemaSlotHelmet      EquipRequestSchemaSlot = "helmet"
	EquipRequestSchemaSlotBodyArmor   EquipRequestSchemaSlot = "body_armor"
	EquipRequestSchemaSlotLegArmor    EquipRequestSchemaSlot = "leg_armor"
	EquipRequestSchemaSlotBoots       EquipRequestSchemaSlot = "boots"
	EquipRequestSchemaSlotRing1       EquipRequestSchemaSlot = "ring1"
	EquipRequestSchemaSlotRing2       EquipRequestSchemaSlot = "ring2"
	EquipRequestSchemaSlotAmulet      EquipRequestSchemaSlot = "amulet"
	EquipRequestSchemaSlotArtifact1   EquipRequestSchemaSlot = "artifact1"
	EquipRequestSchemaSlotArtifact2   EquipRequestSchemaSlot = "artifact2"
	EquipRequestSchemaSlotArtifact3   EquipRequestSchemaSlot = "artifact3"
	EquipRequestSchemaSlotConsumable1 EquipRequestSchemaSlot = "consumable1"
	EquipRequestSchemaSlotConsumable2 EquipRequestSchemaSlot = "consumable2"
)

// AllValues returns all EquipRequestSchemaSlot values.
func (EquipRequestSchemaSlot) AllValues() []EquipRequestSchemaSlot {
	return []EquipRequestSchemaSlot{
		EquipRequestSchemaSlotWeapon,
		EquipRequestSchemaSlotShield,
		EquipRequestSchemaSlotHelmet,
		EquipRequestSchemaSlotBodyArmor,
		EquipRequestSchemaSlotLegArmor,
		EquipRequestSchemaSlotBoots,
		EquipRequestSchemaSlotRing1,
		EquipRequestSchemaSlotRing2,
		EquipRequestSchemaSlotAmulet,
		EquipRequestSchemaSlotArtifact1,
		EquipRequestSchemaSlotArtifact2,
		EquipRequestSchemaSlotArtifact3,
		EquipRequestSchemaSlotConsumable1,
		EquipRequestSchemaSlotConsumable2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EquipRequestSchemaSlot) MarshalText() ([]byte, error) {
	switch s {
	case EquipRequestSchemaSlotWeapon:
		return []byte(s), nil
	case EquipRequestSchemaSlotShield:
		return []byte(s), nil
	case EquipRequestSchemaSlotHelmet:
		return []byte(s), nil
	case EquipRequestSchemaSlotBodyArmor:
		return []byte(s), nil
	case EquipRequestSchemaSlotLegArmor:
		return []byte(s), nil
	case EquipRequestSchemaSlotBoots:
		return []byte(s), nil
	case EquipRequestSchemaSlotRing1:
		return []byte(s), nil
	case EquipRequestSchemaSlotRing2:
		return []byte(s), nil
	case EquipRequestSchemaSlotAmulet:
		return []byte(s), nil
	case EquipRequestSchemaSlotArtifact1:
		return []byte(s), nil
	case EquipRequestSchemaSlotArtifact2:
		return []byte(s), nil
	case EquipRequestSchemaSlotArtifact3:
		return []byte(s), nil
	case EquipRequestSchemaSlotConsumable1:
		return []byte(s), nil
	case EquipRequestSchemaSlotConsumable2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EquipRequestSchemaSlot) UnmarshalText(data []byte) error {
	switch EquipRequestSchemaSlot(data) {
	case EquipRequestSchemaSlotWeapon:
		*s = EquipRequestSchemaSlotWeapon
		return nil
	case EquipRequestSchemaSlotShield:
		*s = EquipRequestSchemaSlotShield
		return nil
	case EquipRequestSchemaSlotHelmet:
		*s = EquipRequestSchemaSlotHelmet
		return nil
	case EquipRequestSchemaSlotBodyArmor:
		*s = EquipRequestSchemaSlotBodyArmor
		return nil
	case EquipRequestSchemaSlotLegArmor:
		*s = EquipRequestSchemaSlotLegArmor
		return nil
	case EquipRequestSchemaSlotBoots:
		*s = EquipRequestSchemaSlotBoots
		return nil
	case EquipRequestSchemaSlotRing1:
		*s = EquipRequestSchemaSlotRing1
		return nil
	case EquipRequestSchemaSlotRing2:
		*s = EquipRequestSchemaSlotRing2
		return nil
	case EquipRequestSchemaSlotAmulet:
		*s = EquipRequestSchemaSlotAmulet
		return nil
	case EquipRequestSchemaSlotArtifact1:
		*s = EquipRequestSchemaSlotArtifact1
		return nil
	case EquipRequestSchemaSlotArtifact2:
		*s = EquipRequestSchemaSlotArtifact2
		return nil
	case EquipRequestSchemaSlotArtifact3:
		*s = EquipRequestSchemaSlotArtifact3
		return nil
	case EquipRequestSchemaSlotConsumable1:
		*s = EquipRequestSchemaSlotConsumable1
		return nil
	case EquipRequestSchemaSlotConsumable2:
		*s = EquipRequestSchemaSlotConsumable2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/EquipSchema
type EquipSchema struct {
	// Item code.
	Code string `json:"code"`
	// Item slot.
	Slot EquipSchemaSlot `json:"slot"`
}

// GetCode returns the value of Code.
func (s *EquipSchema) GetCode() string {
	return s.Code
}

// GetSlot returns the value of Slot.
func (s *EquipSchema) GetSlot() EquipSchemaSlot {
	return s.Slot
}

// SetCode sets the value of Code.
func (s *EquipSchema) SetCode(val string) {
	s.Code = val
}

// SetSlot sets the value of Slot.
func (s *EquipSchema) SetSlot(val EquipSchemaSlot) {
	s.Slot = val
}

// Item slot.
type EquipSchemaSlot string

const (
	EquipSchemaSlotWeapon      EquipSchemaSlot = "weapon"
	EquipSchemaSlotShield      EquipSchemaSlot = "shield"
	EquipSchemaSlotHelmet      EquipSchemaSlot = "helmet"
	EquipSchemaSlotBodyArmor   EquipSchemaSlot = "body_armor"
	EquipSchemaSlotLegArmor    EquipSchemaSlot = "leg_armor"
	EquipSchemaSlotBoots       EquipSchemaSlot = "boots"
	EquipSchemaSlotRing1       EquipSchemaSlot = "ring1"
	EquipSchemaSlotRing2       EquipSchemaSlot = "ring2"
	EquipSchemaSlotAmulet      EquipSchemaSlot = "amulet"
	EquipSchemaSlotArtifact1   EquipSchemaSlot = "artifact1"
	EquipSchemaSlotArtifact2   EquipSchemaSlot = "artifact2"
	EquipSchemaSlotArtifact3   EquipSchemaSlot = "artifact3"
	EquipSchemaSlotConsumable1 EquipSchemaSlot = "consumable1"
	EquipSchemaSlotConsumable2 EquipSchemaSlot = "consumable2"
)

// AllValues returns all EquipSchemaSlot values.
func (EquipSchemaSlot) AllValues() []EquipSchemaSlot {
	return []EquipSchemaSlot{
		EquipSchemaSlotWeapon,
		EquipSchemaSlotShield,
		EquipSchemaSlotHelmet,
		EquipSchemaSlotBodyArmor,
		EquipSchemaSlotLegArmor,
		EquipSchemaSlotBoots,
		EquipSchemaSlotRing1,
		EquipSchemaSlotRing2,
		EquipSchemaSlotAmulet,
		EquipSchemaSlotArtifact1,
		EquipSchemaSlotArtifact2,
		EquipSchemaSlotArtifact3,
		EquipSchemaSlotConsumable1,
		EquipSchemaSlotConsumable2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s EquipSchemaSlot) MarshalText() ([]byte, error) {
	switch s {
	case EquipSchemaSlotWeapon:
		return []byte(s), nil
	case EquipSchemaSlotShield:
		return []byte(s), nil
	case EquipSchemaSlotHelmet:
		return []byte(s), nil
	case EquipSchemaSlotBodyArmor:
		return []byte(s), nil
	case EquipSchemaSlotLegArmor:
		return []byte(s), nil
	case EquipSchemaSlotBoots:
		return []byte(s), nil
	case EquipSchemaSlotRing1:
		return []byte(s), nil
	case EquipSchemaSlotRing2:
		return []byte(s), nil
	case EquipSchemaSlotAmulet:
		return []byte(s), nil
	case EquipSchemaSlotArtifact1:
		return []byte(s), nil
	case EquipSchemaSlotArtifact2:
		return []byte(s), nil
	case EquipSchemaSlotArtifact3:
		return []byte(s), nil
	case EquipSchemaSlotConsumable1:
		return []byte(s), nil
	case EquipSchemaSlotConsumable2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *EquipSchemaSlot) UnmarshalText(data []byte) error {
	switch EquipSchemaSlot(data) {
	case EquipSchemaSlotWeapon:
		*s = EquipSchemaSlotWeapon
		return nil
	case EquipSchemaSlotShield:
		*s = EquipSchemaSlotShield
		return nil
	case EquipSchemaSlotHelmet:
		*s = EquipSchemaSlotHelmet
		return nil
	case EquipSchemaSlotBodyArmor:
		*s = EquipSchemaSlotBodyArmor
		return nil
	case EquipSchemaSlotLegArmor:
		*s = EquipSchemaSlotLegArmor
		return nil
	case EquipSchemaSlotBoots:
		*s = EquipSchemaSlotBoots
		return nil
	case EquipSchemaSlotRing1:
		*s = EquipSchemaSlotRing1
		return nil
	case EquipSchemaSlotRing2:
		*s = EquipSchemaSlotRing2
		return nil
	case EquipSchemaSlotAmulet:
		*s = EquipSchemaSlotAmulet
		return nil
	case EquipSchemaSlotArtifact1:
		*s = EquipSchemaSlotArtifact1
		return nil
	case EquipSchemaSlotArtifact2:
		*s = EquipSchemaSlotArtifact2
		return nil
	case EquipSchemaSlotArtifact3:
		*s = EquipSchemaSlotArtifact3
		return nil
	case EquipSchemaSlotConsumable1:
		*s = EquipSchemaSlotConsumable1
		return nil
	case EquipSchemaSlotConsumable2:
		*s = EquipSchemaSlotConsumable2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/EquipmentResponseSchema
type EquipmentResponseSchema struct {
	Data EquipRequestSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *EquipmentResponseSchema) GetData() EquipRequestSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *EquipmentResponseSchema) SetData(val EquipRequestSchema) {
	s.Data = val
}

func (*EquipmentResponseSchema) actionEquipItemMyNameActionEquipPostRes()     {}
func (*EquipmentResponseSchema) actionUnequipItemMyNameActionUnequipPostRes() {}

// Ref: #/components/schemas/EventSchema
type EventSchema struct {
	// Name of the event.
	Name string `json:"name"`
	// Map of the event.
	Map EventSchemaMap `json:"map"`
	// Previous map skin.
	PreviousSkin string `json:"previous_skin"`
	// Duration in minutes.
	Duration int `json:"duration"`
	// Expiration datetime.
	Expiration time.Time `json:"expiration"`
	// Start datetime.
	CreatedAt time.Time `json:"created_at"`
}

// GetName returns the value of Name.
func (s *EventSchema) GetName() string {
	return s.Name
}

// GetMap returns the value of Map.
func (s *EventSchema) GetMap() EventSchemaMap {
	return s.Map
}

// GetPreviousSkin returns the value of PreviousSkin.
func (s *EventSchema) GetPreviousSkin() string {
	return s.PreviousSkin
}

// GetDuration returns the value of Duration.
func (s *EventSchema) GetDuration() int {
	return s.Duration
}

// GetExpiration returns the value of Expiration.
func (s *EventSchema) GetExpiration() time.Time {
	return s.Expiration
}

// GetCreatedAt returns the value of CreatedAt.
func (s *EventSchema) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetName sets the value of Name.
func (s *EventSchema) SetName(val string) {
	s.Name = val
}

// SetMap sets the value of Map.
func (s *EventSchema) SetMap(val EventSchemaMap) {
	s.Map = val
}

// SetPreviousSkin sets the value of PreviousSkin.
func (s *EventSchema) SetPreviousSkin(val string) {
	s.PreviousSkin = val
}

// SetDuration sets the value of Duration.
func (s *EventSchema) SetDuration(val int) {
	s.Duration = val
}

// SetExpiration sets the value of Expiration.
func (s *EventSchema) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *EventSchema) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

type EventSchemaMap struct {
	// Name of the map.
	Name string `json:"name"`
	// Skin of the map.
	Skin string `json:"skin"`
	// Position X of the map.
	X int `json:"x"`
	// Position Y of the map.
	Y int `json:"y"`
	// Content of the map.
	Content EventSchemaMapContent `json:"content"`
}

// GetName returns the value of Name.
func (s *EventSchemaMap) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *EventSchemaMap) GetSkin() string {
	return s.Skin
}

// GetX returns the value of X.
func (s *EventSchemaMap) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *EventSchemaMap) GetY() int {
	return s.Y
}

// GetContent returns the value of Content.
func (s *EventSchemaMap) GetContent() EventSchemaMapContent {
	return s.Content
}

// SetName sets the value of Name.
func (s *EventSchemaMap) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *EventSchemaMap) SetSkin(val string) {
	s.Skin = val
}

// SetX sets the value of X.
func (s *EventSchemaMap) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *EventSchemaMap) SetY(val int) {
	s.Y = val
}

// SetContent sets the value of Content.
func (s *EventSchemaMap) SetContent(val EventSchemaMapContent) {
	s.Content = val
}

// Content of the map.
// EventSchemaMapContent represents sum type.
type EventSchemaMapContent struct {
	Type             EventSchemaMapContentType // switch on this field
	MapContentSchema MapContentSchema
	Null             struct{}
}

// EventSchemaMapContentType is oneOf type of EventSchemaMapContent.
type EventSchemaMapContentType string

// Possible values for EventSchemaMapContentType.
const (
	MapContentSchemaEventSchemaMapContent EventSchemaMapContentType = "MapContentSchema"
	NullEventSchemaMapContent             EventSchemaMapContentType = "struct{}"
)

// IsMapContentSchema reports whether EventSchemaMapContent is MapContentSchema.
func (s EventSchemaMapContent) IsMapContentSchema() bool {
	return s.Type == MapContentSchemaEventSchemaMapContent
}

// IsNull reports whether EventSchemaMapContent is struct{}.
func (s EventSchemaMapContent) IsNull() bool { return s.Type == NullEventSchemaMapContent }

// SetMapContentSchema sets EventSchemaMapContent to MapContentSchema.
func (s *EventSchemaMapContent) SetMapContentSchema(v MapContentSchema) {
	s.Type = MapContentSchemaEventSchemaMapContent
	s.MapContentSchema = v
}

// GetMapContentSchema returns MapContentSchema and true boolean if EventSchemaMapContent is MapContentSchema.
func (s EventSchemaMapContent) GetMapContentSchema() (v MapContentSchema, ok bool) {
	if !s.IsMapContentSchema() {
		return v, false
	}
	return s.MapContentSchema, true
}

// NewMapContentSchemaEventSchemaMapContent returns new EventSchemaMapContent from MapContentSchema.
func NewMapContentSchemaEventSchemaMapContent(v MapContentSchema) EventSchemaMapContent {
	var s EventSchemaMapContent
	s.SetMapContentSchema(v)
	return s
}

// SetNull sets EventSchemaMapContent to struct{}.
func (s *EventSchemaMapContent) SetNull(v struct{}) {
	s.Type = NullEventSchemaMapContent
	s.Null = v
}

// GetNull returns struct{} and true boolean if EventSchemaMapContent is struct{}.
func (s EventSchemaMapContent) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullEventSchemaMapContent returns new EventSchemaMapContent from struct{}.
func NewNullEventSchemaMapContent(v struct{}) EventSchemaMapContent {
	var s EventSchemaMapContent
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/GEItemResponseSchema
type GEItemResponseSchema struct {
	Data GEItemSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *GEItemResponseSchema) GetData() GEItemSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *GEItemResponseSchema) SetData(val GEItemSchema) {
	s.Data = val
}

func (*GEItemResponseSchema) getGeItemGeCodeGetRes() {}

// Ref: #/components/schemas/GEItemSchema
type GEItemSchema struct {
	// Item code.
	Code string `json:"code"`
	// Item stock.
	Stock int `json:"stock"`
	// The item's selling price.
	SellPrice OptInt `json:"sell_price"`
	// The item's buying price.
	BuyPrice OptInt `json:"buy_price"`
}

// GetCode returns the value of Code.
func (s *GEItemSchema) GetCode() string {
	return s.Code
}

// GetStock returns the value of Stock.
func (s *GEItemSchema) GetStock() int {
	return s.Stock
}

// GetSellPrice returns the value of SellPrice.
func (s *GEItemSchema) GetSellPrice() OptInt {
	return s.SellPrice
}

// GetBuyPrice returns the value of BuyPrice.
func (s *GEItemSchema) GetBuyPrice() OptInt {
	return s.BuyPrice
}

// SetCode sets the value of Code.
func (s *GEItemSchema) SetCode(val string) {
	s.Code = val
}

// SetStock sets the value of Stock.
func (s *GEItemSchema) SetStock(val int) {
	s.Stock = val
}

// SetSellPrice sets the value of SellPrice.
func (s *GEItemSchema) SetSellPrice(val OptInt) {
	s.SellPrice = val
}

// SetBuyPrice sets the value of BuyPrice.
func (s *GEItemSchema) SetBuyPrice(val OptInt) {
	s.BuyPrice = val
}

// Ref: #/components/schemas/GETransactionItemSchema
type GETransactionItemSchema struct {
	// Item code.
	Code string `json:"code"`
	// Item quantity.
	Quantity int `json:"quantity"`
	// Item price. Item price validation protects you if the price has changed since you last checked the
	// buy/sale price of an item.
	Price int `json:"price"`
}

// GetCode returns the value of Code.
func (s *GETransactionItemSchema) GetCode() string {
	return s.Code
}

// GetQuantity returns the value of Quantity.
func (s *GETransactionItemSchema) GetQuantity() int {
	return s.Quantity
}

// GetPrice returns the value of Price.
func (s *GETransactionItemSchema) GetPrice() int {
	return s.Price
}

// SetCode sets the value of Code.
func (s *GETransactionItemSchema) SetCode(val string) {
	s.Code = val
}

// SetQuantity sets the value of Quantity.
func (s *GETransactionItemSchema) SetQuantity(val int) {
	s.Quantity = val
}

// SetPrice sets the value of Price.
func (s *GETransactionItemSchema) SetPrice(val int) {
	s.Price = val
}

// Ref: #/components/schemas/GETransactionListSchema
type GETransactionListSchema struct {
	// Cooldown details.
	Cooldown GETransactionListSchemaCooldown `json:"cooldown"`
	// Transaction details.
	Transaction GETransactionListSchemaTransaction `json:"transaction"`
	// Character details.
	Character GETransactionListSchemaCharacter `json:"character"`
}

// GetCooldown returns the value of Cooldown.
func (s *GETransactionListSchema) GetCooldown() GETransactionListSchemaCooldown {
	return s.Cooldown
}

// GetTransaction returns the value of Transaction.
func (s *GETransactionListSchema) GetTransaction() GETransactionListSchemaTransaction {
	return s.Transaction
}

// GetCharacter returns the value of Character.
func (s *GETransactionListSchema) GetCharacter() GETransactionListSchemaCharacter {
	return s.Character
}

// SetCooldown sets the value of Cooldown.
func (s *GETransactionListSchema) SetCooldown(val GETransactionListSchemaCooldown) {
	s.Cooldown = val
}

// SetTransaction sets the value of Transaction.
func (s *GETransactionListSchema) SetTransaction(val GETransactionListSchemaTransaction) {
	s.Transaction = val
}

// SetCharacter sets the value of Character.
func (s *GETransactionListSchema) SetCharacter(val GETransactionListSchemaCharacter) {
	s.Character = val
}

type GETransactionListSchemaCharacter struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin GETransactionListSchemaCharacterSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptGETransactionListSchemaCharacterCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *GETransactionListSchemaCharacter) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *GETransactionListSchemaCharacter) GetSkin() GETransactionListSchemaCharacterSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *GETransactionListSchemaCharacter) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *GETransactionListSchemaCharacter) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *GETransactionListSchemaCharacter) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *GETransactionListSchemaCharacter) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *GETransactionListSchemaCharacter) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *GETransactionListSchemaCharacter) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *GETransactionListSchemaCharacter) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *GETransactionListSchemaCharacter) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *GETransactionListSchemaCharacter) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *GETransactionListSchemaCharacter) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *GETransactionListSchemaCharacter) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *GETransactionListSchemaCharacter) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *GETransactionListSchemaCharacter) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *GETransactionListSchemaCharacter) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *GETransactionListSchemaCharacter) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *GETransactionListSchemaCharacter) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *GETransactionListSchemaCharacter) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *GETransactionListSchemaCharacter) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *GETransactionListSchemaCharacter) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *GETransactionListSchemaCharacter) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *GETransactionListSchemaCharacter) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *GETransactionListSchemaCharacter) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *GETransactionListSchemaCharacter) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *GETransactionListSchemaCharacter) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *GETransactionListSchemaCharacter) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *GETransactionListSchemaCharacter) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *GETransactionListSchemaCharacter) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *GETransactionListSchemaCharacter) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *GETransactionListSchemaCharacter) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *GETransactionListSchemaCharacter) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *GETransactionListSchemaCharacter) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *GETransactionListSchemaCharacter) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *GETransactionListSchemaCharacter) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *GETransactionListSchemaCharacter) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *GETransactionListSchemaCharacter) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *GETransactionListSchemaCharacter) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *GETransactionListSchemaCharacter) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *GETransactionListSchemaCharacter) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *GETransactionListSchemaCharacter) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *GETransactionListSchemaCharacter) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *GETransactionListSchemaCharacter) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *GETransactionListSchemaCharacter) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *GETransactionListSchemaCharacter) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *GETransactionListSchemaCharacter) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *GETransactionListSchemaCharacter) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *GETransactionListSchemaCharacter) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *GETransactionListSchemaCharacter) GetCooldownExpiration() OptGETransactionListSchemaCharacterCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *GETransactionListSchemaCharacter) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *GETransactionListSchemaCharacter) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *GETransactionListSchemaCharacter) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *GETransactionListSchemaCharacter) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *GETransactionListSchemaCharacter) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *GETransactionListSchemaCharacter) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *GETransactionListSchemaCharacter) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *GETransactionListSchemaCharacter) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *GETransactionListSchemaCharacter) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *GETransactionListSchemaCharacter) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *GETransactionListSchemaCharacter) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *GETransactionListSchemaCharacter) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *GETransactionListSchemaCharacter) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *GETransactionListSchemaCharacter) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *GETransactionListSchemaCharacter) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *GETransactionListSchemaCharacter) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *GETransactionListSchemaCharacter) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *GETransactionListSchemaCharacter) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *GETransactionListSchemaCharacter) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *GETransactionListSchemaCharacter) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *GETransactionListSchemaCharacter) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *GETransactionListSchemaCharacter) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *GETransactionListSchemaCharacter) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *GETransactionListSchemaCharacter) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *GETransactionListSchemaCharacter) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *GETransactionListSchemaCharacter) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *GETransactionListSchemaCharacter) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *GETransactionListSchemaCharacter) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *GETransactionListSchemaCharacter) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *GETransactionListSchemaCharacter) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *GETransactionListSchemaCharacter) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *GETransactionListSchemaCharacter) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *GETransactionListSchemaCharacter) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *GETransactionListSchemaCharacter) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *GETransactionListSchemaCharacter) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *GETransactionListSchemaCharacter) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *GETransactionListSchemaCharacter) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *GETransactionListSchemaCharacter) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *GETransactionListSchemaCharacter) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *GETransactionListSchemaCharacter) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *GETransactionListSchemaCharacter) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *GETransactionListSchemaCharacter) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *GETransactionListSchemaCharacter) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *GETransactionListSchemaCharacter) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *GETransactionListSchemaCharacter) SetSkin(val GETransactionListSchemaCharacterSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *GETransactionListSchemaCharacter) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *GETransactionListSchemaCharacter) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *GETransactionListSchemaCharacter) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *GETransactionListSchemaCharacter) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *GETransactionListSchemaCharacter) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *GETransactionListSchemaCharacter) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *GETransactionListSchemaCharacter) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *GETransactionListSchemaCharacter) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *GETransactionListSchemaCharacter) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *GETransactionListSchemaCharacter) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *GETransactionListSchemaCharacter) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *GETransactionListSchemaCharacter) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *GETransactionListSchemaCharacter) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *GETransactionListSchemaCharacter) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *GETransactionListSchemaCharacter) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *GETransactionListSchemaCharacter) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *GETransactionListSchemaCharacter) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *GETransactionListSchemaCharacter) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *GETransactionListSchemaCharacter) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *GETransactionListSchemaCharacter) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *GETransactionListSchemaCharacter) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *GETransactionListSchemaCharacter) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *GETransactionListSchemaCharacter) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *GETransactionListSchemaCharacter) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *GETransactionListSchemaCharacter) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *GETransactionListSchemaCharacter) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *GETransactionListSchemaCharacter) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *GETransactionListSchemaCharacter) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *GETransactionListSchemaCharacter) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *GETransactionListSchemaCharacter) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *GETransactionListSchemaCharacter) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *GETransactionListSchemaCharacter) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *GETransactionListSchemaCharacter) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *GETransactionListSchemaCharacter) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *GETransactionListSchemaCharacter) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *GETransactionListSchemaCharacter) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *GETransactionListSchemaCharacter) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *GETransactionListSchemaCharacter) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *GETransactionListSchemaCharacter) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *GETransactionListSchemaCharacter) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *GETransactionListSchemaCharacter) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *GETransactionListSchemaCharacter) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *GETransactionListSchemaCharacter) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *GETransactionListSchemaCharacter) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *GETransactionListSchemaCharacter) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *GETransactionListSchemaCharacter) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *GETransactionListSchemaCharacter) SetCooldownExpiration(val OptGETransactionListSchemaCharacterCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *GETransactionListSchemaCharacter) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *GETransactionListSchemaCharacter) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *GETransactionListSchemaCharacter) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *GETransactionListSchemaCharacter) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *GETransactionListSchemaCharacter) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *GETransactionListSchemaCharacter) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *GETransactionListSchemaCharacter) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *GETransactionListSchemaCharacter) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *GETransactionListSchemaCharacter) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *GETransactionListSchemaCharacter) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *GETransactionListSchemaCharacter) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *GETransactionListSchemaCharacter) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *GETransactionListSchemaCharacter) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *GETransactionListSchemaCharacter) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *GETransactionListSchemaCharacter) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *GETransactionListSchemaCharacter) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *GETransactionListSchemaCharacter) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *GETransactionListSchemaCharacter) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *GETransactionListSchemaCharacter) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *GETransactionListSchemaCharacter) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *GETransactionListSchemaCharacter) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *GETransactionListSchemaCharacter) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *GETransactionListSchemaCharacter) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *GETransactionListSchemaCharacter) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *GETransactionListSchemaCharacter) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *GETransactionListSchemaCharacter) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *GETransactionListSchemaCharacter) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *GETransactionListSchemaCharacter) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *GETransactionListSchemaCharacter) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *GETransactionListSchemaCharacter) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *GETransactionListSchemaCharacter) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *GETransactionListSchemaCharacter) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *GETransactionListSchemaCharacter) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *GETransactionListSchemaCharacter) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *GETransactionListSchemaCharacter) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *GETransactionListSchemaCharacter) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *GETransactionListSchemaCharacter) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *GETransactionListSchemaCharacter) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *GETransactionListSchemaCharacter) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *GETransactionListSchemaCharacter) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *GETransactionListSchemaCharacter) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *GETransactionListSchemaCharacter) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *GETransactionListSchemaCharacter) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// GETransactionListSchemaCharacterCooldownExpiration represents sum type.
type GETransactionListSchemaCharacterCooldownExpiration struct {
	Type     GETransactionListSchemaCharacterCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// GETransactionListSchemaCharacterCooldownExpirationType is oneOf type of GETransactionListSchemaCharacterCooldownExpiration.
type GETransactionListSchemaCharacterCooldownExpirationType string

// Possible values for GETransactionListSchemaCharacterCooldownExpirationType.
const (
	DateTimeGETransactionListSchemaCharacterCooldownExpiration GETransactionListSchemaCharacterCooldownExpirationType = "time.Time"
	NullGETransactionListSchemaCharacterCooldownExpiration     GETransactionListSchemaCharacterCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether GETransactionListSchemaCharacterCooldownExpiration is time.Time.
func (s GETransactionListSchemaCharacterCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeGETransactionListSchemaCharacterCooldownExpiration
}

// IsNull reports whether GETransactionListSchemaCharacterCooldownExpiration is struct{}.
func (s GETransactionListSchemaCharacterCooldownExpiration) IsNull() bool {
	return s.Type == NullGETransactionListSchemaCharacterCooldownExpiration
}

// SetDateTime sets GETransactionListSchemaCharacterCooldownExpiration to time.Time.
func (s *GETransactionListSchemaCharacterCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeGETransactionListSchemaCharacterCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if GETransactionListSchemaCharacterCooldownExpiration is time.Time.
func (s GETransactionListSchemaCharacterCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeGETransactionListSchemaCharacterCooldownExpiration returns new GETransactionListSchemaCharacterCooldownExpiration from time.Time.
func NewDateTimeGETransactionListSchemaCharacterCooldownExpiration(v time.Time) GETransactionListSchemaCharacterCooldownExpiration {
	var s GETransactionListSchemaCharacterCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets GETransactionListSchemaCharacterCooldownExpiration to struct{}.
func (s *GETransactionListSchemaCharacterCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullGETransactionListSchemaCharacterCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if GETransactionListSchemaCharacterCooldownExpiration is struct{}.
func (s GETransactionListSchemaCharacterCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullGETransactionListSchemaCharacterCooldownExpiration returns new GETransactionListSchemaCharacterCooldownExpiration from struct{}.
func NewNullGETransactionListSchemaCharacterCooldownExpiration(v struct{}) GETransactionListSchemaCharacterCooldownExpiration {
	var s GETransactionListSchemaCharacterCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type GETransactionListSchemaCharacterSkin string

const (
	GETransactionListSchemaCharacterSkinMen1   GETransactionListSchemaCharacterSkin = "men1"
	GETransactionListSchemaCharacterSkinMen2   GETransactionListSchemaCharacterSkin = "men2"
	GETransactionListSchemaCharacterSkinMen3   GETransactionListSchemaCharacterSkin = "men3"
	GETransactionListSchemaCharacterSkinWomen1 GETransactionListSchemaCharacterSkin = "women1"
	GETransactionListSchemaCharacterSkinWomen2 GETransactionListSchemaCharacterSkin = "women2"
	GETransactionListSchemaCharacterSkinWomen3 GETransactionListSchemaCharacterSkin = "women3"
)

// AllValues returns all GETransactionListSchemaCharacterSkin values.
func (GETransactionListSchemaCharacterSkin) AllValues() []GETransactionListSchemaCharacterSkin {
	return []GETransactionListSchemaCharacterSkin{
		GETransactionListSchemaCharacterSkinMen1,
		GETransactionListSchemaCharacterSkinMen2,
		GETransactionListSchemaCharacterSkinMen3,
		GETransactionListSchemaCharacterSkinWomen1,
		GETransactionListSchemaCharacterSkinWomen2,
		GETransactionListSchemaCharacterSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GETransactionListSchemaCharacterSkin) MarshalText() ([]byte, error) {
	switch s {
	case GETransactionListSchemaCharacterSkinMen1:
		return []byte(s), nil
	case GETransactionListSchemaCharacterSkinMen2:
		return []byte(s), nil
	case GETransactionListSchemaCharacterSkinMen3:
		return []byte(s), nil
	case GETransactionListSchemaCharacterSkinWomen1:
		return []byte(s), nil
	case GETransactionListSchemaCharacterSkinWomen2:
		return []byte(s), nil
	case GETransactionListSchemaCharacterSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GETransactionListSchemaCharacterSkin) UnmarshalText(data []byte) error {
	switch GETransactionListSchemaCharacterSkin(data) {
	case GETransactionListSchemaCharacterSkinMen1:
		*s = GETransactionListSchemaCharacterSkinMen1
		return nil
	case GETransactionListSchemaCharacterSkinMen2:
		*s = GETransactionListSchemaCharacterSkinMen2
		return nil
	case GETransactionListSchemaCharacterSkinMen3:
		*s = GETransactionListSchemaCharacterSkinMen3
		return nil
	case GETransactionListSchemaCharacterSkinWomen1:
		*s = GETransactionListSchemaCharacterSkinWomen1
		return nil
	case GETransactionListSchemaCharacterSkinWomen2:
		*s = GETransactionListSchemaCharacterSkinWomen2
		return nil
	case GETransactionListSchemaCharacterSkinWomen3:
		*s = GETransactionListSchemaCharacterSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GETransactionListSchemaCooldown struct {
	// The total seconds of the cooldown.
	TotalSeconds int `json:"total_seconds"`
	// The remaining seconds of the cooldown.
	RemainingSeconds int `json:"remaining_seconds"`
	// The expiration of the cooldown.
	Expiration time.Time `json:"expiration"`
	// The reason of the cooldown.
	Reason GETransactionListSchemaCooldownReason `json:"reason"`
}

// GetTotalSeconds returns the value of TotalSeconds.
func (s *GETransactionListSchemaCooldown) GetTotalSeconds() int {
	return s.TotalSeconds
}

// GetRemainingSeconds returns the value of RemainingSeconds.
func (s *GETransactionListSchemaCooldown) GetRemainingSeconds() int {
	return s.RemainingSeconds
}

// GetExpiration returns the value of Expiration.
func (s *GETransactionListSchemaCooldown) GetExpiration() time.Time {
	return s.Expiration
}

// GetReason returns the value of Reason.
func (s *GETransactionListSchemaCooldown) GetReason() GETransactionListSchemaCooldownReason {
	return s.Reason
}

// SetTotalSeconds sets the value of TotalSeconds.
func (s *GETransactionListSchemaCooldown) SetTotalSeconds(val int) {
	s.TotalSeconds = val
}

// SetRemainingSeconds sets the value of RemainingSeconds.
func (s *GETransactionListSchemaCooldown) SetRemainingSeconds(val int) {
	s.RemainingSeconds = val
}

// SetExpiration sets the value of Expiration.
func (s *GETransactionListSchemaCooldown) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetReason sets the value of Reason.
func (s *GETransactionListSchemaCooldown) SetReason(val GETransactionListSchemaCooldownReason) {
	s.Reason = val
}

// The reason of the cooldown.
type GETransactionListSchemaCooldownReason string

const (
	GETransactionListSchemaCooldownReasonMovement     GETransactionListSchemaCooldownReason = "movement"
	GETransactionListSchemaCooldownReasonFight        GETransactionListSchemaCooldownReason = "fight"
	GETransactionListSchemaCooldownReasonCrafting     GETransactionListSchemaCooldownReason = "crafting"
	GETransactionListSchemaCooldownReasonGathering    GETransactionListSchemaCooldownReason = "gathering"
	GETransactionListSchemaCooldownReasonBuyGe        GETransactionListSchemaCooldownReason = "buy_ge"
	GETransactionListSchemaCooldownReasonSellGe       GETransactionListSchemaCooldownReason = "sell_ge"
	GETransactionListSchemaCooldownReasonDeleteItem   GETransactionListSchemaCooldownReason = "delete_item"
	GETransactionListSchemaCooldownReasonDepositBank  GETransactionListSchemaCooldownReason = "deposit_bank"
	GETransactionListSchemaCooldownReasonWithdrawBank GETransactionListSchemaCooldownReason = "withdraw_bank"
	GETransactionListSchemaCooldownReasonEquip        GETransactionListSchemaCooldownReason = "equip"
	GETransactionListSchemaCooldownReasonUnequip      GETransactionListSchemaCooldownReason = "unequip"
	GETransactionListSchemaCooldownReasonTask         GETransactionListSchemaCooldownReason = "task"
	GETransactionListSchemaCooldownReasonRecycling    GETransactionListSchemaCooldownReason = "recycling"
)

// AllValues returns all GETransactionListSchemaCooldownReason values.
func (GETransactionListSchemaCooldownReason) AllValues() []GETransactionListSchemaCooldownReason {
	return []GETransactionListSchemaCooldownReason{
		GETransactionListSchemaCooldownReasonMovement,
		GETransactionListSchemaCooldownReasonFight,
		GETransactionListSchemaCooldownReasonCrafting,
		GETransactionListSchemaCooldownReasonGathering,
		GETransactionListSchemaCooldownReasonBuyGe,
		GETransactionListSchemaCooldownReasonSellGe,
		GETransactionListSchemaCooldownReasonDeleteItem,
		GETransactionListSchemaCooldownReasonDepositBank,
		GETransactionListSchemaCooldownReasonWithdrawBank,
		GETransactionListSchemaCooldownReasonEquip,
		GETransactionListSchemaCooldownReasonUnequip,
		GETransactionListSchemaCooldownReasonTask,
		GETransactionListSchemaCooldownReasonRecycling,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GETransactionListSchemaCooldownReason) MarshalText() ([]byte, error) {
	switch s {
	case GETransactionListSchemaCooldownReasonMovement:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonFight:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonCrafting:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonGathering:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonBuyGe:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonSellGe:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonDeleteItem:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonDepositBank:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonWithdrawBank:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonEquip:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonUnequip:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonTask:
		return []byte(s), nil
	case GETransactionListSchemaCooldownReasonRecycling:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GETransactionListSchemaCooldownReason) UnmarshalText(data []byte) error {
	switch GETransactionListSchemaCooldownReason(data) {
	case GETransactionListSchemaCooldownReasonMovement:
		*s = GETransactionListSchemaCooldownReasonMovement
		return nil
	case GETransactionListSchemaCooldownReasonFight:
		*s = GETransactionListSchemaCooldownReasonFight
		return nil
	case GETransactionListSchemaCooldownReasonCrafting:
		*s = GETransactionListSchemaCooldownReasonCrafting
		return nil
	case GETransactionListSchemaCooldownReasonGathering:
		*s = GETransactionListSchemaCooldownReasonGathering
		return nil
	case GETransactionListSchemaCooldownReasonBuyGe:
		*s = GETransactionListSchemaCooldownReasonBuyGe
		return nil
	case GETransactionListSchemaCooldownReasonSellGe:
		*s = GETransactionListSchemaCooldownReasonSellGe
		return nil
	case GETransactionListSchemaCooldownReasonDeleteItem:
		*s = GETransactionListSchemaCooldownReasonDeleteItem
		return nil
	case GETransactionListSchemaCooldownReasonDepositBank:
		*s = GETransactionListSchemaCooldownReasonDepositBank
		return nil
	case GETransactionListSchemaCooldownReasonWithdrawBank:
		*s = GETransactionListSchemaCooldownReasonWithdrawBank
		return nil
	case GETransactionListSchemaCooldownReasonEquip:
		*s = GETransactionListSchemaCooldownReasonEquip
		return nil
	case GETransactionListSchemaCooldownReasonUnequip:
		*s = GETransactionListSchemaCooldownReasonUnequip
		return nil
	case GETransactionListSchemaCooldownReasonTask:
		*s = GETransactionListSchemaCooldownReasonTask
		return nil
	case GETransactionListSchemaCooldownReasonRecycling:
		*s = GETransactionListSchemaCooldownReasonRecycling
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GETransactionListSchemaTransaction struct {
	// Item code.
	Code string `json:"code"`
	// Item quantity.
	Quantity int `json:"quantity"`
	// Item price.
	Price int `json:"price"`
	// Total price of the transaction.
	TotalPrice int `json:"total_price"`
}

// GetCode returns the value of Code.
func (s *GETransactionListSchemaTransaction) GetCode() string {
	return s.Code
}

// GetQuantity returns the value of Quantity.
func (s *GETransactionListSchemaTransaction) GetQuantity() int {
	return s.Quantity
}

// GetPrice returns the value of Price.
func (s *GETransactionListSchemaTransaction) GetPrice() int {
	return s.Price
}

// GetTotalPrice returns the value of TotalPrice.
func (s *GETransactionListSchemaTransaction) GetTotalPrice() int {
	return s.TotalPrice
}

// SetCode sets the value of Code.
func (s *GETransactionListSchemaTransaction) SetCode(val string) {
	s.Code = val
}

// SetQuantity sets the value of Quantity.
func (s *GETransactionListSchemaTransaction) SetQuantity(val int) {
	s.Quantity = val
}

// SetPrice sets the value of Price.
func (s *GETransactionListSchemaTransaction) SetPrice(val int) {
	s.Price = val
}

// SetTotalPrice sets the value of TotalPrice.
func (s *GETransactionListSchemaTransaction) SetTotalPrice(val int) {
	s.TotalPrice = val
}

// Ref: #/components/schemas/GETransactionResponseSchema
type GETransactionResponseSchema struct {
	Data GETransactionListSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *GETransactionResponseSchema) GetData() GETransactionListSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *GETransactionResponseSchema) SetData(val GETransactionListSchema) {
	s.Data = val
}

func (*GETransactionResponseSchema) actionGeBuyItemMyNameActionGeBuyPostRes()   {}
func (*GETransactionResponseSchema) actionGeSellItemMyNameActionGeSellPostRes() {}

// GenerateTokenTokenPostCode455 is response for GenerateTokenTokenPost operation.
type GenerateTokenTokenPostCode455 struct{}

func (*GenerateTokenTokenPostCode455) generateTokenTokenPostRes() {}

// GetAllCharactersCharactersGetNotFound is response for GetAllCharactersCharactersGet operation.
type GetAllCharactersCharactersGetNotFound struct{}

func (*GetAllCharactersCharactersGetNotFound) getAllCharactersCharactersGetRes() {}

// Default sort by total XP.
type GetAllCharactersCharactersGetSort string

const (
	GetAllCharactersCharactersGetSortWoodcutting     GetAllCharactersCharactersGetSort = "woodcutting"
	GetAllCharactersCharactersGetSortMining          GetAllCharactersCharactersGetSort = "mining"
	GetAllCharactersCharactersGetSortFishing         GetAllCharactersCharactersGetSort = "fishing"
	GetAllCharactersCharactersGetSortWeaponcrafting  GetAllCharactersCharactersGetSort = "weaponcrafting"
	GetAllCharactersCharactersGetSortGearcrafting    GetAllCharactersCharactersGetSort = "gearcrafting"
	GetAllCharactersCharactersGetSortJewelrycrafting GetAllCharactersCharactersGetSort = "jewelrycrafting"
	GetAllCharactersCharactersGetSortCooking         GetAllCharactersCharactersGetSort = "cooking"
)

// AllValues returns all GetAllCharactersCharactersGetSort values.
func (GetAllCharactersCharactersGetSort) AllValues() []GetAllCharactersCharactersGetSort {
	return []GetAllCharactersCharactersGetSort{
		GetAllCharactersCharactersGetSortWoodcutting,
		GetAllCharactersCharactersGetSortMining,
		GetAllCharactersCharactersGetSortFishing,
		GetAllCharactersCharactersGetSortWeaponcrafting,
		GetAllCharactersCharactersGetSortGearcrafting,
		GetAllCharactersCharactersGetSortJewelrycrafting,
		GetAllCharactersCharactersGetSortCooking,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllCharactersCharactersGetSort) MarshalText() ([]byte, error) {
	switch s {
	case GetAllCharactersCharactersGetSortWoodcutting:
		return []byte(s), nil
	case GetAllCharactersCharactersGetSortMining:
		return []byte(s), nil
	case GetAllCharactersCharactersGetSortFishing:
		return []byte(s), nil
	case GetAllCharactersCharactersGetSortWeaponcrafting:
		return []byte(s), nil
	case GetAllCharactersCharactersGetSortGearcrafting:
		return []byte(s), nil
	case GetAllCharactersCharactersGetSortJewelrycrafting:
		return []byte(s), nil
	case GetAllCharactersCharactersGetSortCooking:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllCharactersCharactersGetSort) UnmarshalText(data []byte) error {
	switch GetAllCharactersCharactersGetSort(data) {
	case GetAllCharactersCharactersGetSortWoodcutting:
		*s = GetAllCharactersCharactersGetSortWoodcutting
		return nil
	case GetAllCharactersCharactersGetSortMining:
		*s = GetAllCharactersCharactersGetSortMining
		return nil
	case GetAllCharactersCharactersGetSortFishing:
		*s = GetAllCharactersCharactersGetSortFishing
		return nil
	case GetAllCharactersCharactersGetSortWeaponcrafting:
		*s = GetAllCharactersCharactersGetSortWeaponcrafting
		return nil
	case GetAllCharactersCharactersGetSortGearcrafting:
		*s = GetAllCharactersCharactersGetSortGearcrafting
		return nil
	case GetAllCharactersCharactersGetSortJewelrycrafting:
		*s = GetAllCharactersCharactersGetSortJewelrycrafting
		return nil
	case GetAllCharactersCharactersGetSortCooking:
		*s = GetAllCharactersCharactersGetSortCooking
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// GetAllCharactersLogsMyLogsGetNotFound is response for GetAllCharactersLogsMyLogsGet operation.
type GetAllCharactersLogsMyLogsGetNotFound struct{}

func (*GetAllCharactersLogsMyLogsGetNotFound) getAllCharactersLogsMyLogsGetRes() {}

// GetAllEventsEventsGetNotFound is response for GetAllEventsEventsGet operation.
type GetAllEventsEventsGetNotFound struct{}

func (*GetAllEventsEventsGetNotFound) getAllEventsEventsGetRes() {}

// GetAllGeItemsGeGetNotFound is response for GetAllGeItemsGeGet operation.
type GetAllGeItemsGeGetNotFound struct{}

func (*GetAllGeItemsGeGetNotFound) getAllGeItemsGeGetRes() {}

// Skill to craft items.
type GetAllItemsItemsGetCraftSkill string

const (
	GetAllItemsItemsGetCraftSkillWeaponcrafting  GetAllItemsItemsGetCraftSkill = "weaponcrafting"
	GetAllItemsItemsGetCraftSkillGearcrafting    GetAllItemsItemsGetCraftSkill = "gearcrafting"
	GetAllItemsItemsGetCraftSkillJewelrycrafting GetAllItemsItemsGetCraftSkill = "jewelrycrafting"
	GetAllItemsItemsGetCraftSkillCooking         GetAllItemsItemsGetCraftSkill = "cooking"
	GetAllItemsItemsGetCraftSkillWoodcutting     GetAllItemsItemsGetCraftSkill = "woodcutting"
	GetAllItemsItemsGetCraftSkillMining          GetAllItemsItemsGetCraftSkill = "mining"
)

// AllValues returns all GetAllItemsItemsGetCraftSkill values.
func (GetAllItemsItemsGetCraftSkill) AllValues() []GetAllItemsItemsGetCraftSkill {
	return []GetAllItemsItemsGetCraftSkill{
		GetAllItemsItemsGetCraftSkillWeaponcrafting,
		GetAllItemsItemsGetCraftSkillGearcrafting,
		GetAllItemsItemsGetCraftSkillJewelrycrafting,
		GetAllItemsItemsGetCraftSkillCooking,
		GetAllItemsItemsGetCraftSkillWoodcutting,
		GetAllItemsItemsGetCraftSkillMining,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllItemsItemsGetCraftSkill) MarshalText() ([]byte, error) {
	switch s {
	case GetAllItemsItemsGetCraftSkillWeaponcrafting:
		return []byte(s), nil
	case GetAllItemsItemsGetCraftSkillGearcrafting:
		return []byte(s), nil
	case GetAllItemsItemsGetCraftSkillJewelrycrafting:
		return []byte(s), nil
	case GetAllItemsItemsGetCraftSkillCooking:
		return []byte(s), nil
	case GetAllItemsItemsGetCraftSkillWoodcutting:
		return []byte(s), nil
	case GetAllItemsItemsGetCraftSkillMining:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllItemsItemsGetCraftSkill) UnmarshalText(data []byte) error {
	switch GetAllItemsItemsGetCraftSkill(data) {
	case GetAllItemsItemsGetCraftSkillWeaponcrafting:
		*s = GetAllItemsItemsGetCraftSkillWeaponcrafting
		return nil
	case GetAllItemsItemsGetCraftSkillGearcrafting:
		*s = GetAllItemsItemsGetCraftSkillGearcrafting
		return nil
	case GetAllItemsItemsGetCraftSkillJewelrycrafting:
		*s = GetAllItemsItemsGetCraftSkillJewelrycrafting
		return nil
	case GetAllItemsItemsGetCraftSkillCooking:
		*s = GetAllItemsItemsGetCraftSkillCooking
		return nil
	case GetAllItemsItemsGetCraftSkillWoodcutting:
		*s = GetAllItemsItemsGetCraftSkillWoodcutting
		return nil
	case GetAllItemsItemsGetCraftSkillMining:
		*s = GetAllItemsItemsGetCraftSkillMining
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// GetAllItemsItemsGetNotFound is response for GetAllItemsItemsGet operation.
type GetAllItemsItemsGetNotFound struct{}

func (*GetAllItemsItemsGetNotFound) getAllItemsItemsGetRes() {}

// Type of items.
type GetAllItemsItemsGetType string

const (
	GetAllItemsItemsGetTypeConsumable GetAllItemsItemsGetType = "consumable"
	GetAllItemsItemsGetTypeBodyArmor  GetAllItemsItemsGetType = "body_armor"
	GetAllItemsItemsGetTypeWeapon     GetAllItemsItemsGetType = "weapon"
	GetAllItemsItemsGetTypeResource   GetAllItemsItemsGetType = "resource"
	GetAllItemsItemsGetTypeLegArmor   GetAllItemsItemsGetType = "leg_armor"
	GetAllItemsItemsGetTypeHelmet     GetAllItemsItemsGetType = "helmet"
	GetAllItemsItemsGetTypeBoots      GetAllItemsItemsGetType = "boots"
	GetAllItemsItemsGetTypeShield     GetAllItemsItemsGetType = "shield"
	GetAllItemsItemsGetTypeAmulet     GetAllItemsItemsGetType = "amulet"
	GetAllItemsItemsGetTypeRing       GetAllItemsItemsGetType = "ring"
)

// AllValues returns all GetAllItemsItemsGetType values.
func (GetAllItemsItemsGetType) AllValues() []GetAllItemsItemsGetType {
	return []GetAllItemsItemsGetType{
		GetAllItemsItemsGetTypeConsumable,
		GetAllItemsItemsGetTypeBodyArmor,
		GetAllItemsItemsGetTypeWeapon,
		GetAllItemsItemsGetTypeResource,
		GetAllItemsItemsGetTypeLegArmor,
		GetAllItemsItemsGetTypeHelmet,
		GetAllItemsItemsGetTypeBoots,
		GetAllItemsItemsGetTypeShield,
		GetAllItemsItemsGetTypeAmulet,
		GetAllItemsItemsGetTypeRing,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllItemsItemsGetType) MarshalText() ([]byte, error) {
	switch s {
	case GetAllItemsItemsGetTypeConsumable:
		return []byte(s), nil
	case GetAllItemsItemsGetTypeBodyArmor:
		return []byte(s), nil
	case GetAllItemsItemsGetTypeWeapon:
		return []byte(s), nil
	case GetAllItemsItemsGetTypeResource:
		return []byte(s), nil
	case GetAllItemsItemsGetTypeLegArmor:
		return []byte(s), nil
	case GetAllItemsItemsGetTypeHelmet:
		return []byte(s), nil
	case GetAllItemsItemsGetTypeBoots:
		return []byte(s), nil
	case GetAllItemsItemsGetTypeShield:
		return []byte(s), nil
	case GetAllItemsItemsGetTypeAmulet:
		return []byte(s), nil
	case GetAllItemsItemsGetTypeRing:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllItemsItemsGetType) UnmarshalText(data []byte) error {
	switch GetAllItemsItemsGetType(data) {
	case GetAllItemsItemsGetTypeConsumable:
		*s = GetAllItemsItemsGetTypeConsumable
		return nil
	case GetAllItemsItemsGetTypeBodyArmor:
		*s = GetAllItemsItemsGetTypeBodyArmor
		return nil
	case GetAllItemsItemsGetTypeWeapon:
		*s = GetAllItemsItemsGetTypeWeapon
		return nil
	case GetAllItemsItemsGetTypeResource:
		*s = GetAllItemsItemsGetTypeResource
		return nil
	case GetAllItemsItemsGetTypeLegArmor:
		*s = GetAllItemsItemsGetTypeLegArmor
		return nil
	case GetAllItemsItemsGetTypeHelmet:
		*s = GetAllItemsItemsGetTypeHelmet
		return nil
	case GetAllItemsItemsGetTypeBoots:
		*s = GetAllItemsItemsGetTypeBoots
		return nil
	case GetAllItemsItemsGetTypeShield:
		*s = GetAllItemsItemsGetTypeShield
		return nil
	case GetAllItemsItemsGetTypeAmulet:
		*s = GetAllItemsItemsGetTypeAmulet
		return nil
	case GetAllItemsItemsGetTypeRing:
		*s = GetAllItemsItemsGetTypeRing
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Type of content on the map.
type GetAllMapsMapsGetContentType string

const (
	GetAllMapsMapsGetContentTypeMonster       GetAllMapsMapsGetContentType = "monster"
	GetAllMapsMapsGetContentTypeResource      GetAllMapsMapsGetContentType = "resource"
	GetAllMapsMapsGetContentTypeWorkshop      GetAllMapsMapsGetContentType = "workshop"
	GetAllMapsMapsGetContentTypeBank          GetAllMapsMapsGetContentType = "bank"
	GetAllMapsMapsGetContentTypeGrandExchange GetAllMapsMapsGetContentType = "grand_exchange"
	GetAllMapsMapsGetContentTypeTasksMaster   GetAllMapsMapsGetContentType = "tasks_master"
)

// AllValues returns all GetAllMapsMapsGetContentType values.
func (GetAllMapsMapsGetContentType) AllValues() []GetAllMapsMapsGetContentType {
	return []GetAllMapsMapsGetContentType{
		GetAllMapsMapsGetContentTypeMonster,
		GetAllMapsMapsGetContentTypeResource,
		GetAllMapsMapsGetContentTypeWorkshop,
		GetAllMapsMapsGetContentTypeBank,
		GetAllMapsMapsGetContentTypeGrandExchange,
		GetAllMapsMapsGetContentTypeTasksMaster,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllMapsMapsGetContentType) MarshalText() ([]byte, error) {
	switch s {
	case GetAllMapsMapsGetContentTypeMonster:
		return []byte(s), nil
	case GetAllMapsMapsGetContentTypeResource:
		return []byte(s), nil
	case GetAllMapsMapsGetContentTypeWorkshop:
		return []byte(s), nil
	case GetAllMapsMapsGetContentTypeBank:
		return []byte(s), nil
	case GetAllMapsMapsGetContentTypeGrandExchange:
		return []byte(s), nil
	case GetAllMapsMapsGetContentTypeTasksMaster:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllMapsMapsGetContentType) UnmarshalText(data []byte) error {
	switch GetAllMapsMapsGetContentType(data) {
	case GetAllMapsMapsGetContentTypeMonster:
		*s = GetAllMapsMapsGetContentTypeMonster
		return nil
	case GetAllMapsMapsGetContentTypeResource:
		*s = GetAllMapsMapsGetContentTypeResource
		return nil
	case GetAllMapsMapsGetContentTypeWorkshop:
		*s = GetAllMapsMapsGetContentTypeWorkshop
		return nil
	case GetAllMapsMapsGetContentTypeBank:
		*s = GetAllMapsMapsGetContentTypeBank
		return nil
	case GetAllMapsMapsGetContentTypeGrandExchange:
		*s = GetAllMapsMapsGetContentTypeGrandExchange
		return nil
	case GetAllMapsMapsGetContentTypeTasksMaster:
		*s = GetAllMapsMapsGetContentTypeTasksMaster
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// GetAllMapsMapsGetNotFound is response for GetAllMapsMapsGet operation.
type GetAllMapsMapsGetNotFound struct{}

func (*GetAllMapsMapsGetNotFound) getAllMapsMapsGetRes() {}

// GetAllMonstersMonstersGetNotFound is response for GetAllMonstersMonstersGet operation.
type GetAllMonstersMonstersGetNotFound struct{}

func (*GetAllMonstersMonstersGetNotFound) getAllMonstersMonstersGetRes() {}

// GetAllResourcesResourcesGetNotFound is response for GetAllResourcesResourcesGet operation.
type GetAllResourcesResourcesGetNotFound struct{}

func (*GetAllResourcesResourcesGetNotFound) getAllResourcesResourcesGetRes() {}

// The code of the skill.
type GetAllResourcesResourcesGetSkill string

const (
	GetAllResourcesResourcesGetSkillMining      GetAllResourcesResourcesGetSkill = "mining"
	GetAllResourcesResourcesGetSkillWoodcutting GetAllResourcesResourcesGetSkill = "woodcutting"
	GetAllResourcesResourcesGetSkillFishing     GetAllResourcesResourcesGetSkill = "fishing"
)

// AllValues returns all GetAllResourcesResourcesGetSkill values.
func (GetAllResourcesResourcesGetSkill) AllValues() []GetAllResourcesResourcesGetSkill {
	return []GetAllResourcesResourcesGetSkill{
		GetAllResourcesResourcesGetSkillMining,
		GetAllResourcesResourcesGetSkillWoodcutting,
		GetAllResourcesResourcesGetSkillFishing,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GetAllResourcesResourcesGetSkill) MarshalText() ([]byte, error) {
	switch s {
	case GetAllResourcesResourcesGetSkillMining:
		return []byte(s), nil
	case GetAllResourcesResourcesGetSkillWoodcutting:
		return []byte(s), nil
	case GetAllResourcesResourcesGetSkillFishing:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GetAllResourcesResourcesGetSkill) UnmarshalText(data []byte) error {
	switch GetAllResourcesResourcesGetSkill(data) {
	case GetAllResourcesResourcesGetSkillMining:
		*s = GetAllResourcesResourcesGetSkillMining
		return nil
	case GetAllResourcesResourcesGetSkillWoodcutting:
		*s = GetAllResourcesResourcesGetSkillWoodcutting
		return nil
	case GetAllResourcesResourcesGetSkillFishing:
		*s = GetAllResourcesResourcesGetSkillFishing
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// GetBankItemsMyBankItemsGetNotFound is response for GetBankItemsMyBankItemsGet operation.
type GetBankItemsMyBankItemsGetNotFound struct{}

func (*GetBankItemsMyBankItemsGetNotFound) getBankItemsMyBankItemsGetRes() {}

// GetCharacterCharactersNameGetNotFound is response for GetCharacterCharactersNameGet operation.
type GetCharacterCharactersNameGetNotFound struct{}

func (*GetCharacterCharactersNameGetNotFound) getCharacterCharactersNameGetRes() {}

// GetCharacterLogsMyNameLogsGetCode498 is response for GetCharacterLogsMyNameLogsGet operation.
type GetCharacterLogsMyNameLogsGetCode498 struct{}

func (*GetCharacterLogsMyNameLogsGetCode498) getCharacterLogsMyNameLogsGetRes() {}

// GetCharacterLogsMyNameLogsGetNotFound is response for GetCharacterLogsMyNameLogsGet operation.
type GetCharacterLogsMyNameLogsGetNotFound struct{}

func (*GetCharacterLogsMyNameLogsGetNotFound) getCharacterLogsMyNameLogsGetRes() {}

// GetGeItemGeCodeGetNotFound is response for GetGeItemGeCodeGet operation.
type GetGeItemGeCodeGetNotFound struct{}

func (*GetGeItemGeCodeGetNotFound) getGeItemGeCodeGetRes() {}

// GetItemItemsCodeGetNotFound is response for GetItemItemsCodeGet operation.
type GetItemItemsCodeGetNotFound struct{}

func (*GetItemItemsCodeGetNotFound) getItemItemsCodeGetRes() {}

// GetMapMapsXYGetNotFound is response for GetMapMapsXYGet operation.
type GetMapMapsXYGetNotFound struct{}

func (*GetMapMapsXYGetNotFound) getMapMapsXYGetRes() {}

// GetMonsterMonstersCodeGetNotFound is response for GetMonsterMonstersCodeGet operation.
type GetMonsterMonstersCodeGetNotFound struct{}

func (*GetMonsterMonstersCodeGetNotFound) getMonsterMonstersCodeGetRes() {}

// GetMyCharactersMyCharactersGetNotFound is response for GetMyCharactersMyCharactersGet operation.
type GetMyCharactersMyCharactersGetNotFound struct{}

func (*GetMyCharactersMyCharactersGetNotFound) getMyCharactersMyCharactersGetRes() {}

// GetResourcesResourcesCodeGetNotFound is response for GetResourcesResourcesCodeGet operation.
type GetResourcesResourcesCodeGetNotFound struct{}

func (*GetResourcesResourcesCodeGetNotFound) getResourcesResourcesCodeGetRes() {}

// Ref: #/components/schemas/GoldBankResponseSchema
type GoldBankResponseSchema struct {
	Data GoldSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *GoldBankResponseSchema) GetData() GoldSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *GoldBankResponseSchema) SetData(val GoldSchema) {
	s.Data = val
}

// Ref: #/components/schemas/GoldResponseSchema
type GoldResponseSchema struct {
	Data GoldTransactionSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *GoldResponseSchema) GetData() GoldTransactionSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *GoldResponseSchema) SetData(val GoldTransactionSchema) {
	s.Data = val
}

func (*GoldResponseSchema) actionDepositBankGoldMyNameActionBankDepositGoldPostRes()   {}
func (*GoldResponseSchema) actionWithdrawBankGoldMyNameActionBankWithdrawGoldPostRes() {}

// Ref: #/components/schemas/GoldSchema
type GoldSchema struct {
	// Quantity of gold.
	Quantity int `json:"quantity"`
}

// GetQuantity returns the value of Quantity.
func (s *GoldSchema) GetQuantity() int {
	return s.Quantity
}

// SetQuantity sets the value of Quantity.
func (s *GoldSchema) SetQuantity(val int) {
	s.Quantity = val
}

// Ref: #/components/schemas/GoldTransactionSchema
type GoldTransactionSchema struct {
	// Cooldown details.
	Cooldown GoldTransactionSchemaCooldown `json:"cooldown"`
	// Bank details.
	Bank GoldTransactionSchemaBank `json:"bank"`
	// Player details.
	Character GoldTransactionSchemaCharacter `json:"character"`
}

// GetCooldown returns the value of Cooldown.
func (s *GoldTransactionSchema) GetCooldown() GoldTransactionSchemaCooldown {
	return s.Cooldown
}

// GetBank returns the value of Bank.
func (s *GoldTransactionSchema) GetBank() GoldTransactionSchemaBank {
	return s.Bank
}

// GetCharacter returns the value of Character.
func (s *GoldTransactionSchema) GetCharacter() GoldTransactionSchemaCharacter {
	return s.Character
}

// SetCooldown sets the value of Cooldown.
func (s *GoldTransactionSchema) SetCooldown(val GoldTransactionSchemaCooldown) {
	s.Cooldown = val
}

// SetBank sets the value of Bank.
func (s *GoldTransactionSchema) SetBank(val GoldTransactionSchemaBank) {
	s.Bank = val
}

// SetCharacter sets the value of Character.
func (s *GoldTransactionSchema) SetCharacter(val GoldTransactionSchemaCharacter) {
	s.Character = val
}

type GoldTransactionSchemaBank struct {
	// Quantity of gold.
	Quantity int `json:"quantity"`
}

// GetQuantity returns the value of Quantity.
func (s *GoldTransactionSchemaBank) GetQuantity() int {
	return s.Quantity
}

// SetQuantity sets the value of Quantity.
func (s *GoldTransactionSchemaBank) SetQuantity(val int) {
	s.Quantity = val
}

type GoldTransactionSchemaCharacter struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin GoldTransactionSchemaCharacterSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptGoldTransactionSchemaCharacterCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *GoldTransactionSchemaCharacter) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *GoldTransactionSchemaCharacter) GetSkin() GoldTransactionSchemaCharacterSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *GoldTransactionSchemaCharacter) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *GoldTransactionSchemaCharacter) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *GoldTransactionSchemaCharacter) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *GoldTransactionSchemaCharacter) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *GoldTransactionSchemaCharacter) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *GoldTransactionSchemaCharacter) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *GoldTransactionSchemaCharacter) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *GoldTransactionSchemaCharacter) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *GoldTransactionSchemaCharacter) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *GoldTransactionSchemaCharacter) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *GoldTransactionSchemaCharacter) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *GoldTransactionSchemaCharacter) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *GoldTransactionSchemaCharacter) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *GoldTransactionSchemaCharacter) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *GoldTransactionSchemaCharacter) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *GoldTransactionSchemaCharacter) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *GoldTransactionSchemaCharacter) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *GoldTransactionSchemaCharacter) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *GoldTransactionSchemaCharacter) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *GoldTransactionSchemaCharacter) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *GoldTransactionSchemaCharacter) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *GoldTransactionSchemaCharacter) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *GoldTransactionSchemaCharacter) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *GoldTransactionSchemaCharacter) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *GoldTransactionSchemaCharacter) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *GoldTransactionSchemaCharacter) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *GoldTransactionSchemaCharacter) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *GoldTransactionSchemaCharacter) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *GoldTransactionSchemaCharacter) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *GoldTransactionSchemaCharacter) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *GoldTransactionSchemaCharacter) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *GoldTransactionSchemaCharacter) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *GoldTransactionSchemaCharacter) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *GoldTransactionSchemaCharacter) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *GoldTransactionSchemaCharacter) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *GoldTransactionSchemaCharacter) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *GoldTransactionSchemaCharacter) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *GoldTransactionSchemaCharacter) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *GoldTransactionSchemaCharacter) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *GoldTransactionSchemaCharacter) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *GoldTransactionSchemaCharacter) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *GoldTransactionSchemaCharacter) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *GoldTransactionSchemaCharacter) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *GoldTransactionSchemaCharacter) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *GoldTransactionSchemaCharacter) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *GoldTransactionSchemaCharacter) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *GoldTransactionSchemaCharacter) GetCooldownExpiration() OptGoldTransactionSchemaCharacterCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *GoldTransactionSchemaCharacter) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *GoldTransactionSchemaCharacter) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *GoldTransactionSchemaCharacter) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *GoldTransactionSchemaCharacter) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *GoldTransactionSchemaCharacter) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *GoldTransactionSchemaCharacter) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *GoldTransactionSchemaCharacter) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *GoldTransactionSchemaCharacter) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *GoldTransactionSchemaCharacter) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *GoldTransactionSchemaCharacter) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *GoldTransactionSchemaCharacter) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *GoldTransactionSchemaCharacter) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *GoldTransactionSchemaCharacter) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *GoldTransactionSchemaCharacter) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *GoldTransactionSchemaCharacter) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *GoldTransactionSchemaCharacter) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *GoldTransactionSchemaCharacter) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *GoldTransactionSchemaCharacter) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *GoldTransactionSchemaCharacter) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *GoldTransactionSchemaCharacter) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *GoldTransactionSchemaCharacter) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *GoldTransactionSchemaCharacter) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *GoldTransactionSchemaCharacter) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *GoldTransactionSchemaCharacter) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *GoldTransactionSchemaCharacter) SetSkin(val GoldTransactionSchemaCharacterSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *GoldTransactionSchemaCharacter) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *GoldTransactionSchemaCharacter) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *GoldTransactionSchemaCharacter) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *GoldTransactionSchemaCharacter) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *GoldTransactionSchemaCharacter) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *GoldTransactionSchemaCharacter) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *GoldTransactionSchemaCharacter) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *GoldTransactionSchemaCharacter) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *GoldTransactionSchemaCharacter) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *GoldTransactionSchemaCharacter) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *GoldTransactionSchemaCharacter) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *GoldTransactionSchemaCharacter) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *GoldTransactionSchemaCharacter) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *GoldTransactionSchemaCharacter) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *GoldTransactionSchemaCharacter) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *GoldTransactionSchemaCharacter) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *GoldTransactionSchemaCharacter) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *GoldTransactionSchemaCharacter) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *GoldTransactionSchemaCharacter) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *GoldTransactionSchemaCharacter) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *GoldTransactionSchemaCharacter) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *GoldTransactionSchemaCharacter) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *GoldTransactionSchemaCharacter) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *GoldTransactionSchemaCharacter) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *GoldTransactionSchemaCharacter) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *GoldTransactionSchemaCharacter) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *GoldTransactionSchemaCharacter) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *GoldTransactionSchemaCharacter) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *GoldTransactionSchemaCharacter) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *GoldTransactionSchemaCharacter) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *GoldTransactionSchemaCharacter) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *GoldTransactionSchemaCharacter) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *GoldTransactionSchemaCharacter) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *GoldTransactionSchemaCharacter) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *GoldTransactionSchemaCharacter) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *GoldTransactionSchemaCharacter) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *GoldTransactionSchemaCharacter) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *GoldTransactionSchemaCharacter) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *GoldTransactionSchemaCharacter) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *GoldTransactionSchemaCharacter) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *GoldTransactionSchemaCharacter) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *GoldTransactionSchemaCharacter) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *GoldTransactionSchemaCharacter) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *GoldTransactionSchemaCharacter) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *GoldTransactionSchemaCharacter) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *GoldTransactionSchemaCharacter) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *GoldTransactionSchemaCharacter) SetCooldownExpiration(val OptGoldTransactionSchemaCharacterCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *GoldTransactionSchemaCharacter) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *GoldTransactionSchemaCharacter) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *GoldTransactionSchemaCharacter) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *GoldTransactionSchemaCharacter) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *GoldTransactionSchemaCharacter) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *GoldTransactionSchemaCharacter) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *GoldTransactionSchemaCharacter) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *GoldTransactionSchemaCharacter) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *GoldTransactionSchemaCharacter) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *GoldTransactionSchemaCharacter) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *GoldTransactionSchemaCharacter) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *GoldTransactionSchemaCharacter) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *GoldTransactionSchemaCharacter) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *GoldTransactionSchemaCharacter) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *GoldTransactionSchemaCharacter) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *GoldTransactionSchemaCharacter) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *GoldTransactionSchemaCharacter) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *GoldTransactionSchemaCharacter) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *GoldTransactionSchemaCharacter) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *GoldTransactionSchemaCharacter) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *GoldTransactionSchemaCharacter) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *GoldTransactionSchemaCharacter) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *GoldTransactionSchemaCharacter) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// GoldTransactionSchemaCharacterCooldownExpiration represents sum type.
type GoldTransactionSchemaCharacterCooldownExpiration struct {
	Type     GoldTransactionSchemaCharacterCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// GoldTransactionSchemaCharacterCooldownExpirationType is oneOf type of GoldTransactionSchemaCharacterCooldownExpiration.
type GoldTransactionSchemaCharacterCooldownExpirationType string

// Possible values for GoldTransactionSchemaCharacterCooldownExpirationType.
const (
	DateTimeGoldTransactionSchemaCharacterCooldownExpiration GoldTransactionSchemaCharacterCooldownExpirationType = "time.Time"
	NullGoldTransactionSchemaCharacterCooldownExpiration     GoldTransactionSchemaCharacterCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether GoldTransactionSchemaCharacterCooldownExpiration is time.Time.
func (s GoldTransactionSchemaCharacterCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeGoldTransactionSchemaCharacterCooldownExpiration
}

// IsNull reports whether GoldTransactionSchemaCharacterCooldownExpiration is struct{}.
func (s GoldTransactionSchemaCharacterCooldownExpiration) IsNull() bool {
	return s.Type == NullGoldTransactionSchemaCharacterCooldownExpiration
}

// SetDateTime sets GoldTransactionSchemaCharacterCooldownExpiration to time.Time.
func (s *GoldTransactionSchemaCharacterCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeGoldTransactionSchemaCharacterCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if GoldTransactionSchemaCharacterCooldownExpiration is time.Time.
func (s GoldTransactionSchemaCharacterCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeGoldTransactionSchemaCharacterCooldownExpiration returns new GoldTransactionSchemaCharacterCooldownExpiration from time.Time.
func NewDateTimeGoldTransactionSchemaCharacterCooldownExpiration(v time.Time) GoldTransactionSchemaCharacterCooldownExpiration {
	var s GoldTransactionSchemaCharacterCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets GoldTransactionSchemaCharacterCooldownExpiration to struct{}.
func (s *GoldTransactionSchemaCharacterCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullGoldTransactionSchemaCharacterCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if GoldTransactionSchemaCharacterCooldownExpiration is struct{}.
func (s GoldTransactionSchemaCharacterCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullGoldTransactionSchemaCharacterCooldownExpiration returns new GoldTransactionSchemaCharacterCooldownExpiration from struct{}.
func NewNullGoldTransactionSchemaCharacterCooldownExpiration(v struct{}) GoldTransactionSchemaCharacterCooldownExpiration {
	var s GoldTransactionSchemaCharacterCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type GoldTransactionSchemaCharacterSkin string

const (
	GoldTransactionSchemaCharacterSkinMen1   GoldTransactionSchemaCharacterSkin = "men1"
	GoldTransactionSchemaCharacterSkinMen2   GoldTransactionSchemaCharacterSkin = "men2"
	GoldTransactionSchemaCharacterSkinMen3   GoldTransactionSchemaCharacterSkin = "men3"
	GoldTransactionSchemaCharacterSkinWomen1 GoldTransactionSchemaCharacterSkin = "women1"
	GoldTransactionSchemaCharacterSkinWomen2 GoldTransactionSchemaCharacterSkin = "women2"
	GoldTransactionSchemaCharacterSkinWomen3 GoldTransactionSchemaCharacterSkin = "women3"
)

// AllValues returns all GoldTransactionSchemaCharacterSkin values.
func (GoldTransactionSchemaCharacterSkin) AllValues() []GoldTransactionSchemaCharacterSkin {
	return []GoldTransactionSchemaCharacterSkin{
		GoldTransactionSchemaCharacterSkinMen1,
		GoldTransactionSchemaCharacterSkinMen2,
		GoldTransactionSchemaCharacterSkinMen3,
		GoldTransactionSchemaCharacterSkinWomen1,
		GoldTransactionSchemaCharacterSkinWomen2,
		GoldTransactionSchemaCharacterSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GoldTransactionSchemaCharacterSkin) MarshalText() ([]byte, error) {
	switch s {
	case GoldTransactionSchemaCharacterSkinMen1:
		return []byte(s), nil
	case GoldTransactionSchemaCharacterSkinMen2:
		return []byte(s), nil
	case GoldTransactionSchemaCharacterSkinMen3:
		return []byte(s), nil
	case GoldTransactionSchemaCharacterSkinWomen1:
		return []byte(s), nil
	case GoldTransactionSchemaCharacterSkinWomen2:
		return []byte(s), nil
	case GoldTransactionSchemaCharacterSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GoldTransactionSchemaCharacterSkin) UnmarshalText(data []byte) error {
	switch GoldTransactionSchemaCharacterSkin(data) {
	case GoldTransactionSchemaCharacterSkinMen1:
		*s = GoldTransactionSchemaCharacterSkinMen1
		return nil
	case GoldTransactionSchemaCharacterSkinMen2:
		*s = GoldTransactionSchemaCharacterSkinMen2
		return nil
	case GoldTransactionSchemaCharacterSkinMen3:
		*s = GoldTransactionSchemaCharacterSkinMen3
		return nil
	case GoldTransactionSchemaCharacterSkinWomen1:
		*s = GoldTransactionSchemaCharacterSkinWomen1
		return nil
	case GoldTransactionSchemaCharacterSkinWomen2:
		*s = GoldTransactionSchemaCharacterSkinWomen2
		return nil
	case GoldTransactionSchemaCharacterSkinWomen3:
		*s = GoldTransactionSchemaCharacterSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type GoldTransactionSchemaCooldown struct {
	// The total seconds of the cooldown.
	TotalSeconds int `json:"total_seconds"`
	// The remaining seconds of the cooldown.
	RemainingSeconds int `json:"remaining_seconds"`
	// The expiration of the cooldown.
	Expiration time.Time `json:"expiration"`
	// The reason of the cooldown.
	Reason GoldTransactionSchemaCooldownReason `json:"reason"`
}

// GetTotalSeconds returns the value of TotalSeconds.
func (s *GoldTransactionSchemaCooldown) GetTotalSeconds() int {
	return s.TotalSeconds
}

// GetRemainingSeconds returns the value of RemainingSeconds.
func (s *GoldTransactionSchemaCooldown) GetRemainingSeconds() int {
	return s.RemainingSeconds
}

// GetExpiration returns the value of Expiration.
func (s *GoldTransactionSchemaCooldown) GetExpiration() time.Time {
	return s.Expiration
}

// GetReason returns the value of Reason.
func (s *GoldTransactionSchemaCooldown) GetReason() GoldTransactionSchemaCooldownReason {
	return s.Reason
}

// SetTotalSeconds sets the value of TotalSeconds.
func (s *GoldTransactionSchemaCooldown) SetTotalSeconds(val int) {
	s.TotalSeconds = val
}

// SetRemainingSeconds sets the value of RemainingSeconds.
func (s *GoldTransactionSchemaCooldown) SetRemainingSeconds(val int) {
	s.RemainingSeconds = val
}

// SetExpiration sets the value of Expiration.
func (s *GoldTransactionSchemaCooldown) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetReason sets the value of Reason.
func (s *GoldTransactionSchemaCooldown) SetReason(val GoldTransactionSchemaCooldownReason) {
	s.Reason = val
}

// The reason of the cooldown.
type GoldTransactionSchemaCooldownReason string

const (
	GoldTransactionSchemaCooldownReasonMovement     GoldTransactionSchemaCooldownReason = "movement"
	GoldTransactionSchemaCooldownReasonFight        GoldTransactionSchemaCooldownReason = "fight"
	GoldTransactionSchemaCooldownReasonCrafting     GoldTransactionSchemaCooldownReason = "crafting"
	GoldTransactionSchemaCooldownReasonGathering    GoldTransactionSchemaCooldownReason = "gathering"
	GoldTransactionSchemaCooldownReasonBuyGe        GoldTransactionSchemaCooldownReason = "buy_ge"
	GoldTransactionSchemaCooldownReasonSellGe       GoldTransactionSchemaCooldownReason = "sell_ge"
	GoldTransactionSchemaCooldownReasonDeleteItem   GoldTransactionSchemaCooldownReason = "delete_item"
	GoldTransactionSchemaCooldownReasonDepositBank  GoldTransactionSchemaCooldownReason = "deposit_bank"
	GoldTransactionSchemaCooldownReasonWithdrawBank GoldTransactionSchemaCooldownReason = "withdraw_bank"
	GoldTransactionSchemaCooldownReasonEquip        GoldTransactionSchemaCooldownReason = "equip"
	GoldTransactionSchemaCooldownReasonUnequip      GoldTransactionSchemaCooldownReason = "unequip"
	GoldTransactionSchemaCooldownReasonTask         GoldTransactionSchemaCooldownReason = "task"
	GoldTransactionSchemaCooldownReasonRecycling    GoldTransactionSchemaCooldownReason = "recycling"
)

// AllValues returns all GoldTransactionSchemaCooldownReason values.
func (GoldTransactionSchemaCooldownReason) AllValues() []GoldTransactionSchemaCooldownReason {
	return []GoldTransactionSchemaCooldownReason{
		GoldTransactionSchemaCooldownReasonMovement,
		GoldTransactionSchemaCooldownReasonFight,
		GoldTransactionSchemaCooldownReasonCrafting,
		GoldTransactionSchemaCooldownReasonGathering,
		GoldTransactionSchemaCooldownReasonBuyGe,
		GoldTransactionSchemaCooldownReasonSellGe,
		GoldTransactionSchemaCooldownReasonDeleteItem,
		GoldTransactionSchemaCooldownReasonDepositBank,
		GoldTransactionSchemaCooldownReasonWithdrawBank,
		GoldTransactionSchemaCooldownReasonEquip,
		GoldTransactionSchemaCooldownReasonUnequip,
		GoldTransactionSchemaCooldownReasonTask,
		GoldTransactionSchemaCooldownReasonRecycling,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s GoldTransactionSchemaCooldownReason) MarshalText() ([]byte, error) {
	switch s {
	case GoldTransactionSchemaCooldownReasonMovement:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonFight:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonCrafting:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonGathering:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonBuyGe:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonSellGe:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonDeleteItem:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonDepositBank:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonWithdrawBank:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonEquip:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonUnequip:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonTask:
		return []byte(s), nil
	case GoldTransactionSchemaCooldownReasonRecycling:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *GoldTransactionSchemaCooldownReason) UnmarshalText(data []byte) error {
	switch GoldTransactionSchemaCooldownReason(data) {
	case GoldTransactionSchemaCooldownReasonMovement:
		*s = GoldTransactionSchemaCooldownReasonMovement
		return nil
	case GoldTransactionSchemaCooldownReasonFight:
		*s = GoldTransactionSchemaCooldownReasonFight
		return nil
	case GoldTransactionSchemaCooldownReasonCrafting:
		*s = GoldTransactionSchemaCooldownReasonCrafting
		return nil
	case GoldTransactionSchemaCooldownReasonGathering:
		*s = GoldTransactionSchemaCooldownReasonGathering
		return nil
	case GoldTransactionSchemaCooldownReasonBuyGe:
		*s = GoldTransactionSchemaCooldownReasonBuyGe
		return nil
	case GoldTransactionSchemaCooldownReasonSellGe:
		*s = GoldTransactionSchemaCooldownReasonSellGe
		return nil
	case GoldTransactionSchemaCooldownReasonDeleteItem:
		*s = GoldTransactionSchemaCooldownReasonDeleteItem
		return nil
	case GoldTransactionSchemaCooldownReasonDepositBank:
		*s = GoldTransactionSchemaCooldownReasonDepositBank
		return nil
	case GoldTransactionSchemaCooldownReasonWithdrawBank:
		*s = GoldTransactionSchemaCooldownReasonWithdrawBank
		return nil
	case GoldTransactionSchemaCooldownReasonEquip:
		*s = GoldTransactionSchemaCooldownReasonEquip
		return nil
	case GoldTransactionSchemaCooldownReasonUnequip:
		*s = GoldTransactionSchemaCooldownReasonUnequip
		return nil
	case GoldTransactionSchemaCooldownReasonTask:
		*s = GoldTransactionSchemaCooldownReasonTask
		return nil
	case GoldTransactionSchemaCooldownReasonRecycling:
		*s = GoldTransactionSchemaCooldownReasonRecycling
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type HTTPBasic struct {
	Username string
	Password string
}

// GetUsername returns the value of Username.
func (s *HTTPBasic) GetUsername() string {
	return s.Username
}

// GetPassword returns the value of Password.
func (s *HTTPBasic) GetPassword() string {
	return s.Password
}

// SetUsername sets the value of Username.
func (s *HTTPBasic) SetUsername(val string) {
	s.Username = val
}

// SetPassword sets the value of Password.
func (s *HTTPBasic) SetPassword(val string) {
	s.Password = val
}

// Ref: #/components/schemas/InventorySlot
type InventorySlot struct {
	// Inventory slot identifier.
	Slot int `json:"slot"`
	// Item code.
	Code string `json:"code"`
	// Quantity in the slot.
	Quantity int `json:"quantity"`
}

// GetSlot returns the value of Slot.
func (s *InventorySlot) GetSlot() int {
	return s.Slot
}

// GetCode returns the value of Code.
func (s *InventorySlot) GetCode() string {
	return s.Code
}

// GetQuantity returns the value of Quantity.
func (s *InventorySlot) GetQuantity() int {
	return s.Quantity
}

// SetSlot sets the value of Slot.
func (s *InventorySlot) SetSlot(val int) {
	s.Slot = val
}

// SetCode sets the value of Code.
func (s *InventorySlot) SetCode(val string) {
	s.Code = val
}

// SetQuantity sets the value of Quantity.
func (s *InventorySlot) SetQuantity(val int) {
	s.Quantity = val
}

// Ref: #/components/schemas/ItemEffectSchema
type ItemEffectSchema struct {
	// Effect name.
	Name string `json:"name"`
	// Effect value.
	Value int `json:"value"`
}

// GetName returns the value of Name.
func (s *ItemEffectSchema) GetName() string {
	return s.Name
}

// GetValue returns the value of Value.
func (s *ItemEffectSchema) GetValue() int {
	return s.Value
}

// SetName sets the value of Name.
func (s *ItemEffectSchema) SetName(val string) {
	s.Name = val
}

// SetValue sets the value of Value.
func (s *ItemEffectSchema) SetValue(val int) {
	s.Value = val
}

// Ref: #/components/schemas/ItemResponseSchema
type ItemResponseSchema struct {
	Data SingleItemSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *ItemResponseSchema) GetData() SingleItemSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *ItemResponseSchema) SetData(val SingleItemSchema) {
	s.Data = val
}

func (*ItemResponseSchema) getItemItemsCodeGetRes() {}

// Ref: #/components/schemas/ItemSchema
type ItemSchema struct {
	// Item name.
	Name string `json:"name"`
	// Item code. This is the item's unique identifier (ID).
	Code string `json:"code"`
	// Item level.
	Level int `json:"level"`
	// Item type.
	Type string `json:"type"`
	// Item subtype.
	Subtype string `json:"subtype"`
	// Item description.
	Description string `json:"description"`
	// List of object effects. For equipment, it will include item stats.
	Effects []ItemEffectSchema `json:"effects"`
	// Craft information. If applicable.
	Craft OptItemSchemaCraft `json:"craft"`
}

// GetName returns the value of Name.
func (s *ItemSchema) GetName() string {
	return s.Name
}

// GetCode returns the value of Code.
func (s *ItemSchema) GetCode() string {
	return s.Code
}

// GetLevel returns the value of Level.
func (s *ItemSchema) GetLevel() int {
	return s.Level
}

// GetType returns the value of Type.
func (s *ItemSchema) GetType() string {
	return s.Type
}

// GetSubtype returns the value of Subtype.
func (s *ItemSchema) GetSubtype() string {
	return s.Subtype
}

// GetDescription returns the value of Description.
func (s *ItemSchema) GetDescription() string {
	return s.Description
}

// GetEffects returns the value of Effects.
func (s *ItemSchema) GetEffects() []ItemEffectSchema {
	return s.Effects
}

// GetCraft returns the value of Craft.
func (s *ItemSchema) GetCraft() OptItemSchemaCraft {
	return s.Craft
}

// SetName sets the value of Name.
func (s *ItemSchema) SetName(val string) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *ItemSchema) SetCode(val string) {
	s.Code = val
}

// SetLevel sets the value of Level.
func (s *ItemSchema) SetLevel(val int) {
	s.Level = val
}

// SetType sets the value of Type.
func (s *ItemSchema) SetType(val string) {
	s.Type = val
}

// SetSubtype sets the value of Subtype.
func (s *ItemSchema) SetSubtype(val string) {
	s.Subtype = val
}

// SetDescription sets the value of Description.
func (s *ItemSchema) SetDescription(val string) {
	s.Description = val
}

// SetEffects sets the value of Effects.
func (s *ItemSchema) SetEffects(val []ItemEffectSchema) {
	s.Effects = val
}

// SetCraft sets the value of Craft.
func (s *ItemSchema) SetCraft(val OptItemSchemaCraft) {
	s.Craft = val
}

// Craft information. If applicable.
// ItemSchemaCraft represents sum type.
type ItemSchemaCraft struct {
	Type        ItemSchemaCraftType // switch on this field
	CraftSchema CraftSchema
	Null        struct{}
}

// ItemSchemaCraftType is oneOf type of ItemSchemaCraft.
type ItemSchemaCraftType string

// Possible values for ItemSchemaCraftType.
const (
	CraftSchemaItemSchemaCraft ItemSchemaCraftType = "CraftSchema"
	NullItemSchemaCraft        ItemSchemaCraftType = "struct{}"
)

// IsCraftSchema reports whether ItemSchemaCraft is CraftSchema.
func (s ItemSchemaCraft) IsCraftSchema() bool { return s.Type == CraftSchemaItemSchemaCraft }

// IsNull reports whether ItemSchemaCraft is struct{}.
func (s ItemSchemaCraft) IsNull() bool { return s.Type == NullItemSchemaCraft }

// SetCraftSchema sets ItemSchemaCraft to CraftSchema.
func (s *ItemSchemaCraft) SetCraftSchema(v CraftSchema) {
	s.Type = CraftSchemaItemSchemaCraft
	s.CraftSchema = v
}

// GetCraftSchema returns CraftSchema and true boolean if ItemSchemaCraft is CraftSchema.
func (s ItemSchemaCraft) GetCraftSchema() (v CraftSchema, ok bool) {
	if !s.IsCraftSchema() {
		return v, false
	}
	return s.CraftSchema, true
}

// NewCraftSchemaItemSchemaCraft returns new ItemSchemaCraft from CraftSchema.
func NewCraftSchemaItemSchemaCraft(v CraftSchema) ItemSchemaCraft {
	var s ItemSchemaCraft
	s.SetCraftSchema(v)
	return s
}

// SetNull sets ItemSchemaCraft to struct{}.
func (s *ItemSchemaCraft) SetNull(v struct{}) {
	s.Type = NullItemSchemaCraft
	s.Null = v
}

// GetNull returns struct{} and true boolean if ItemSchemaCraft is struct{}.
func (s ItemSchemaCraft) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullItemSchemaCraft returns new ItemSchemaCraft from struct{}.
func NewNullItemSchemaCraft(v struct{}) ItemSchemaCraft {
	var s ItemSchemaCraft
	s.SetNull(v)
	return s
}

type JWTBearer struct {
	Token string
}

// GetToken returns the value of Token.
func (s *JWTBearer) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *JWTBearer) SetToken(val string) {
	s.Token = val
}

// Ref: #/components/schemas/LogSchema
type LogSchema struct {
	// Character name.
	Character string `json:"character"`
	// Account character.
	Account string `json:"account"`
	// Type of action.
	Type string `json:"type"`
	// Description of action.
	Description string `json:"description"`
	// Content of action.
	Content jx.Raw `json:"content"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime of cooldown expiration.
	CooldownExpiration time.Time `json:"cooldown_expiration"`
	// Datetime of creation.
	CreatedAt time.Time `json:"created_at"`
}

// GetCharacter returns the value of Character.
func (s *LogSchema) GetCharacter() string {
	return s.Character
}

// GetAccount returns the value of Account.
func (s *LogSchema) GetAccount() string {
	return s.Account
}

// GetType returns the value of Type.
func (s *LogSchema) GetType() string {
	return s.Type
}

// GetDescription returns the value of Description.
func (s *LogSchema) GetDescription() string {
	return s.Description
}

// GetContent returns the value of Content.
func (s *LogSchema) GetContent() jx.Raw {
	return s.Content
}

// GetCooldown returns the value of Cooldown.
func (s *LogSchema) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *LogSchema) GetCooldownExpiration() time.Time {
	return s.CooldownExpiration
}

// GetCreatedAt returns the value of CreatedAt.
func (s *LogSchema) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// SetCharacter sets the value of Character.
func (s *LogSchema) SetCharacter(val string) {
	s.Character = val
}

// SetAccount sets the value of Account.
func (s *LogSchema) SetAccount(val string) {
	s.Account = val
}

// SetType sets the value of Type.
func (s *LogSchema) SetType(val string) {
	s.Type = val
}

// SetDescription sets the value of Description.
func (s *LogSchema) SetDescription(val string) {
	s.Description = val
}

// SetContent sets the value of Content.
func (s *LogSchema) SetContent(val jx.Raw) {
	s.Content = val
}

// SetCooldown sets the value of Cooldown.
func (s *LogSchema) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *LogSchema) SetCooldownExpiration(val time.Time) {
	s.CooldownExpiration = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *LogSchema) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// Ref: #/components/schemas/MapContentSchema
type MapContentSchema struct {
	// Type of the content.
	Type string `json:"type"`
	// Code of the content.
	Code string `json:"code"`
}

// GetType returns the value of Type.
func (s *MapContentSchema) GetType() string {
	return s.Type
}

// GetCode returns the value of Code.
func (s *MapContentSchema) GetCode() string {
	return s.Code
}

// SetType sets the value of Type.
func (s *MapContentSchema) SetType(val string) {
	s.Type = val
}

// SetCode sets the value of Code.
func (s *MapContentSchema) SetCode(val string) {
	s.Code = val
}

// Ref: #/components/schemas/MapResponseSchema
type MapResponseSchema struct {
	Data MapSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *MapResponseSchema) GetData() MapSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *MapResponseSchema) SetData(val MapSchema) {
	s.Data = val
}

func (*MapResponseSchema) getMapMapsXYGetRes() {}

// Ref: #/components/schemas/MapSchema
type MapSchema struct {
	// Name of the map.
	Name string `json:"name"`
	// Skin of the map.
	Skin string `json:"skin"`
	// Position X of the map.
	X int `json:"x"`
	// Position Y of the map.
	Y int `json:"y"`
	// Content of the map.
	Content MapSchemaContent `json:"content"`
}

// GetName returns the value of Name.
func (s *MapSchema) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *MapSchema) GetSkin() string {
	return s.Skin
}

// GetX returns the value of X.
func (s *MapSchema) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *MapSchema) GetY() int {
	return s.Y
}

// GetContent returns the value of Content.
func (s *MapSchema) GetContent() MapSchemaContent {
	return s.Content
}

// SetName sets the value of Name.
func (s *MapSchema) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *MapSchema) SetSkin(val string) {
	s.Skin = val
}

// SetX sets the value of X.
func (s *MapSchema) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *MapSchema) SetY(val int) {
	s.Y = val
}

// SetContent sets the value of Content.
func (s *MapSchema) SetContent(val MapSchemaContent) {
	s.Content = val
}

// Content of the map.
// MapSchemaContent represents sum type.
type MapSchemaContent struct {
	Type             MapSchemaContentType // switch on this field
	MapContentSchema MapContentSchema
	Null             struct{}
}

// MapSchemaContentType is oneOf type of MapSchemaContent.
type MapSchemaContentType string

// Possible values for MapSchemaContentType.
const (
	MapContentSchemaMapSchemaContent MapSchemaContentType = "MapContentSchema"
	NullMapSchemaContent             MapSchemaContentType = "struct{}"
)

// IsMapContentSchema reports whether MapSchemaContent is MapContentSchema.
func (s MapSchemaContent) IsMapContentSchema() bool {
	return s.Type == MapContentSchemaMapSchemaContent
}

// IsNull reports whether MapSchemaContent is struct{}.
func (s MapSchemaContent) IsNull() bool { return s.Type == NullMapSchemaContent }

// SetMapContentSchema sets MapSchemaContent to MapContentSchema.
func (s *MapSchemaContent) SetMapContentSchema(v MapContentSchema) {
	s.Type = MapContentSchemaMapSchemaContent
	s.MapContentSchema = v
}

// GetMapContentSchema returns MapContentSchema and true boolean if MapSchemaContent is MapContentSchema.
func (s MapSchemaContent) GetMapContentSchema() (v MapContentSchema, ok bool) {
	if !s.IsMapContentSchema() {
		return v, false
	}
	return s.MapContentSchema, true
}

// NewMapContentSchemaMapSchemaContent returns new MapSchemaContent from MapContentSchema.
func NewMapContentSchemaMapSchemaContent(v MapContentSchema) MapSchemaContent {
	var s MapSchemaContent
	s.SetMapContentSchema(v)
	return s
}

// SetNull sets MapSchemaContent to struct{}.
func (s *MapSchemaContent) SetNull(v struct{}) {
	s.Type = NullMapSchemaContent
	s.Null = v
}

// GetNull returns struct{} and true boolean if MapSchemaContent is struct{}.
func (s MapSchemaContent) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullMapSchemaContent returns new MapSchemaContent from struct{}.
func NewNullMapSchemaContent(v struct{}) MapSchemaContent {
	var s MapSchemaContent
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/MonsterResponseSchema
type MonsterResponseSchema struct {
	Data MonsterSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *MonsterResponseSchema) GetData() MonsterSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *MonsterResponseSchema) SetData(val MonsterSchema) {
	s.Data = val
}

func (*MonsterResponseSchema) getMonsterMonstersCodeGetRes() {}

// Ref: #/components/schemas/MonsterSchema
type MonsterSchema struct {
	// Name of the monster.
	Name string `json:"name"`
	// The code of the monster. This is the monster's unique identifier (ID).
	Code string `json:"code"`
	// Monster level.
	Level int `json:"level"`
	// Monster hit points.
	Hp int `json:"hp"`
	// Monster fire attack.
	AttackFire int `json:"attack_fire"`
	// Monster earth attack.
	AttackEarth int `json:"attack_earth"`
	// Monster water attack.
	AttackWater int `json:"attack_water"`
	// Monster air attack.
	AttackAir int `json:"attack_air"`
	// Monster % fire resistance.
	ResFire int `json:"res_fire"`
	// Monster % earth resistance.
	ResEarth int `json:"res_earth"`
	// Monster % water resistance.
	ResWater int `json:"res_water"`
	// Monster % air resistance.
	ResAir int `json:"res_air"`
	// Monster minimum gold drop.
	MinGold int `json:"min_gold"`
	// Monster maximum gold drop.
	MaxGold int `json:"max_gold"`
	// Monster drops. This is a list of items that the monster drops after killing the monster.
	Drops []DropRateSchema `json:"drops"`
}

// GetName returns the value of Name.
func (s *MonsterSchema) GetName() string {
	return s.Name
}

// GetCode returns the value of Code.
func (s *MonsterSchema) GetCode() string {
	return s.Code
}

// GetLevel returns the value of Level.
func (s *MonsterSchema) GetLevel() int {
	return s.Level
}

// GetHp returns the value of Hp.
func (s *MonsterSchema) GetHp() int {
	return s.Hp
}

// GetAttackFire returns the value of AttackFire.
func (s *MonsterSchema) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *MonsterSchema) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *MonsterSchema) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *MonsterSchema) GetAttackAir() int {
	return s.AttackAir
}

// GetResFire returns the value of ResFire.
func (s *MonsterSchema) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *MonsterSchema) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *MonsterSchema) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *MonsterSchema) GetResAir() int {
	return s.ResAir
}

// GetMinGold returns the value of MinGold.
func (s *MonsterSchema) GetMinGold() int {
	return s.MinGold
}

// GetMaxGold returns the value of MaxGold.
func (s *MonsterSchema) GetMaxGold() int {
	return s.MaxGold
}

// GetDrops returns the value of Drops.
func (s *MonsterSchema) GetDrops() []DropRateSchema {
	return s.Drops
}

// SetName sets the value of Name.
func (s *MonsterSchema) SetName(val string) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *MonsterSchema) SetCode(val string) {
	s.Code = val
}

// SetLevel sets the value of Level.
func (s *MonsterSchema) SetLevel(val int) {
	s.Level = val
}

// SetHp sets the value of Hp.
func (s *MonsterSchema) SetHp(val int) {
	s.Hp = val
}

// SetAttackFire sets the value of AttackFire.
func (s *MonsterSchema) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *MonsterSchema) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *MonsterSchema) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *MonsterSchema) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetResFire sets the value of ResFire.
func (s *MonsterSchema) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *MonsterSchema) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *MonsterSchema) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *MonsterSchema) SetResAir(val int) {
	s.ResAir = val
}

// SetMinGold sets the value of MinGold.
func (s *MonsterSchema) SetMinGold(val int) {
	s.MinGold = val
}

// SetMaxGold sets the value of MaxGold.
func (s *MonsterSchema) SetMaxGold(val int) {
	s.MaxGold = val
}

// SetDrops sets the value of Drops.
func (s *MonsterSchema) SetDrops(val []DropRateSchema) {
	s.Drops = val
}

// Ref: #/components/schemas/MyCharactersListSchema
type MyCharactersListSchema struct {
	// List of your characters.
	Data []CharacterSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *MyCharactersListSchema) GetData() []CharacterSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *MyCharactersListSchema) SetData(val []CharacterSchema) {
	s.Data = val
}

func (*MyCharactersListSchema) getMyCharactersMyCharactersGetRes() {}

// NewOptBankItemSchemaCharacterCooldownExpiration returns new OptBankItemSchemaCharacterCooldownExpiration with value set to v.
func NewOptBankItemSchemaCharacterCooldownExpiration(v BankItemSchemaCharacterCooldownExpiration) OptBankItemSchemaCharacterCooldownExpiration {
	return OptBankItemSchemaCharacterCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptBankItemSchemaCharacterCooldownExpiration is optional BankItemSchemaCharacterCooldownExpiration.
type OptBankItemSchemaCharacterCooldownExpiration struct {
	Value BankItemSchemaCharacterCooldownExpiration
	Set   bool
}

// IsSet returns true if OptBankItemSchemaCharacterCooldownExpiration was set.
func (o OptBankItemSchemaCharacterCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBankItemSchemaCharacterCooldownExpiration) Reset() {
	var v BankItemSchemaCharacterCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBankItemSchemaCharacterCooldownExpiration) SetTo(v BankItemSchemaCharacterCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBankItemSchemaCharacterCooldownExpiration) Get() (v BankItemSchemaCharacterCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBankItemSchemaCharacterCooldownExpiration) Or(d BankItemSchemaCharacterCooldownExpiration) BankItemSchemaCharacterCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBankItemSchemaItemCraft returns new OptBankItemSchemaItemCraft with value set to v.
func NewOptBankItemSchemaItemCraft(v BankItemSchemaItemCraft) OptBankItemSchemaItemCraft {
	return OptBankItemSchemaItemCraft{
		Value: v,
		Set:   true,
	}
}

// OptBankItemSchemaItemCraft is optional BankItemSchemaItemCraft.
type OptBankItemSchemaItemCraft struct {
	Value BankItemSchemaItemCraft
	Set   bool
}

// IsSet returns true if OptBankItemSchemaItemCraft was set.
func (o OptBankItemSchemaItemCraft) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBankItemSchemaItemCraft) Reset() {
	var v BankItemSchemaItemCraft
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBankItemSchemaItemCraft) SetTo(v BankItemSchemaItemCraft) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBankItemSchemaItemCraft) Get() (v BankItemSchemaItemCraft, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBankItemSchemaItemCraft) Or(d BankItemSchemaItemCraft) BankItemSchemaItemCraft {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCharacterFightDataSchemaCharacterCooldownExpiration returns new OptCharacterFightDataSchemaCharacterCooldownExpiration with value set to v.
func NewOptCharacterFightDataSchemaCharacterCooldownExpiration(v CharacterFightDataSchemaCharacterCooldownExpiration) OptCharacterFightDataSchemaCharacterCooldownExpiration {
	return OptCharacterFightDataSchemaCharacterCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptCharacterFightDataSchemaCharacterCooldownExpiration is optional CharacterFightDataSchemaCharacterCooldownExpiration.
type OptCharacterFightDataSchemaCharacterCooldownExpiration struct {
	Value CharacterFightDataSchemaCharacterCooldownExpiration
	Set   bool
}

// IsSet returns true if OptCharacterFightDataSchemaCharacterCooldownExpiration was set.
func (o OptCharacterFightDataSchemaCharacterCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCharacterFightDataSchemaCharacterCooldownExpiration) Reset() {
	var v CharacterFightDataSchemaCharacterCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCharacterFightDataSchemaCharacterCooldownExpiration) SetTo(v CharacterFightDataSchemaCharacterCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCharacterFightDataSchemaCharacterCooldownExpiration) Get() (v CharacterFightDataSchemaCharacterCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCharacterFightDataSchemaCharacterCooldownExpiration) Or(d CharacterFightDataSchemaCharacterCooldownExpiration) CharacterFightDataSchemaCharacterCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCharacterMovementDataSchemaCharacterCooldownExpiration returns new OptCharacterMovementDataSchemaCharacterCooldownExpiration with value set to v.
func NewOptCharacterMovementDataSchemaCharacterCooldownExpiration(v CharacterMovementDataSchemaCharacterCooldownExpiration) OptCharacterMovementDataSchemaCharacterCooldownExpiration {
	return OptCharacterMovementDataSchemaCharacterCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptCharacterMovementDataSchemaCharacterCooldownExpiration is optional CharacterMovementDataSchemaCharacterCooldownExpiration.
type OptCharacterMovementDataSchemaCharacterCooldownExpiration struct {
	Value CharacterMovementDataSchemaCharacterCooldownExpiration
	Set   bool
}

// IsSet returns true if OptCharacterMovementDataSchemaCharacterCooldownExpiration was set.
func (o OptCharacterMovementDataSchemaCharacterCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCharacterMovementDataSchemaCharacterCooldownExpiration) Reset() {
	var v CharacterMovementDataSchemaCharacterCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCharacterMovementDataSchemaCharacterCooldownExpiration) SetTo(v CharacterMovementDataSchemaCharacterCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCharacterMovementDataSchemaCharacterCooldownExpiration) Get() (v CharacterMovementDataSchemaCharacterCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCharacterMovementDataSchemaCharacterCooldownExpiration) Or(d CharacterMovementDataSchemaCharacterCooldownExpiration) CharacterMovementDataSchemaCharacterCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCharacterSchemaCooldownExpiration returns new OptCharacterSchemaCooldownExpiration with value set to v.
func NewOptCharacterSchemaCooldownExpiration(v CharacterSchemaCooldownExpiration) OptCharacterSchemaCooldownExpiration {
	return OptCharacterSchemaCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptCharacterSchemaCooldownExpiration is optional CharacterSchemaCooldownExpiration.
type OptCharacterSchemaCooldownExpiration struct {
	Value CharacterSchemaCooldownExpiration
	Set   bool
}

// IsSet returns true if OptCharacterSchemaCooldownExpiration was set.
func (o OptCharacterSchemaCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCharacterSchemaCooldownExpiration) Reset() {
	var v CharacterSchemaCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCharacterSchemaCooldownExpiration) SetTo(v CharacterSchemaCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCharacterSchemaCooldownExpiration) Get() (v CharacterSchemaCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCharacterSchemaCooldownExpiration) Or(d CharacterSchemaCooldownExpiration) CharacterSchemaCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCraftSchemaLevel returns new OptCraftSchemaLevel with value set to v.
func NewOptCraftSchemaLevel(v CraftSchemaLevel) OptCraftSchemaLevel {
	return OptCraftSchemaLevel{
		Value: v,
		Set:   true,
	}
}

// OptCraftSchemaLevel is optional CraftSchemaLevel.
type OptCraftSchemaLevel struct {
	Value CraftSchemaLevel
	Set   bool
}

// IsSet returns true if OptCraftSchemaLevel was set.
func (o OptCraftSchemaLevel) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCraftSchemaLevel) Reset() {
	var v CraftSchemaLevel
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCraftSchemaLevel) SetTo(v CraftSchemaLevel) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCraftSchemaLevel) Get() (v CraftSchemaLevel, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCraftSchemaLevel) Or(d CraftSchemaLevel) CraftSchemaLevel {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCraftSchemaQuantity returns new OptCraftSchemaQuantity with value set to v.
func NewOptCraftSchemaQuantity(v CraftSchemaQuantity) OptCraftSchemaQuantity {
	return OptCraftSchemaQuantity{
		Value: v,
		Set:   true,
	}
}

// OptCraftSchemaQuantity is optional CraftSchemaQuantity.
type OptCraftSchemaQuantity struct {
	Value CraftSchemaQuantity
	Set   bool
}

// IsSet returns true if OptCraftSchemaQuantity was set.
func (o OptCraftSchemaQuantity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCraftSchemaQuantity) Reset() {
	var v CraftSchemaQuantity
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCraftSchemaQuantity) SetTo(v CraftSchemaQuantity) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCraftSchemaQuantity) Get() (v CraftSchemaQuantity, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCraftSchemaQuantity) Or(d CraftSchemaQuantity) CraftSchemaQuantity {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptCraftSchemaSkill returns new OptCraftSchemaSkill with value set to v.
func NewOptCraftSchemaSkill(v CraftSchemaSkill) OptCraftSchemaSkill {
	return OptCraftSchemaSkill{
		Value: v,
		Set:   true,
	}
}

// OptCraftSchemaSkill is optional CraftSchemaSkill.
type OptCraftSchemaSkill struct {
	Value CraftSchemaSkill
	Set   bool
}

// IsSet returns true if OptCraftSchemaSkill was set.
func (o OptCraftSchemaSkill) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptCraftSchemaSkill) Reset() {
	var v CraftSchemaSkill
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptCraftSchemaSkill) SetTo(v CraftSchemaSkill) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptCraftSchemaSkill) Get() (v CraftSchemaSkill, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptCraftSchemaSkill) Or(d CraftSchemaSkill) CraftSchemaSkill {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDataPageCharacterSchemaPages returns new OptDataPageCharacterSchemaPages with value set to v.
func NewOptDataPageCharacterSchemaPages(v DataPageCharacterSchemaPages) OptDataPageCharacterSchemaPages {
	return OptDataPageCharacterSchemaPages{
		Value: v,
		Set:   true,
	}
}

// OptDataPageCharacterSchemaPages is optional DataPageCharacterSchemaPages.
type OptDataPageCharacterSchemaPages struct {
	Value DataPageCharacterSchemaPages
	Set   bool
}

// IsSet returns true if OptDataPageCharacterSchemaPages was set.
func (o OptDataPageCharacterSchemaPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDataPageCharacterSchemaPages) Reset() {
	var v DataPageCharacterSchemaPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDataPageCharacterSchemaPages) SetTo(v DataPageCharacterSchemaPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDataPageCharacterSchemaPages) Get() (v DataPageCharacterSchemaPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDataPageCharacterSchemaPages) Or(d DataPageCharacterSchemaPages) DataPageCharacterSchemaPages {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDataPageEventSchemaPages returns new OptDataPageEventSchemaPages with value set to v.
func NewOptDataPageEventSchemaPages(v DataPageEventSchemaPages) OptDataPageEventSchemaPages {
	return OptDataPageEventSchemaPages{
		Value: v,
		Set:   true,
	}
}

// OptDataPageEventSchemaPages is optional DataPageEventSchemaPages.
type OptDataPageEventSchemaPages struct {
	Value DataPageEventSchemaPages
	Set   bool
}

// IsSet returns true if OptDataPageEventSchemaPages was set.
func (o OptDataPageEventSchemaPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDataPageEventSchemaPages) Reset() {
	var v DataPageEventSchemaPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDataPageEventSchemaPages) SetTo(v DataPageEventSchemaPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDataPageEventSchemaPages) Get() (v DataPageEventSchemaPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDataPageEventSchemaPages) Or(d DataPageEventSchemaPages) DataPageEventSchemaPages {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDataPageGEItemSchemaPages returns new OptDataPageGEItemSchemaPages with value set to v.
func NewOptDataPageGEItemSchemaPages(v DataPageGEItemSchemaPages) OptDataPageGEItemSchemaPages {
	return OptDataPageGEItemSchemaPages{
		Value: v,
		Set:   true,
	}
}

// OptDataPageGEItemSchemaPages is optional DataPageGEItemSchemaPages.
type OptDataPageGEItemSchemaPages struct {
	Value DataPageGEItemSchemaPages
	Set   bool
}

// IsSet returns true if OptDataPageGEItemSchemaPages was set.
func (o OptDataPageGEItemSchemaPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDataPageGEItemSchemaPages) Reset() {
	var v DataPageGEItemSchemaPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDataPageGEItemSchemaPages) SetTo(v DataPageGEItemSchemaPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDataPageGEItemSchemaPages) Get() (v DataPageGEItemSchemaPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDataPageGEItemSchemaPages) Or(d DataPageGEItemSchemaPages) DataPageGEItemSchemaPages {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDataPageItemSchemaPages returns new OptDataPageItemSchemaPages with value set to v.
func NewOptDataPageItemSchemaPages(v DataPageItemSchemaPages) OptDataPageItemSchemaPages {
	return OptDataPageItemSchemaPages{
		Value: v,
		Set:   true,
	}
}

// OptDataPageItemSchemaPages is optional DataPageItemSchemaPages.
type OptDataPageItemSchemaPages struct {
	Value DataPageItemSchemaPages
	Set   bool
}

// IsSet returns true if OptDataPageItemSchemaPages was set.
func (o OptDataPageItemSchemaPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDataPageItemSchemaPages) Reset() {
	var v DataPageItemSchemaPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDataPageItemSchemaPages) SetTo(v DataPageItemSchemaPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDataPageItemSchemaPages) Get() (v DataPageItemSchemaPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDataPageItemSchemaPages) Or(d DataPageItemSchemaPages) DataPageItemSchemaPages {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDataPageLogSchemaPages returns new OptDataPageLogSchemaPages with value set to v.
func NewOptDataPageLogSchemaPages(v DataPageLogSchemaPages) OptDataPageLogSchemaPages {
	return OptDataPageLogSchemaPages{
		Value: v,
		Set:   true,
	}
}

// OptDataPageLogSchemaPages is optional DataPageLogSchemaPages.
type OptDataPageLogSchemaPages struct {
	Value DataPageLogSchemaPages
	Set   bool
}

// IsSet returns true if OptDataPageLogSchemaPages was set.
func (o OptDataPageLogSchemaPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDataPageLogSchemaPages) Reset() {
	var v DataPageLogSchemaPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDataPageLogSchemaPages) SetTo(v DataPageLogSchemaPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDataPageLogSchemaPages) Get() (v DataPageLogSchemaPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDataPageLogSchemaPages) Or(d DataPageLogSchemaPages) DataPageLogSchemaPages {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDataPageMapSchemaPages returns new OptDataPageMapSchemaPages with value set to v.
func NewOptDataPageMapSchemaPages(v DataPageMapSchemaPages) OptDataPageMapSchemaPages {
	return OptDataPageMapSchemaPages{
		Value: v,
		Set:   true,
	}
}

// OptDataPageMapSchemaPages is optional DataPageMapSchemaPages.
type OptDataPageMapSchemaPages struct {
	Value DataPageMapSchemaPages
	Set   bool
}

// IsSet returns true if OptDataPageMapSchemaPages was set.
func (o OptDataPageMapSchemaPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDataPageMapSchemaPages) Reset() {
	var v DataPageMapSchemaPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDataPageMapSchemaPages) SetTo(v DataPageMapSchemaPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDataPageMapSchemaPages) Get() (v DataPageMapSchemaPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDataPageMapSchemaPages) Or(d DataPageMapSchemaPages) DataPageMapSchemaPages {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDataPageMonsterSchemaPages returns new OptDataPageMonsterSchemaPages with value set to v.
func NewOptDataPageMonsterSchemaPages(v DataPageMonsterSchemaPages) OptDataPageMonsterSchemaPages {
	return OptDataPageMonsterSchemaPages{
		Value: v,
		Set:   true,
	}
}

// OptDataPageMonsterSchemaPages is optional DataPageMonsterSchemaPages.
type OptDataPageMonsterSchemaPages struct {
	Value DataPageMonsterSchemaPages
	Set   bool
}

// IsSet returns true if OptDataPageMonsterSchemaPages was set.
func (o OptDataPageMonsterSchemaPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDataPageMonsterSchemaPages) Reset() {
	var v DataPageMonsterSchemaPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDataPageMonsterSchemaPages) SetTo(v DataPageMonsterSchemaPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDataPageMonsterSchemaPages) Get() (v DataPageMonsterSchemaPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDataPageMonsterSchemaPages) Or(d DataPageMonsterSchemaPages) DataPageMonsterSchemaPages {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDataPageResourceSchemaPages returns new OptDataPageResourceSchemaPages with value set to v.
func NewOptDataPageResourceSchemaPages(v DataPageResourceSchemaPages) OptDataPageResourceSchemaPages {
	return OptDataPageResourceSchemaPages{
		Value: v,
		Set:   true,
	}
}

// OptDataPageResourceSchemaPages is optional DataPageResourceSchemaPages.
type OptDataPageResourceSchemaPages struct {
	Value DataPageResourceSchemaPages
	Set   bool
}

// IsSet returns true if OptDataPageResourceSchemaPages was set.
func (o OptDataPageResourceSchemaPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDataPageResourceSchemaPages) Reset() {
	var v DataPageResourceSchemaPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDataPageResourceSchemaPages) SetTo(v DataPageResourceSchemaPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDataPageResourceSchemaPages) Get() (v DataPageResourceSchemaPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDataPageResourceSchemaPages) Or(d DataPageResourceSchemaPages) DataPageResourceSchemaPages {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDataPageSimpleItemSchemaPages returns new OptDataPageSimpleItemSchemaPages with value set to v.
func NewOptDataPageSimpleItemSchemaPages(v DataPageSimpleItemSchemaPages) OptDataPageSimpleItemSchemaPages {
	return OptDataPageSimpleItemSchemaPages{
		Value: v,
		Set:   true,
	}
}

// OptDataPageSimpleItemSchemaPages is optional DataPageSimpleItemSchemaPages.
type OptDataPageSimpleItemSchemaPages struct {
	Value DataPageSimpleItemSchemaPages
	Set   bool
}

// IsSet returns true if OptDataPageSimpleItemSchemaPages was set.
func (o OptDataPageSimpleItemSchemaPages) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDataPageSimpleItemSchemaPages) Reset() {
	var v DataPageSimpleItemSchemaPages
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDataPageSimpleItemSchemaPages) SetTo(v DataPageSimpleItemSchemaPages) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDataPageSimpleItemSchemaPages) Get() (v DataPageSimpleItemSchemaPages, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDataPageSimpleItemSchemaPages) Or(d DataPageSimpleItemSchemaPages) DataPageSimpleItemSchemaPages {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDeleteItemSchemaCharacterCooldownExpiration returns new OptDeleteItemSchemaCharacterCooldownExpiration with value set to v.
func NewOptDeleteItemSchemaCharacterCooldownExpiration(v DeleteItemSchemaCharacterCooldownExpiration) OptDeleteItemSchemaCharacterCooldownExpiration {
	return OptDeleteItemSchemaCharacterCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptDeleteItemSchemaCharacterCooldownExpiration is optional DeleteItemSchemaCharacterCooldownExpiration.
type OptDeleteItemSchemaCharacterCooldownExpiration struct {
	Value DeleteItemSchemaCharacterCooldownExpiration
	Set   bool
}

// IsSet returns true if OptDeleteItemSchemaCharacterCooldownExpiration was set.
func (o OptDeleteItemSchemaCharacterCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDeleteItemSchemaCharacterCooldownExpiration) Reset() {
	var v DeleteItemSchemaCharacterCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDeleteItemSchemaCharacterCooldownExpiration) SetTo(v DeleteItemSchemaCharacterCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDeleteItemSchemaCharacterCooldownExpiration) Get() (v DeleteItemSchemaCharacterCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDeleteItemSchemaCharacterCooldownExpiration) Or(d DeleteItemSchemaCharacterCooldownExpiration) DeleteItemSchemaCharacterCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEquipRequestSchemaCharacterCooldownExpiration returns new OptEquipRequestSchemaCharacterCooldownExpiration with value set to v.
func NewOptEquipRequestSchemaCharacterCooldownExpiration(v EquipRequestSchemaCharacterCooldownExpiration) OptEquipRequestSchemaCharacterCooldownExpiration {
	return OptEquipRequestSchemaCharacterCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptEquipRequestSchemaCharacterCooldownExpiration is optional EquipRequestSchemaCharacterCooldownExpiration.
type OptEquipRequestSchemaCharacterCooldownExpiration struct {
	Value EquipRequestSchemaCharacterCooldownExpiration
	Set   bool
}

// IsSet returns true if OptEquipRequestSchemaCharacterCooldownExpiration was set.
func (o OptEquipRequestSchemaCharacterCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEquipRequestSchemaCharacterCooldownExpiration) Reset() {
	var v EquipRequestSchemaCharacterCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEquipRequestSchemaCharacterCooldownExpiration) SetTo(v EquipRequestSchemaCharacterCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEquipRequestSchemaCharacterCooldownExpiration) Get() (v EquipRequestSchemaCharacterCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEquipRequestSchemaCharacterCooldownExpiration) Or(d EquipRequestSchemaCharacterCooldownExpiration) EquipRequestSchemaCharacterCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptEquipRequestSchemaItemCraft returns new OptEquipRequestSchemaItemCraft with value set to v.
func NewOptEquipRequestSchemaItemCraft(v EquipRequestSchemaItemCraft) OptEquipRequestSchemaItemCraft {
	return OptEquipRequestSchemaItemCraft{
		Value: v,
		Set:   true,
	}
}

// OptEquipRequestSchemaItemCraft is optional EquipRequestSchemaItemCraft.
type OptEquipRequestSchemaItemCraft struct {
	Value EquipRequestSchemaItemCraft
	Set   bool
}

// IsSet returns true if OptEquipRequestSchemaItemCraft was set.
func (o OptEquipRequestSchemaItemCraft) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptEquipRequestSchemaItemCraft) Reset() {
	var v EquipRequestSchemaItemCraft
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptEquipRequestSchemaItemCraft) SetTo(v EquipRequestSchemaItemCraft) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptEquipRequestSchemaItemCraft) Get() (v EquipRequestSchemaItemCraft, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptEquipRequestSchemaItemCraft) Or(d EquipRequestSchemaItemCraft) EquipRequestSchemaItemCraft {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGETransactionListSchemaCharacterCooldownExpiration returns new OptGETransactionListSchemaCharacterCooldownExpiration with value set to v.
func NewOptGETransactionListSchemaCharacterCooldownExpiration(v GETransactionListSchemaCharacterCooldownExpiration) OptGETransactionListSchemaCharacterCooldownExpiration {
	return OptGETransactionListSchemaCharacterCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptGETransactionListSchemaCharacterCooldownExpiration is optional GETransactionListSchemaCharacterCooldownExpiration.
type OptGETransactionListSchemaCharacterCooldownExpiration struct {
	Value GETransactionListSchemaCharacterCooldownExpiration
	Set   bool
}

// IsSet returns true if OptGETransactionListSchemaCharacterCooldownExpiration was set.
func (o OptGETransactionListSchemaCharacterCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGETransactionListSchemaCharacterCooldownExpiration) Reset() {
	var v GETransactionListSchemaCharacterCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGETransactionListSchemaCharacterCooldownExpiration) SetTo(v GETransactionListSchemaCharacterCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGETransactionListSchemaCharacterCooldownExpiration) Get() (v GETransactionListSchemaCharacterCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGETransactionListSchemaCharacterCooldownExpiration) Or(d GETransactionListSchemaCharacterCooldownExpiration) GETransactionListSchemaCharacterCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAllCharactersCharactersGetSort returns new OptGetAllCharactersCharactersGetSort with value set to v.
func NewOptGetAllCharactersCharactersGetSort(v GetAllCharactersCharactersGetSort) OptGetAllCharactersCharactersGetSort {
	return OptGetAllCharactersCharactersGetSort{
		Value: v,
		Set:   true,
	}
}

// OptGetAllCharactersCharactersGetSort is optional GetAllCharactersCharactersGetSort.
type OptGetAllCharactersCharactersGetSort struct {
	Value GetAllCharactersCharactersGetSort
	Set   bool
}

// IsSet returns true if OptGetAllCharactersCharactersGetSort was set.
func (o OptGetAllCharactersCharactersGetSort) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAllCharactersCharactersGetSort) Reset() {
	var v GetAllCharactersCharactersGetSort
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAllCharactersCharactersGetSort) SetTo(v GetAllCharactersCharactersGetSort) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAllCharactersCharactersGetSort) Get() (v GetAllCharactersCharactersGetSort, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAllCharactersCharactersGetSort) Or(d GetAllCharactersCharactersGetSort) GetAllCharactersCharactersGetSort {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAllItemsItemsGetCraftSkill returns new OptGetAllItemsItemsGetCraftSkill with value set to v.
func NewOptGetAllItemsItemsGetCraftSkill(v GetAllItemsItemsGetCraftSkill) OptGetAllItemsItemsGetCraftSkill {
	return OptGetAllItemsItemsGetCraftSkill{
		Value: v,
		Set:   true,
	}
}

// OptGetAllItemsItemsGetCraftSkill is optional GetAllItemsItemsGetCraftSkill.
type OptGetAllItemsItemsGetCraftSkill struct {
	Value GetAllItemsItemsGetCraftSkill
	Set   bool
}

// IsSet returns true if OptGetAllItemsItemsGetCraftSkill was set.
func (o OptGetAllItemsItemsGetCraftSkill) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAllItemsItemsGetCraftSkill) Reset() {
	var v GetAllItemsItemsGetCraftSkill
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAllItemsItemsGetCraftSkill) SetTo(v GetAllItemsItemsGetCraftSkill) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAllItemsItemsGetCraftSkill) Get() (v GetAllItemsItemsGetCraftSkill, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAllItemsItemsGetCraftSkill) Or(d GetAllItemsItemsGetCraftSkill) GetAllItemsItemsGetCraftSkill {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAllItemsItemsGetType returns new OptGetAllItemsItemsGetType with value set to v.
func NewOptGetAllItemsItemsGetType(v GetAllItemsItemsGetType) OptGetAllItemsItemsGetType {
	return OptGetAllItemsItemsGetType{
		Value: v,
		Set:   true,
	}
}

// OptGetAllItemsItemsGetType is optional GetAllItemsItemsGetType.
type OptGetAllItemsItemsGetType struct {
	Value GetAllItemsItemsGetType
	Set   bool
}

// IsSet returns true if OptGetAllItemsItemsGetType was set.
func (o OptGetAllItemsItemsGetType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAllItemsItemsGetType) Reset() {
	var v GetAllItemsItemsGetType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAllItemsItemsGetType) SetTo(v GetAllItemsItemsGetType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAllItemsItemsGetType) Get() (v GetAllItemsItemsGetType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAllItemsItemsGetType) Or(d GetAllItemsItemsGetType) GetAllItemsItemsGetType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAllMapsMapsGetContentType returns new OptGetAllMapsMapsGetContentType with value set to v.
func NewOptGetAllMapsMapsGetContentType(v GetAllMapsMapsGetContentType) OptGetAllMapsMapsGetContentType {
	return OptGetAllMapsMapsGetContentType{
		Value: v,
		Set:   true,
	}
}

// OptGetAllMapsMapsGetContentType is optional GetAllMapsMapsGetContentType.
type OptGetAllMapsMapsGetContentType struct {
	Value GetAllMapsMapsGetContentType
	Set   bool
}

// IsSet returns true if OptGetAllMapsMapsGetContentType was set.
func (o OptGetAllMapsMapsGetContentType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAllMapsMapsGetContentType) Reset() {
	var v GetAllMapsMapsGetContentType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAllMapsMapsGetContentType) SetTo(v GetAllMapsMapsGetContentType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAllMapsMapsGetContentType) Get() (v GetAllMapsMapsGetContentType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAllMapsMapsGetContentType) Or(d GetAllMapsMapsGetContentType) GetAllMapsMapsGetContentType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGetAllResourcesResourcesGetSkill returns new OptGetAllResourcesResourcesGetSkill with value set to v.
func NewOptGetAllResourcesResourcesGetSkill(v GetAllResourcesResourcesGetSkill) OptGetAllResourcesResourcesGetSkill {
	return OptGetAllResourcesResourcesGetSkill{
		Value: v,
		Set:   true,
	}
}

// OptGetAllResourcesResourcesGetSkill is optional GetAllResourcesResourcesGetSkill.
type OptGetAllResourcesResourcesGetSkill struct {
	Value GetAllResourcesResourcesGetSkill
	Set   bool
}

// IsSet returns true if OptGetAllResourcesResourcesGetSkill was set.
func (o OptGetAllResourcesResourcesGetSkill) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGetAllResourcesResourcesGetSkill) Reset() {
	var v GetAllResourcesResourcesGetSkill
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGetAllResourcesResourcesGetSkill) SetTo(v GetAllResourcesResourcesGetSkill) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGetAllResourcesResourcesGetSkill) Get() (v GetAllResourcesResourcesGetSkill, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGetAllResourcesResourcesGetSkill) Or(d GetAllResourcesResourcesGetSkill) GetAllResourcesResourcesGetSkill {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptGoldTransactionSchemaCharacterCooldownExpiration returns new OptGoldTransactionSchemaCharacterCooldownExpiration with value set to v.
func NewOptGoldTransactionSchemaCharacterCooldownExpiration(v GoldTransactionSchemaCharacterCooldownExpiration) OptGoldTransactionSchemaCharacterCooldownExpiration {
	return OptGoldTransactionSchemaCharacterCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptGoldTransactionSchemaCharacterCooldownExpiration is optional GoldTransactionSchemaCharacterCooldownExpiration.
type OptGoldTransactionSchemaCharacterCooldownExpiration struct {
	Value GoldTransactionSchemaCharacterCooldownExpiration
	Set   bool
}

// IsSet returns true if OptGoldTransactionSchemaCharacterCooldownExpiration was set.
func (o OptGoldTransactionSchemaCharacterCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptGoldTransactionSchemaCharacterCooldownExpiration) Reset() {
	var v GoldTransactionSchemaCharacterCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptGoldTransactionSchemaCharacterCooldownExpiration) SetTo(v GoldTransactionSchemaCharacterCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptGoldTransactionSchemaCharacterCooldownExpiration) Get() (v GoldTransactionSchemaCharacterCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptGoldTransactionSchemaCharacterCooldownExpiration) Or(d GoldTransactionSchemaCharacterCooldownExpiration) GoldTransactionSchemaCharacterCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptItemSchemaCraft returns new OptItemSchemaCraft with value set to v.
func NewOptItemSchemaCraft(v ItemSchemaCraft) OptItemSchemaCraft {
	return OptItemSchemaCraft{
		Value: v,
		Set:   true,
	}
}

// OptItemSchemaCraft is optional ItemSchemaCraft.
type OptItemSchemaCraft struct {
	Value ItemSchemaCraft
	Set   bool
}

// IsSet returns true if OptItemSchemaCraft was set.
func (o OptItemSchemaCraft) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptItemSchemaCraft) Reset() {
	var v ItemSchemaCraft
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptItemSchemaCraft) SetTo(v ItemSchemaCraft) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptItemSchemaCraft) Get() (v ItemSchemaCraft, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptItemSchemaCraft) Or(d ItemSchemaCraft) ItemSchemaCraft {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRecyclingDataSchemaCharacterCooldownExpiration returns new OptRecyclingDataSchemaCharacterCooldownExpiration with value set to v.
func NewOptRecyclingDataSchemaCharacterCooldownExpiration(v RecyclingDataSchemaCharacterCooldownExpiration) OptRecyclingDataSchemaCharacterCooldownExpiration {
	return OptRecyclingDataSchemaCharacterCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptRecyclingDataSchemaCharacterCooldownExpiration is optional RecyclingDataSchemaCharacterCooldownExpiration.
type OptRecyclingDataSchemaCharacterCooldownExpiration struct {
	Value RecyclingDataSchemaCharacterCooldownExpiration
	Set   bool
}

// IsSet returns true if OptRecyclingDataSchemaCharacterCooldownExpiration was set.
func (o OptRecyclingDataSchemaCharacterCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRecyclingDataSchemaCharacterCooldownExpiration) Reset() {
	var v RecyclingDataSchemaCharacterCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRecyclingDataSchemaCharacterCooldownExpiration) SetTo(v RecyclingDataSchemaCharacterCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRecyclingDataSchemaCharacterCooldownExpiration) Get() (v RecyclingDataSchemaCharacterCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRecyclingDataSchemaCharacterCooldownExpiration) Or(d RecyclingDataSchemaCharacterCooldownExpiration) RecyclingDataSchemaCharacterCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSingleItemSchemaGe returns new OptSingleItemSchemaGe with value set to v.
func NewOptSingleItemSchemaGe(v SingleItemSchemaGe) OptSingleItemSchemaGe {
	return OptSingleItemSchemaGe{
		Value: v,
		Set:   true,
	}
}

// OptSingleItemSchemaGe is optional SingleItemSchemaGe.
type OptSingleItemSchemaGe struct {
	Value SingleItemSchemaGe
	Set   bool
}

// IsSet returns true if OptSingleItemSchemaGe was set.
func (o OptSingleItemSchemaGe) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSingleItemSchemaGe) Reset() {
	var v SingleItemSchemaGe
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSingleItemSchemaGe) SetTo(v SingleItemSchemaGe) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSingleItemSchemaGe) Get() (v SingleItemSchemaGe, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSingleItemSchemaGe) Or(d SingleItemSchemaGe) SingleItemSchemaGe {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSingleItemSchemaItemCraft returns new OptSingleItemSchemaItemCraft with value set to v.
func NewOptSingleItemSchemaItemCraft(v SingleItemSchemaItemCraft) OptSingleItemSchemaItemCraft {
	return OptSingleItemSchemaItemCraft{
		Value: v,
		Set:   true,
	}
}

// OptSingleItemSchemaItemCraft is optional SingleItemSchemaItemCraft.
type OptSingleItemSchemaItemCraft struct {
	Value SingleItemSchemaItemCraft
	Set   bool
}

// IsSet returns true if OptSingleItemSchemaItemCraft was set.
func (o OptSingleItemSchemaItemCraft) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSingleItemSchemaItemCraft) Reset() {
	var v SingleItemSchemaItemCraft
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSingleItemSchemaItemCraft) SetTo(v SingleItemSchemaItemCraft) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSingleItemSchemaItemCraft) Get() (v SingleItemSchemaItemCraft, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSingleItemSchemaItemCraft) Or(d SingleItemSchemaItemCraft) SingleItemSchemaItemCraft {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSkillDataSchemaCharacterCooldownExpiration returns new OptSkillDataSchemaCharacterCooldownExpiration with value set to v.
func NewOptSkillDataSchemaCharacterCooldownExpiration(v SkillDataSchemaCharacterCooldownExpiration) OptSkillDataSchemaCharacterCooldownExpiration {
	return OptSkillDataSchemaCharacterCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptSkillDataSchemaCharacterCooldownExpiration is optional SkillDataSchemaCharacterCooldownExpiration.
type OptSkillDataSchemaCharacterCooldownExpiration struct {
	Value SkillDataSchemaCharacterCooldownExpiration
	Set   bool
}

// IsSet returns true if OptSkillDataSchemaCharacterCooldownExpiration was set.
func (o OptSkillDataSchemaCharacterCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSkillDataSchemaCharacterCooldownExpiration) Reset() {
	var v SkillDataSchemaCharacterCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSkillDataSchemaCharacterCooldownExpiration) SetTo(v SkillDataSchemaCharacterCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSkillDataSchemaCharacterCooldownExpiration) Get() (v SkillDataSchemaCharacterCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSkillDataSchemaCharacterCooldownExpiration) Or(d SkillDataSchemaCharacterCooldownExpiration) SkillDataSchemaCharacterCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTaskDataSchemaCharacterCooldownExpiration returns new OptTaskDataSchemaCharacterCooldownExpiration with value set to v.
func NewOptTaskDataSchemaCharacterCooldownExpiration(v TaskDataSchemaCharacterCooldownExpiration) OptTaskDataSchemaCharacterCooldownExpiration {
	return OptTaskDataSchemaCharacterCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptTaskDataSchemaCharacterCooldownExpiration is optional TaskDataSchemaCharacterCooldownExpiration.
type OptTaskDataSchemaCharacterCooldownExpiration struct {
	Value TaskDataSchemaCharacterCooldownExpiration
	Set   bool
}

// IsSet returns true if OptTaskDataSchemaCharacterCooldownExpiration was set.
func (o OptTaskDataSchemaCharacterCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTaskDataSchemaCharacterCooldownExpiration) Reset() {
	var v TaskDataSchemaCharacterCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTaskDataSchemaCharacterCooldownExpiration) SetTo(v TaskDataSchemaCharacterCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTaskDataSchemaCharacterCooldownExpiration) Get() (v TaskDataSchemaCharacterCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTaskDataSchemaCharacterCooldownExpiration) Or(d TaskDataSchemaCharacterCooldownExpiration) TaskDataSchemaCharacterCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTaskRewardDataSchemaCharacterCooldownExpiration returns new OptTaskRewardDataSchemaCharacterCooldownExpiration with value set to v.
func NewOptTaskRewardDataSchemaCharacterCooldownExpiration(v TaskRewardDataSchemaCharacterCooldownExpiration) OptTaskRewardDataSchemaCharacterCooldownExpiration {
	return OptTaskRewardDataSchemaCharacterCooldownExpiration{
		Value: v,
		Set:   true,
	}
}

// OptTaskRewardDataSchemaCharacterCooldownExpiration is optional TaskRewardDataSchemaCharacterCooldownExpiration.
type OptTaskRewardDataSchemaCharacterCooldownExpiration struct {
	Value TaskRewardDataSchemaCharacterCooldownExpiration
	Set   bool
}

// IsSet returns true if OptTaskRewardDataSchemaCharacterCooldownExpiration was set.
func (o OptTaskRewardDataSchemaCharacterCooldownExpiration) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTaskRewardDataSchemaCharacterCooldownExpiration) Reset() {
	var v TaskRewardDataSchemaCharacterCooldownExpiration
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTaskRewardDataSchemaCharacterCooldownExpiration) SetTo(v TaskRewardDataSchemaCharacterCooldownExpiration) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTaskRewardDataSchemaCharacterCooldownExpiration) Get() (v TaskRewardDataSchemaCharacterCooldownExpiration, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTaskRewardDataSchemaCharacterCooldownExpiration) Or(d TaskRewardDataSchemaCharacterCooldownExpiration) TaskRewardDataSchemaCharacterCooldownExpiration {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/RecyclingDataSchema
type RecyclingDataSchema struct {
	// Cooldown details.
	Cooldown RecyclingDataSchemaCooldown `json:"cooldown"`
	// Craft details.
	Details RecyclingDataSchemaDetails `json:"details"`
	// Player details.
	Character RecyclingDataSchemaCharacter `json:"character"`
}

// GetCooldown returns the value of Cooldown.
func (s *RecyclingDataSchema) GetCooldown() RecyclingDataSchemaCooldown {
	return s.Cooldown
}

// GetDetails returns the value of Details.
func (s *RecyclingDataSchema) GetDetails() RecyclingDataSchemaDetails {
	return s.Details
}

// GetCharacter returns the value of Character.
func (s *RecyclingDataSchema) GetCharacter() RecyclingDataSchemaCharacter {
	return s.Character
}

// SetCooldown sets the value of Cooldown.
func (s *RecyclingDataSchema) SetCooldown(val RecyclingDataSchemaCooldown) {
	s.Cooldown = val
}

// SetDetails sets the value of Details.
func (s *RecyclingDataSchema) SetDetails(val RecyclingDataSchemaDetails) {
	s.Details = val
}

// SetCharacter sets the value of Character.
func (s *RecyclingDataSchema) SetCharacter(val RecyclingDataSchemaCharacter) {
	s.Character = val
}

type RecyclingDataSchemaCharacter struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin RecyclingDataSchemaCharacterSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptRecyclingDataSchemaCharacterCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *RecyclingDataSchemaCharacter) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *RecyclingDataSchemaCharacter) GetSkin() RecyclingDataSchemaCharacterSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *RecyclingDataSchemaCharacter) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *RecyclingDataSchemaCharacter) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *RecyclingDataSchemaCharacter) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *RecyclingDataSchemaCharacter) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *RecyclingDataSchemaCharacter) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *RecyclingDataSchemaCharacter) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *RecyclingDataSchemaCharacter) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *RecyclingDataSchemaCharacter) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *RecyclingDataSchemaCharacter) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *RecyclingDataSchemaCharacter) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *RecyclingDataSchemaCharacter) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *RecyclingDataSchemaCharacter) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *RecyclingDataSchemaCharacter) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *RecyclingDataSchemaCharacter) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *RecyclingDataSchemaCharacter) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *RecyclingDataSchemaCharacter) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *RecyclingDataSchemaCharacter) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *RecyclingDataSchemaCharacter) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *RecyclingDataSchemaCharacter) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *RecyclingDataSchemaCharacter) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *RecyclingDataSchemaCharacter) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *RecyclingDataSchemaCharacter) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *RecyclingDataSchemaCharacter) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *RecyclingDataSchemaCharacter) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *RecyclingDataSchemaCharacter) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *RecyclingDataSchemaCharacter) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *RecyclingDataSchemaCharacter) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *RecyclingDataSchemaCharacter) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *RecyclingDataSchemaCharacter) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *RecyclingDataSchemaCharacter) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *RecyclingDataSchemaCharacter) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *RecyclingDataSchemaCharacter) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *RecyclingDataSchemaCharacter) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *RecyclingDataSchemaCharacter) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *RecyclingDataSchemaCharacter) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *RecyclingDataSchemaCharacter) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *RecyclingDataSchemaCharacter) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *RecyclingDataSchemaCharacter) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *RecyclingDataSchemaCharacter) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *RecyclingDataSchemaCharacter) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *RecyclingDataSchemaCharacter) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *RecyclingDataSchemaCharacter) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *RecyclingDataSchemaCharacter) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *RecyclingDataSchemaCharacter) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *RecyclingDataSchemaCharacter) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *RecyclingDataSchemaCharacter) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *RecyclingDataSchemaCharacter) GetCooldownExpiration() OptRecyclingDataSchemaCharacterCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *RecyclingDataSchemaCharacter) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *RecyclingDataSchemaCharacter) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *RecyclingDataSchemaCharacter) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *RecyclingDataSchemaCharacter) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *RecyclingDataSchemaCharacter) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *RecyclingDataSchemaCharacter) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *RecyclingDataSchemaCharacter) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *RecyclingDataSchemaCharacter) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *RecyclingDataSchemaCharacter) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *RecyclingDataSchemaCharacter) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *RecyclingDataSchemaCharacter) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *RecyclingDataSchemaCharacter) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *RecyclingDataSchemaCharacter) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *RecyclingDataSchemaCharacter) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *RecyclingDataSchemaCharacter) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *RecyclingDataSchemaCharacter) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *RecyclingDataSchemaCharacter) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *RecyclingDataSchemaCharacter) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *RecyclingDataSchemaCharacter) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *RecyclingDataSchemaCharacter) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *RecyclingDataSchemaCharacter) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *RecyclingDataSchemaCharacter) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *RecyclingDataSchemaCharacter) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *RecyclingDataSchemaCharacter) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *RecyclingDataSchemaCharacter) SetSkin(val RecyclingDataSchemaCharacterSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *RecyclingDataSchemaCharacter) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *RecyclingDataSchemaCharacter) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *RecyclingDataSchemaCharacter) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *RecyclingDataSchemaCharacter) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *RecyclingDataSchemaCharacter) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *RecyclingDataSchemaCharacter) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *RecyclingDataSchemaCharacter) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *RecyclingDataSchemaCharacter) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *RecyclingDataSchemaCharacter) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *RecyclingDataSchemaCharacter) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *RecyclingDataSchemaCharacter) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *RecyclingDataSchemaCharacter) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *RecyclingDataSchemaCharacter) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *RecyclingDataSchemaCharacter) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *RecyclingDataSchemaCharacter) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *RecyclingDataSchemaCharacter) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *RecyclingDataSchemaCharacter) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *RecyclingDataSchemaCharacter) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *RecyclingDataSchemaCharacter) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *RecyclingDataSchemaCharacter) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *RecyclingDataSchemaCharacter) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *RecyclingDataSchemaCharacter) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *RecyclingDataSchemaCharacter) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *RecyclingDataSchemaCharacter) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *RecyclingDataSchemaCharacter) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *RecyclingDataSchemaCharacter) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *RecyclingDataSchemaCharacter) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *RecyclingDataSchemaCharacter) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *RecyclingDataSchemaCharacter) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *RecyclingDataSchemaCharacter) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *RecyclingDataSchemaCharacter) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *RecyclingDataSchemaCharacter) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *RecyclingDataSchemaCharacter) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *RecyclingDataSchemaCharacter) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *RecyclingDataSchemaCharacter) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *RecyclingDataSchemaCharacter) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *RecyclingDataSchemaCharacter) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *RecyclingDataSchemaCharacter) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *RecyclingDataSchemaCharacter) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *RecyclingDataSchemaCharacter) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *RecyclingDataSchemaCharacter) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *RecyclingDataSchemaCharacter) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *RecyclingDataSchemaCharacter) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *RecyclingDataSchemaCharacter) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *RecyclingDataSchemaCharacter) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *RecyclingDataSchemaCharacter) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *RecyclingDataSchemaCharacter) SetCooldownExpiration(val OptRecyclingDataSchemaCharacterCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *RecyclingDataSchemaCharacter) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *RecyclingDataSchemaCharacter) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *RecyclingDataSchemaCharacter) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *RecyclingDataSchemaCharacter) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *RecyclingDataSchemaCharacter) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *RecyclingDataSchemaCharacter) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *RecyclingDataSchemaCharacter) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *RecyclingDataSchemaCharacter) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *RecyclingDataSchemaCharacter) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *RecyclingDataSchemaCharacter) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *RecyclingDataSchemaCharacter) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *RecyclingDataSchemaCharacter) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *RecyclingDataSchemaCharacter) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *RecyclingDataSchemaCharacter) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *RecyclingDataSchemaCharacter) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *RecyclingDataSchemaCharacter) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *RecyclingDataSchemaCharacter) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *RecyclingDataSchemaCharacter) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *RecyclingDataSchemaCharacter) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *RecyclingDataSchemaCharacter) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *RecyclingDataSchemaCharacter) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *RecyclingDataSchemaCharacter) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *RecyclingDataSchemaCharacter) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// RecyclingDataSchemaCharacterCooldownExpiration represents sum type.
type RecyclingDataSchemaCharacterCooldownExpiration struct {
	Type     RecyclingDataSchemaCharacterCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// RecyclingDataSchemaCharacterCooldownExpirationType is oneOf type of RecyclingDataSchemaCharacterCooldownExpiration.
type RecyclingDataSchemaCharacterCooldownExpirationType string

// Possible values for RecyclingDataSchemaCharacterCooldownExpirationType.
const (
	DateTimeRecyclingDataSchemaCharacterCooldownExpiration RecyclingDataSchemaCharacterCooldownExpirationType = "time.Time"
	NullRecyclingDataSchemaCharacterCooldownExpiration     RecyclingDataSchemaCharacterCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether RecyclingDataSchemaCharacterCooldownExpiration is time.Time.
func (s RecyclingDataSchemaCharacterCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeRecyclingDataSchemaCharacterCooldownExpiration
}

// IsNull reports whether RecyclingDataSchemaCharacterCooldownExpiration is struct{}.
func (s RecyclingDataSchemaCharacterCooldownExpiration) IsNull() bool {
	return s.Type == NullRecyclingDataSchemaCharacterCooldownExpiration
}

// SetDateTime sets RecyclingDataSchemaCharacterCooldownExpiration to time.Time.
func (s *RecyclingDataSchemaCharacterCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeRecyclingDataSchemaCharacterCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if RecyclingDataSchemaCharacterCooldownExpiration is time.Time.
func (s RecyclingDataSchemaCharacterCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeRecyclingDataSchemaCharacterCooldownExpiration returns new RecyclingDataSchemaCharacterCooldownExpiration from time.Time.
func NewDateTimeRecyclingDataSchemaCharacterCooldownExpiration(v time.Time) RecyclingDataSchemaCharacterCooldownExpiration {
	var s RecyclingDataSchemaCharacterCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets RecyclingDataSchemaCharacterCooldownExpiration to struct{}.
func (s *RecyclingDataSchemaCharacterCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullRecyclingDataSchemaCharacterCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if RecyclingDataSchemaCharacterCooldownExpiration is struct{}.
func (s RecyclingDataSchemaCharacterCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullRecyclingDataSchemaCharacterCooldownExpiration returns new RecyclingDataSchemaCharacterCooldownExpiration from struct{}.
func NewNullRecyclingDataSchemaCharacterCooldownExpiration(v struct{}) RecyclingDataSchemaCharacterCooldownExpiration {
	var s RecyclingDataSchemaCharacterCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type RecyclingDataSchemaCharacterSkin string

const (
	RecyclingDataSchemaCharacterSkinMen1   RecyclingDataSchemaCharacterSkin = "men1"
	RecyclingDataSchemaCharacterSkinMen2   RecyclingDataSchemaCharacterSkin = "men2"
	RecyclingDataSchemaCharacterSkinMen3   RecyclingDataSchemaCharacterSkin = "men3"
	RecyclingDataSchemaCharacterSkinWomen1 RecyclingDataSchemaCharacterSkin = "women1"
	RecyclingDataSchemaCharacterSkinWomen2 RecyclingDataSchemaCharacterSkin = "women2"
	RecyclingDataSchemaCharacterSkinWomen3 RecyclingDataSchemaCharacterSkin = "women3"
)

// AllValues returns all RecyclingDataSchemaCharacterSkin values.
func (RecyclingDataSchemaCharacterSkin) AllValues() []RecyclingDataSchemaCharacterSkin {
	return []RecyclingDataSchemaCharacterSkin{
		RecyclingDataSchemaCharacterSkinMen1,
		RecyclingDataSchemaCharacterSkinMen2,
		RecyclingDataSchemaCharacterSkinMen3,
		RecyclingDataSchemaCharacterSkinWomen1,
		RecyclingDataSchemaCharacterSkinWomen2,
		RecyclingDataSchemaCharacterSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RecyclingDataSchemaCharacterSkin) MarshalText() ([]byte, error) {
	switch s {
	case RecyclingDataSchemaCharacterSkinMen1:
		return []byte(s), nil
	case RecyclingDataSchemaCharacterSkinMen2:
		return []byte(s), nil
	case RecyclingDataSchemaCharacterSkinMen3:
		return []byte(s), nil
	case RecyclingDataSchemaCharacterSkinWomen1:
		return []byte(s), nil
	case RecyclingDataSchemaCharacterSkinWomen2:
		return []byte(s), nil
	case RecyclingDataSchemaCharacterSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RecyclingDataSchemaCharacterSkin) UnmarshalText(data []byte) error {
	switch RecyclingDataSchemaCharacterSkin(data) {
	case RecyclingDataSchemaCharacterSkinMen1:
		*s = RecyclingDataSchemaCharacterSkinMen1
		return nil
	case RecyclingDataSchemaCharacterSkinMen2:
		*s = RecyclingDataSchemaCharacterSkinMen2
		return nil
	case RecyclingDataSchemaCharacterSkinMen3:
		*s = RecyclingDataSchemaCharacterSkinMen3
		return nil
	case RecyclingDataSchemaCharacterSkinWomen1:
		*s = RecyclingDataSchemaCharacterSkinWomen1
		return nil
	case RecyclingDataSchemaCharacterSkinWomen2:
		*s = RecyclingDataSchemaCharacterSkinWomen2
		return nil
	case RecyclingDataSchemaCharacterSkinWomen3:
		*s = RecyclingDataSchemaCharacterSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type RecyclingDataSchemaCooldown struct {
	// The total seconds of the cooldown.
	TotalSeconds int `json:"total_seconds"`
	// The remaining seconds of the cooldown.
	RemainingSeconds int `json:"remaining_seconds"`
	// The expiration of the cooldown.
	Expiration time.Time `json:"expiration"`
	// The reason of the cooldown.
	Reason RecyclingDataSchemaCooldownReason `json:"reason"`
}

// GetTotalSeconds returns the value of TotalSeconds.
func (s *RecyclingDataSchemaCooldown) GetTotalSeconds() int {
	return s.TotalSeconds
}

// GetRemainingSeconds returns the value of RemainingSeconds.
func (s *RecyclingDataSchemaCooldown) GetRemainingSeconds() int {
	return s.RemainingSeconds
}

// GetExpiration returns the value of Expiration.
func (s *RecyclingDataSchemaCooldown) GetExpiration() time.Time {
	return s.Expiration
}

// GetReason returns the value of Reason.
func (s *RecyclingDataSchemaCooldown) GetReason() RecyclingDataSchemaCooldownReason {
	return s.Reason
}

// SetTotalSeconds sets the value of TotalSeconds.
func (s *RecyclingDataSchemaCooldown) SetTotalSeconds(val int) {
	s.TotalSeconds = val
}

// SetRemainingSeconds sets the value of RemainingSeconds.
func (s *RecyclingDataSchemaCooldown) SetRemainingSeconds(val int) {
	s.RemainingSeconds = val
}

// SetExpiration sets the value of Expiration.
func (s *RecyclingDataSchemaCooldown) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetReason sets the value of Reason.
func (s *RecyclingDataSchemaCooldown) SetReason(val RecyclingDataSchemaCooldownReason) {
	s.Reason = val
}

// The reason of the cooldown.
type RecyclingDataSchemaCooldownReason string

const (
	RecyclingDataSchemaCooldownReasonMovement     RecyclingDataSchemaCooldownReason = "movement"
	RecyclingDataSchemaCooldownReasonFight        RecyclingDataSchemaCooldownReason = "fight"
	RecyclingDataSchemaCooldownReasonCrafting     RecyclingDataSchemaCooldownReason = "crafting"
	RecyclingDataSchemaCooldownReasonGathering    RecyclingDataSchemaCooldownReason = "gathering"
	RecyclingDataSchemaCooldownReasonBuyGe        RecyclingDataSchemaCooldownReason = "buy_ge"
	RecyclingDataSchemaCooldownReasonSellGe       RecyclingDataSchemaCooldownReason = "sell_ge"
	RecyclingDataSchemaCooldownReasonDeleteItem   RecyclingDataSchemaCooldownReason = "delete_item"
	RecyclingDataSchemaCooldownReasonDepositBank  RecyclingDataSchemaCooldownReason = "deposit_bank"
	RecyclingDataSchemaCooldownReasonWithdrawBank RecyclingDataSchemaCooldownReason = "withdraw_bank"
	RecyclingDataSchemaCooldownReasonEquip        RecyclingDataSchemaCooldownReason = "equip"
	RecyclingDataSchemaCooldownReasonUnequip      RecyclingDataSchemaCooldownReason = "unequip"
	RecyclingDataSchemaCooldownReasonTask         RecyclingDataSchemaCooldownReason = "task"
	RecyclingDataSchemaCooldownReasonRecycling    RecyclingDataSchemaCooldownReason = "recycling"
)

// AllValues returns all RecyclingDataSchemaCooldownReason values.
func (RecyclingDataSchemaCooldownReason) AllValues() []RecyclingDataSchemaCooldownReason {
	return []RecyclingDataSchemaCooldownReason{
		RecyclingDataSchemaCooldownReasonMovement,
		RecyclingDataSchemaCooldownReasonFight,
		RecyclingDataSchemaCooldownReasonCrafting,
		RecyclingDataSchemaCooldownReasonGathering,
		RecyclingDataSchemaCooldownReasonBuyGe,
		RecyclingDataSchemaCooldownReasonSellGe,
		RecyclingDataSchemaCooldownReasonDeleteItem,
		RecyclingDataSchemaCooldownReasonDepositBank,
		RecyclingDataSchemaCooldownReasonWithdrawBank,
		RecyclingDataSchemaCooldownReasonEquip,
		RecyclingDataSchemaCooldownReasonUnequip,
		RecyclingDataSchemaCooldownReasonTask,
		RecyclingDataSchemaCooldownReasonRecycling,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s RecyclingDataSchemaCooldownReason) MarshalText() ([]byte, error) {
	switch s {
	case RecyclingDataSchemaCooldownReasonMovement:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonFight:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonCrafting:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonGathering:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonBuyGe:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonSellGe:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonDeleteItem:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonDepositBank:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonWithdrawBank:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonEquip:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonUnequip:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonTask:
		return []byte(s), nil
	case RecyclingDataSchemaCooldownReasonRecycling:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *RecyclingDataSchemaCooldownReason) UnmarshalText(data []byte) error {
	switch RecyclingDataSchemaCooldownReason(data) {
	case RecyclingDataSchemaCooldownReasonMovement:
		*s = RecyclingDataSchemaCooldownReasonMovement
		return nil
	case RecyclingDataSchemaCooldownReasonFight:
		*s = RecyclingDataSchemaCooldownReasonFight
		return nil
	case RecyclingDataSchemaCooldownReasonCrafting:
		*s = RecyclingDataSchemaCooldownReasonCrafting
		return nil
	case RecyclingDataSchemaCooldownReasonGathering:
		*s = RecyclingDataSchemaCooldownReasonGathering
		return nil
	case RecyclingDataSchemaCooldownReasonBuyGe:
		*s = RecyclingDataSchemaCooldownReasonBuyGe
		return nil
	case RecyclingDataSchemaCooldownReasonSellGe:
		*s = RecyclingDataSchemaCooldownReasonSellGe
		return nil
	case RecyclingDataSchemaCooldownReasonDeleteItem:
		*s = RecyclingDataSchemaCooldownReasonDeleteItem
		return nil
	case RecyclingDataSchemaCooldownReasonDepositBank:
		*s = RecyclingDataSchemaCooldownReasonDepositBank
		return nil
	case RecyclingDataSchemaCooldownReasonWithdrawBank:
		*s = RecyclingDataSchemaCooldownReasonWithdrawBank
		return nil
	case RecyclingDataSchemaCooldownReasonEquip:
		*s = RecyclingDataSchemaCooldownReasonEquip
		return nil
	case RecyclingDataSchemaCooldownReasonUnequip:
		*s = RecyclingDataSchemaCooldownReasonUnequip
		return nil
	case RecyclingDataSchemaCooldownReasonTask:
		*s = RecyclingDataSchemaCooldownReasonTask
		return nil
	case RecyclingDataSchemaCooldownReasonRecycling:
		*s = RecyclingDataSchemaCooldownReasonRecycling
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type RecyclingDataSchemaDetails struct {
	// Objects received.
	Items []DropSchema `json:"items"`
}

// GetItems returns the value of Items.
func (s *RecyclingDataSchemaDetails) GetItems() []DropSchema {
	return s.Items
}

// SetItems sets the value of Items.
func (s *RecyclingDataSchemaDetails) SetItems(val []DropSchema) {
	s.Items = val
}

// Ref: #/components/schemas/RecyclingResponseSchema
type RecyclingResponseSchema struct {
	Data RecyclingDataSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *RecyclingResponseSchema) GetData() RecyclingDataSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *RecyclingResponseSchema) SetData(val RecyclingDataSchema) {
	s.Data = val
}

func (*RecyclingResponseSchema) actionRecyclingMyNameActionRecyclingPostRes() {}

// Ref: #/components/schemas/RecyclingSchema
type RecyclingSchema struct {
	// Item code.
	Code string `json:"code"`
	// Quantity of items to recycle.
	Quantity OptInt `json:"quantity"`
}

// GetCode returns the value of Code.
func (s *RecyclingSchema) GetCode() string {
	return s.Code
}

// GetQuantity returns the value of Quantity.
func (s *RecyclingSchema) GetQuantity() OptInt {
	return s.Quantity
}

// SetCode sets the value of Code.
func (s *RecyclingSchema) SetCode(val string) {
	s.Code = val
}

// SetQuantity sets the value of Quantity.
func (s *RecyclingSchema) SetQuantity(val OptInt) {
	s.Quantity = val
}

// Ref: #/components/schemas/ResourceResponseSchema
type ResourceResponseSchema struct {
	Data ResourceSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *ResourceResponseSchema) GetData() ResourceSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *ResourceResponseSchema) SetData(val ResourceSchema) {
	s.Data = val
}

func (*ResourceResponseSchema) getResourcesResourcesCodeGetRes() {}

// Ref: #/components/schemas/ResourceSchema
type ResourceSchema struct {
	// The name of the resource.
	Name string `json:"name"`
	// The code of the resource. This is the resource's unique identifier (ID).
	Code string `json:"code"`
	// The skill required to gather this resource.
	Skill ResourceSchemaSkill `json:"skill"`
	// The skill level required to gather this resource.
	Level int `json:"level"`
	// The drops of this resource.
	Drops []DropRateSchema `json:"drops"`
}

// GetName returns the value of Name.
func (s *ResourceSchema) GetName() string {
	return s.Name
}

// GetCode returns the value of Code.
func (s *ResourceSchema) GetCode() string {
	return s.Code
}

// GetSkill returns the value of Skill.
func (s *ResourceSchema) GetSkill() ResourceSchemaSkill {
	return s.Skill
}

// GetLevel returns the value of Level.
func (s *ResourceSchema) GetLevel() int {
	return s.Level
}

// GetDrops returns the value of Drops.
func (s *ResourceSchema) GetDrops() []DropRateSchema {
	return s.Drops
}

// SetName sets the value of Name.
func (s *ResourceSchema) SetName(val string) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *ResourceSchema) SetCode(val string) {
	s.Code = val
}

// SetSkill sets the value of Skill.
func (s *ResourceSchema) SetSkill(val ResourceSchemaSkill) {
	s.Skill = val
}

// SetLevel sets the value of Level.
func (s *ResourceSchema) SetLevel(val int) {
	s.Level = val
}

// SetDrops sets the value of Drops.
func (s *ResourceSchema) SetDrops(val []DropRateSchema) {
	s.Drops = val
}

// The skill required to gather this resource.
type ResourceSchemaSkill string

const (
	ResourceSchemaSkillMining      ResourceSchemaSkill = "mining"
	ResourceSchemaSkillWoodcutting ResourceSchemaSkill = "woodcutting"
	ResourceSchemaSkillFishing     ResourceSchemaSkill = "fishing"
)

// AllValues returns all ResourceSchemaSkill values.
func (ResourceSchemaSkill) AllValues() []ResourceSchemaSkill {
	return []ResourceSchemaSkill{
		ResourceSchemaSkillMining,
		ResourceSchemaSkillWoodcutting,
		ResourceSchemaSkillFishing,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ResourceSchemaSkill) MarshalText() ([]byte, error) {
	switch s {
	case ResourceSchemaSkillMining:
		return []byte(s), nil
	case ResourceSchemaSkillWoodcutting:
		return []byte(s), nil
	case ResourceSchemaSkillFishing:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ResourceSchemaSkill) UnmarshalText(data []byte) error {
	switch ResourceSchemaSkill(data) {
	case ResourceSchemaSkillMining:
		*s = ResourceSchemaSkillMining
		return nil
	case ResourceSchemaSkillWoodcutting:
		*s = ResourceSchemaSkillWoodcutting
		return nil
	case ResourceSchemaSkillFishing:
		*s = ResourceSchemaSkillFishing
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/ResponseSchema
type ResponseSchema struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ResponseSchema) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ResponseSchema) SetMessage(val string) {
	s.Message = val
}

func (*ResponseSchema) changePasswordMyChangePasswordPostRes() {}
func (*ResponseSchema) createAccountAccountsCreatePostRes()    {}

// Ref: #/components/schemas/SimpleItemSchema
type SimpleItemSchema struct {
	// Item code.
	Code string `json:"code"`
	// Item quantity.
	Quantity int `json:"quantity"`
}

// GetCode returns the value of Code.
func (s *SimpleItemSchema) GetCode() string {
	return s.Code
}

// GetQuantity returns the value of Quantity.
func (s *SimpleItemSchema) GetQuantity() int {
	return s.Quantity
}

// SetCode sets the value of Code.
func (s *SimpleItemSchema) SetCode(val string) {
	s.Code = val
}

// SetQuantity sets the value of Quantity.
func (s *SimpleItemSchema) SetQuantity(val int) {
	s.Quantity = val
}

// Ref: #/components/schemas/SingleItemSchema
type SingleItemSchema struct {
	// Item information.
	Item SingleItemSchemaItem `json:"item"`
	// Grand Exchange information. If applicable.
	Ge OptSingleItemSchemaGe `json:"ge"`
}

// GetItem returns the value of Item.
func (s *SingleItemSchema) GetItem() SingleItemSchemaItem {
	return s.Item
}

// GetGe returns the value of Ge.
func (s *SingleItemSchema) GetGe() OptSingleItemSchemaGe {
	return s.Ge
}

// SetItem sets the value of Item.
func (s *SingleItemSchema) SetItem(val SingleItemSchemaItem) {
	s.Item = val
}

// SetGe sets the value of Ge.
func (s *SingleItemSchema) SetGe(val OptSingleItemSchemaGe) {
	s.Ge = val
}

// Grand Exchange information. If applicable.
// SingleItemSchemaGe represents sum type.
type SingleItemSchemaGe struct {
	Type         SingleItemSchemaGeType // switch on this field
	GEItemSchema GEItemSchema
	Null         struct{}
}

// SingleItemSchemaGeType is oneOf type of SingleItemSchemaGe.
type SingleItemSchemaGeType string

// Possible values for SingleItemSchemaGeType.
const (
	GEItemSchemaSingleItemSchemaGe SingleItemSchemaGeType = "GEItemSchema"
	NullSingleItemSchemaGe         SingleItemSchemaGeType = "struct{}"
)

// IsGEItemSchema reports whether SingleItemSchemaGe is GEItemSchema.
func (s SingleItemSchemaGe) IsGEItemSchema() bool { return s.Type == GEItemSchemaSingleItemSchemaGe }

// IsNull reports whether SingleItemSchemaGe is struct{}.
func (s SingleItemSchemaGe) IsNull() bool { return s.Type == NullSingleItemSchemaGe }

// SetGEItemSchema sets SingleItemSchemaGe to GEItemSchema.
func (s *SingleItemSchemaGe) SetGEItemSchema(v GEItemSchema) {
	s.Type = GEItemSchemaSingleItemSchemaGe
	s.GEItemSchema = v
}

// GetGEItemSchema returns GEItemSchema and true boolean if SingleItemSchemaGe is GEItemSchema.
func (s SingleItemSchemaGe) GetGEItemSchema() (v GEItemSchema, ok bool) {
	if !s.IsGEItemSchema() {
		return v, false
	}
	return s.GEItemSchema, true
}

// NewGEItemSchemaSingleItemSchemaGe returns new SingleItemSchemaGe from GEItemSchema.
func NewGEItemSchemaSingleItemSchemaGe(v GEItemSchema) SingleItemSchemaGe {
	var s SingleItemSchemaGe
	s.SetGEItemSchema(v)
	return s
}

// SetNull sets SingleItemSchemaGe to struct{}.
func (s *SingleItemSchemaGe) SetNull(v struct{}) {
	s.Type = NullSingleItemSchemaGe
	s.Null = v
}

// GetNull returns struct{} and true boolean if SingleItemSchemaGe is struct{}.
func (s SingleItemSchemaGe) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullSingleItemSchemaGe returns new SingleItemSchemaGe from struct{}.
func NewNullSingleItemSchemaGe(v struct{}) SingleItemSchemaGe {
	var s SingleItemSchemaGe
	s.SetNull(v)
	return s
}

type SingleItemSchemaItem struct {
	// Item name.
	Name string `json:"name"`
	// Item code. This is the item's unique identifier (ID).
	Code string `json:"code"`
	// Item level.
	Level int `json:"level"`
	// Item type.
	Type string `json:"type"`
	// Item subtype.
	Subtype string `json:"subtype"`
	// Item description.
	Description string `json:"description"`
	// List of object effects. For equipment, it will include item stats.
	Effects []ItemEffectSchema `json:"effects"`
	// Craft information. If applicable.
	Craft OptSingleItemSchemaItemCraft `json:"craft"`
}

// GetName returns the value of Name.
func (s *SingleItemSchemaItem) GetName() string {
	return s.Name
}

// GetCode returns the value of Code.
func (s *SingleItemSchemaItem) GetCode() string {
	return s.Code
}

// GetLevel returns the value of Level.
func (s *SingleItemSchemaItem) GetLevel() int {
	return s.Level
}

// GetType returns the value of Type.
func (s *SingleItemSchemaItem) GetType() string {
	return s.Type
}

// GetSubtype returns the value of Subtype.
func (s *SingleItemSchemaItem) GetSubtype() string {
	return s.Subtype
}

// GetDescription returns the value of Description.
func (s *SingleItemSchemaItem) GetDescription() string {
	return s.Description
}

// GetEffects returns the value of Effects.
func (s *SingleItemSchemaItem) GetEffects() []ItemEffectSchema {
	return s.Effects
}

// GetCraft returns the value of Craft.
func (s *SingleItemSchemaItem) GetCraft() OptSingleItemSchemaItemCraft {
	return s.Craft
}

// SetName sets the value of Name.
func (s *SingleItemSchemaItem) SetName(val string) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *SingleItemSchemaItem) SetCode(val string) {
	s.Code = val
}

// SetLevel sets the value of Level.
func (s *SingleItemSchemaItem) SetLevel(val int) {
	s.Level = val
}

// SetType sets the value of Type.
func (s *SingleItemSchemaItem) SetType(val string) {
	s.Type = val
}

// SetSubtype sets the value of Subtype.
func (s *SingleItemSchemaItem) SetSubtype(val string) {
	s.Subtype = val
}

// SetDescription sets the value of Description.
func (s *SingleItemSchemaItem) SetDescription(val string) {
	s.Description = val
}

// SetEffects sets the value of Effects.
func (s *SingleItemSchemaItem) SetEffects(val []ItemEffectSchema) {
	s.Effects = val
}

// SetCraft sets the value of Craft.
func (s *SingleItemSchemaItem) SetCraft(val OptSingleItemSchemaItemCraft) {
	s.Craft = val
}

// Craft information. If applicable.
// SingleItemSchemaItemCraft represents sum type.
type SingleItemSchemaItemCraft struct {
	Type        SingleItemSchemaItemCraftType // switch on this field
	CraftSchema CraftSchema
	Null        struct{}
}

// SingleItemSchemaItemCraftType is oneOf type of SingleItemSchemaItemCraft.
type SingleItemSchemaItemCraftType string

// Possible values for SingleItemSchemaItemCraftType.
const (
	CraftSchemaSingleItemSchemaItemCraft SingleItemSchemaItemCraftType = "CraftSchema"
	NullSingleItemSchemaItemCraft        SingleItemSchemaItemCraftType = "struct{}"
)

// IsCraftSchema reports whether SingleItemSchemaItemCraft is CraftSchema.
func (s SingleItemSchemaItemCraft) IsCraftSchema() bool {
	return s.Type == CraftSchemaSingleItemSchemaItemCraft
}

// IsNull reports whether SingleItemSchemaItemCraft is struct{}.
func (s SingleItemSchemaItemCraft) IsNull() bool { return s.Type == NullSingleItemSchemaItemCraft }

// SetCraftSchema sets SingleItemSchemaItemCraft to CraftSchema.
func (s *SingleItemSchemaItemCraft) SetCraftSchema(v CraftSchema) {
	s.Type = CraftSchemaSingleItemSchemaItemCraft
	s.CraftSchema = v
}

// GetCraftSchema returns CraftSchema and true boolean if SingleItemSchemaItemCraft is CraftSchema.
func (s SingleItemSchemaItemCraft) GetCraftSchema() (v CraftSchema, ok bool) {
	if !s.IsCraftSchema() {
		return v, false
	}
	return s.CraftSchema, true
}

// NewCraftSchemaSingleItemSchemaItemCraft returns new SingleItemSchemaItemCraft from CraftSchema.
func NewCraftSchemaSingleItemSchemaItemCraft(v CraftSchema) SingleItemSchemaItemCraft {
	var s SingleItemSchemaItemCraft
	s.SetCraftSchema(v)
	return s
}

// SetNull sets SingleItemSchemaItemCraft to struct{}.
func (s *SingleItemSchemaItemCraft) SetNull(v struct{}) {
	s.Type = NullSingleItemSchemaItemCraft
	s.Null = v
}

// GetNull returns struct{} and true boolean if SingleItemSchemaItemCraft is struct{}.
func (s SingleItemSchemaItemCraft) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullSingleItemSchemaItemCraft returns new SingleItemSchemaItemCraft from struct{}.
func NewNullSingleItemSchemaItemCraft(v struct{}) SingleItemSchemaItemCraft {
	var s SingleItemSchemaItemCraft
	s.SetNull(v)
	return s
}

// Ref: #/components/schemas/SkillDataSchema
type SkillDataSchema struct {
	// Cooldown details.
	Cooldown SkillDataSchemaCooldown `json:"cooldown"`
	// Craft details.
	Details SkillDataSchemaDetails `json:"details"`
	// Player details.
	Character SkillDataSchemaCharacter `json:"character"`
}

// GetCooldown returns the value of Cooldown.
func (s *SkillDataSchema) GetCooldown() SkillDataSchemaCooldown {
	return s.Cooldown
}

// GetDetails returns the value of Details.
func (s *SkillDataSchema) GetDetails() SkillDataSchemaDetails {
	return s.Details
}

// GetCharacter returns the value of Character.
func (s *SkillDataSchema) GetCharacter() SkillDataSchemaCharacter {
	return s.Character
}

// SetCooldown sets the value of Cooldown.
func (s *SkillDataSchema) SetCooldown(val SkillDataSchemaCooldown) {
	s.Cooldown = val
}

// SetDetails sets the value of Details.
func (s *SkillDataSchema) SetDetails(val SkillDataSchemaDetails) {
	s.Details = val
}

// SetCharacter sets the value of Character.
func (s *SkillDataSchema) SetCharacter(val SkillDataSchemaCharacter) {
	s.Character = val
}

type SkillDataSchemaCharacter struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin SkillDataSchemaCharacterSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptSkillDataSchemaCharacterCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *SkillDataSchemaCharacter) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *SkillDataSchemaCharacter) GetSkin() SkillDataSchemaCharacterSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *SkillDataSchemaCharacter) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *SkillDataSchemaCharacter) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *SkillDataSchemaCharacter) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *SkillDataSchemaCharacter) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *SkillDataSchemaCharacter) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *SkillDataSchemaCharacter) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *SkillDataSchemaCharacter) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *SkillDataSchemaCharacter) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *SkillDataSchemaCharacter) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *SkillDataSchemaCharacter) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *SkillDataSchemaCharacter) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *SkillDataSchemaCharacter) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *SkillDataSchemaCharacter) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *SkillDataSchemaCharacter) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *SkillDataSchemaCharacter) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *SkillDataSchemaCharacter) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *SkillDataSchemaCharacter) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *SkillDataSchemaCharacter) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *SkillDataSchemaCharacter) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *SkillDataSchemaCharacter) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *SkillDataSchemaCharacter) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *SkillDataSchemaCharacter) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *SkillDataSchemaCharacter) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *SkillDataSchemaCharacter) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *SkillDataSchemaCharacter) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *SkillDataSchemaCharacter) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *SkillDataSchemaCharacter) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *SkillDataSchemaCharacter) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *SkillDataSchemaCharacter) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *SkillDataSchemaCharacter) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *SkillDataSchemaCharacter) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *SkillDataSchemaCharacter) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *SkillDataSchemaCharacter) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *SkillDataSchemaCharacter) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *SkillDataSchemaCharacter) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *SkillDataSchemaCharacter) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *SkillDataSchemaCharacter) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *SkillDataSchemaCharacter) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *SkillDataSchemaCharacter) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *SkillDataSchemaCharacter) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *SkillDataSchemaCharacter) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *SkillDataSchemaCharacter) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *SkillDataSchemaCharacter) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *SkillDataSchemaCharacter) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *SkillDataSchemaCharacter) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *SkillDataSchemaCharacter) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *SkillDataSchemaCharacter) GetCooldownExpiration() OptSkillDataSchemaCharacterCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *SkillDataSchemaCharacter) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *SkillDataSchemaCharacter) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *SkillDataSchemaCharacter) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *SkillDataSchemaCharacter) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *SkillDataSchemaCharacter) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *SkillDataSchemaCharacter) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *SkillDataSchemaCharacter) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *SkillDataSchemaCharacter) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *SkillDataSchemaCharacter) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *SkillDataSchemaCharacter) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *SkillDataSchemaCharacter) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *SkillDataSchemaCharacter) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *SkillDataSchemaCharacter) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *SkillDataSchemaCharacter) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *SkillDataSchemaCharacter) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *SkillDataSchemaCharacter) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *SkillDataSchemaCharacter) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *SkillDataSchemaCharacter) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *SkillDataSchemaCharacter) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *SkillDataSchemaCharacter) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *SkillDataSchemaCharacter) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *SkillDataSchemaCharacter) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *SkillDataSchemaCharacter) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *SkillDataSchemaCharacter) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *SkillDataSchemaCharacter) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *SkillDataSchemaCharacter) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *SkillDataSchemaCharacter) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *SkillDataSchemaCharacter) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *SkillDataSchemaCharacter) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *SkillDataSchemaCharacter) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *SkillDataSchemaCharacter) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *SkillDataSchemaCharacter) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *SkillDataSchemaCharacter) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *SkillDataSchemaCharacter) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *SkillDataSchemaCharacter) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *SkillDataSchemaCharacter) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *SkillDataSchemaCharacter) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *SkillDataSchemaCharacter) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *SkillDataSchemaCharacter) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *SkillDataSchemaCharacter) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *SkillDataSchemaCharacter) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *SkillDataSchemaCharacter) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *SkillDataSchemaCharacter) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *SkillDataSchemaCharacter) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *SkillDataSchemaCharacter) SetSkin(val SkillDataSchemaCharacterSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *SkillDataSchemaCharacter) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *SkillDataSchemaCharacter) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *SkillDataSchemaCharacter) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *SkillDataSchemaCharacter) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *SkillDataSchemaCharacter) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *SkillDataSchemaCharacter) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *SkillDataSchemaCharacter) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *SkillDataSchemaCharacter) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *SkillDataSchemaCharacter) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *SkillDataSchemaCharacter) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *SkillDataSchemaCharacter) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *SkillDataSchemaCharacter) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *SkillDataSchemaCharacter) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *SkillDataSchemaCharacter) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *SkillDataSchemaCharacter) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *SkillDataSchemaCharacter) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *SkillDataSchemaCharacter) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *SkillDataSchemaCharacter) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *SkillDataSchemaCharacter) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *SkillDataSchemaCharacter) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *SkillDataSchemaCharacter) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *SkillDataSchemaCharacter) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *SkillDataSchemaCharacter) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *SkillDataSchemaCharacter) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *SkillDataSchemaCharacter) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *SkillDataSchemaCharacter) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *SkillDataSchemaCharacter) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *SkillDataSchemaCharacter) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *SkillDataSchemaCharacter) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *SkillDataSchemaCharacter) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *SkillDataSchemaCharacter) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *SkillDataSchemaCharacter) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *SkillDataSchemaCharacter) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *SkillDataSchemaCharacter) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *SkillDataSchemaCharacter) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *SkillDataSchemaCharacter) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *SkillDataSchemaCharacter) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *SkillDataSchemaCharacter) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *SkillDataSchemaCharacter) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *SkillDataSchemaCharacter) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *SkillDataSchemaCharacter) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *SkillDataSchemaCharacter) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *SkillDataSchemaCharacter) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *SkillDataSchemaCharacter) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *SkillDataSchemaCharacter) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *SkillDataSchemaCharacter) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *SkillDataSchemaCharacter) SetCooldownExpiration(val OptSkillDataSchemaCharacterCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *SkillDataSchemaCharacter) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *SkillDataSchemaCharacter) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *SkillDataSchemaCharacter) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *SkillDataSchemaCharacter) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *SkillDataSchemaCharacter) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *SkillDataSchemaCharacter) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *SkillDataSchemaCharacter) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *SkillDataSchemaCharacter) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *SkillDataSchemaCharacter) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *SkillDataSchemaCharacter) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *SkillDataSchemaCharacter) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *SkillDataSchemaCharacter) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *SkillDataSchemaCharacter) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *SkillDataSchemaCharacter) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *SkillDataSchemaCharacter) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *SkillDataSchemaCharacter) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *SkillDataSchemaCharacter) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *SkillDataSchemaCharacter) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *SkillDataSchemaCharacter) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *SkillDataSchemaCharacter) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *SkillDataSchemaCharacter) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *SkillDataSchemaCharacter) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *SkillDataSchemaCharacter) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *SkillDataSchemaCharacter) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *SkillDataSchemaCharacter) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *SkillDataSchemaCharacter) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *SkillDataSchemaCharacter) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *SkillDataSchemaCharacter) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *SkillDataSchemaCharacter) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *SkillDataSchemaCharacter) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *SkillDataSchemaCharacter) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *SkillDataSchemaCharacter) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *SkillDataSchemaCharacter) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *SkillDataSchemaCharacter) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *SkillDataSchemaCharacter) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *SkillDataSchemaCharacter) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *SkillDataSchemaCharacter) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *SkillDataSchemaCharacter) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *SkillDataSchemaCharacter) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *SkillDataSchemaCharacter) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *SkillDataSchemaCharacter) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *SkillDataSchemaCharacter) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *SkillDataSchemaCharacter) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// SkillDataSchemaCharacterCooldownExpiration represents sum type.
type SkillDataSchemaCharacterCooldownExpiration struct {
	Type     SkillDataSchemaCharacterCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// SkillDataSchemaCharacterCooldownExpirationType is oneOf type of SkillDataSchemaCharacterCooldownExpiration.
type SkillDataSchemaCharacterCooldownExpirationType string

// Possible values for SkillDataSchemaCharacterCooldownExpirationType.
const (
	DateTimeSkillDataSchemaCharacterCooldownExpiration SkillDataSchemaCharacterCooldownExpirationType = "time.Time"
	NullSkillDataSchemaCharacterCooldownExpiration     SkillDataSchemaCharacterCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether SkillDataSchemaCharacterCooldownExpiration is time.Time.
func (s SkillDataSchemaCharacterCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeSkillDataSchemaCharacterCooldownExpiration
}

// IsNull reports whether SkillDataSchemaCharacterCooldownExpiration is struct{}.
func (s SkillDataSchemaCharacterCooldownExpiration) IsNull() bool {
	return s.Type == NullSkillDataSchemaCharacterCooldownExpiration
}

// SetDateTime sets SkillDataSchemaCharacterCooldownExpiration to time.Time.
func (s *SkillDataSchemaCharacterCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeSkillDataSchemaCharacterCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if SkillDataSchemaCharacterCooldownExpiration is time.Time.
func (s SkillDataSchemaCharacterCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeSkillDataSchemaCharacterCooldownExpiration returns new SkillDataSchemaCharacterCooldownExpiration from time.Time.
func NewDateTimeSkillDataSchemaCharacterCooldownExpiration(v time.Time) SkillDataSchemaCharacterCooldownExpiration {
	var s SkillDataSchemaCharacterCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets SkillDataSchemaCharacterCooldownExpiration to struct{}.
func (s *SkillDataSchemaCharacterCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullSkillDataSchemaCharacterCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if SkillDataSchemaCharacterCooldownExpiration is struct{}.
func (s SkillDataSchemaCharacterCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullSkillDataSchemaCharacterCooldownExpiration returns new SkillDataSchemaCharacterCooldownExpiration from struct{}.
func NewNullSkillDataSchemaCharacterCooldownExpiration(v struct{}) SkillDataSchemaCharacterCooldownExpiration {
	var s SkillDataSchemaCharacterCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type SkillDataSchemaCharacterSkin string

const (
	SkillDataSchemaCharacterSkinMen1   SkillDataSchemaCharacterSkin = "men1"
	SkillDataSchemaCharacterSkinMen2   SkillDataSchemaCharacterSkin = "men2"
	SkillDataSchemaCharacterSkinMen3   SkillDataSchemaCharacterSkin = "men3"
	SkillDataSchemaCharacterSkinWomen1 SkillDataSchemaCharacterSkin = "women1"
	SkillDataSchemaCharacterSkinWomen2 SkillDataSchemaCharacterSkin = "women2"
	SkillDataSchemaCharacterSkinWomen3 SkillDataSchemaCharacterSkin = "women3"
)

// AllValues returns all SkillDataSchemaCharacterSkin values.
func (SkillDataSchemaCharacterSkin) AllValues() []SkillDataSchemaCharacterSkin {
	return []SkillDataSchemaCharacterSkin{
		SkillDataSchemaCharacterSkinMen1,
		SkillDataSchemaCharacterSkinMen2,
		SkillDataSchemaCharacterSkinMen3,
		SkillDataSchemaCharacterSkinWomen1,
		SkillDataSchemaCharacterSkinWomen2,
		SkillDataSchemaCharacterSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SkillDataSchemaCharacterSkin) MarshalText() ([]byte, error) {
	switch s {
	case SkillDataSchemaCharacterSkinMen1:
		return []byte(s), nil
	case SkillDataSchemaCharacterSkinMen2:
		return []byte(s), nil
	case SkillDataSchemaCharacterSkinMen3:
		return []byte(s), nil
	case SkillDataSchemaCharacterSkinWomen1:
		return []byte(s), nil
	case SkillDataSchemaCharacterSkinWomen2:
		return []byte(s), nil
	case SkillDataSchemaCharacterSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SkillDataSchemaCharacterSkin) UnmarshalText(data []byte) error {
	switch SkillDataSchemaCharacterSkin(data) {
	case SkillDataSchemaCharacterSkinMen1:
		*s = SkillDataSchemaCharacterSkinMen1
		return nil
	case SkillDataSchemaCharacterSkinMen2:
		*s = SkillDataSchemaCharacterSkinMen2
		return nil
	case SkillDataSchemaCharacterSkinMen3:
		*s = SkillDataSchemaCharacterSkinMen3
		return nil
	case SkillDataSchemaCharacterSkinWomen1:
		*s = SkillDataSchemaCharacterSkinWomen1
		return nil
	case SkillDataSchemaCharacterSkinWomen2:
		*s = SkillDataSchemaCharacterSkinWomen2
		return nil
	case SkillDataSchemaCharacterSkinWomen3:
		*s = SkillDataSchemaCharacterSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SkillDataSchemaCooldown struct {
	// The total seconds of the cooldown.
	TotalSeconds int `json:"total_seconds"`
	// The remaining seconds of the cooldown.
	RemainingSeconds int `json:"remaining_seconds"`
	// The expiration of the cooldown.
	Expiration time.Time `json:"expiration"`
	// The reason of the cooldown.
	Reason SkillDataSchemaCooldownReason `json:"reason"`
}

// GetTotalSeconds returns the value of TotalSeconds.
func (s *SkillDataSchemaCooldown) GetTotalSeconds() int {
	return s.TotalSeconds
}

// GetRemainingSeconds returns the value of RemainingSeconds.
func (s *SkillDataSchemaCooldown) GetRemainingSeconds() int {
	return s.RemainingSeconds
}

// GetExpiration returns the value of Expiration.
func (s *SkillDataSchemaCooldown) GetExpiration() time.Time {
	return s.Expiration
}

// GetReason returns the value of Reason.
func (s *SkillDataSchemaCooldown) GetReason() SkillDataSchemaCooldownReason {
	return s.Reason
}

// SetTotalSeconds sets the value of TotalSeconds.
func (s *SkillDataSchemaCooldown) SetTotalSeconds(val int) {
	s.TotalSeconds = val
}

// SetRemainingSeconds sets the value of RemainingSeconds.
func (s *SkillDataSchemaCooldown) SetRemainingSeconds(val int) {
	s.RemainingSeconds = val
}

// SetExpiration sets the value of Expiration.
func (s *SkillDataSchemaCooldown) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetReason sets the value of Reason.
func (s *SkillDataSchemaCooldown) SetReason(val SkillDataSchemaCooldownReason) {
	s.Reason = val
}

// The reason of the cooldown.
type SkillDataSchemaCooldownReason string

const (
	SkillDataSchemaCooldownReasonMovement     SkillDataSchemaCooldownReason = "movement"
	SkillDataSchemaCooldownReasonFight        SkillDataSchemaCooldownReason = "fight"
	SkillDataSchemaCooldownReasonCrafting     SkillDataSchemaCooldownReason = "crafting"
	SkillDataSchemaCooldownReasonGathering    SkillDataSchemaCooldownReason = "gathering"
	SkillDataSchemaCooldownReasonBuyGe        SkillDataSchemaCooldownReason = "buy_ge"
	SkillDataSchemaCooldownReasonSellGe       SkillDataSchemaCooldownReason = "sell_ge"
	SkillDataSchemaCooldownReasonDeleteItem   SkillDataSchemaCooldownReason = "delete_item"
	SkillDataSchemaCooldownReasonDepositBank  SkillDataSchemaCooldownReason = "deposit_bank"
	SkillDataSchemaCooldownReasonWithdrawBank SkillDataSchemaCooldownReason = "withdraw_bank"
	SkillDataSchemaCooldownReasonEquip        SkillDataSchemaCooldownReason = "equip"
	SkillDataSchemaCooldownReasonUnequip      SkillDataSchemaCooldownReason = "unequip"
	SkillDataSchemaCooldownReasonTask         SkillDataSchemaCooldownReason = "task"
	SkillDataSchemaCooldownReasonRecycling    SkillDataSchemaCooldownReason = "recycling"
)

// AllValues returns all SkillDataSchemaCooldownReason values.
func (SkillDataSchemaCooldownReason) AllValues() []SkillDataSchemaCooldownReason {
	return []SkillDataSchemaCooldownReason{
		SkillDataSchemaCooldownReasonMovement,
		SkillDataSchemaCooldownReasonFight,
		SkillDataSchemaCooldownReasonCrafting,
		SkillDataSchemaCooldownReasonGathering,
		SkillDataSchemaCooldownReasonBuyGe,
		SkillDataSchemaCooldownReasonSellGe,
		SkillDataSchemaCooldownReasonDeleteItem,
		SkillDataSchemaCooldownReasonDepositBank,
		SkillDataSchemaCooldownReasonWithdrawBank,
		SkillDataSchemaCooldownReasonEquip,
		SkillDataSchemaCooldownReasonUnequip,
		SkillDataSchemaCooldownReasonTask,
		SkillDataSchemaCooldownReasonRecycling,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SkillDataSchemaCooldownReason) MarshalText() ([]byte, error) {
	switch s {
	case SkillDataSchemaCooldownReasonMovement:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonFight:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonCrafting:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonGathering:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonBuyGe:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonSellGe:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonDeleteItem:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonDepositBank:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonWithdrawBank:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonEquip:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonUnequip:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonTask:
		return []byte(s), nil
	case SkillDataSchemaCooldownReasonRecycling:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SkillDataSchemaCooldownReason) UnmarshalText(data []byte) error {
	switch SkillDataSchemaCooldownReason(data) {
	case SkillDataSchemaCooldownReasonMovement:
		*s = SkillDataSchemaCooldownReasonMovement
		return nil
	case SkillDataSchemaCooldownReasonFight:
		*s = SkillDataSchemaCooldownReasonFight
		return nil
	case SkillDataSchemaCooldownReasonCrafting:
		*s = SkillDataSchemaCooldownReasonCrafting
		return nil
	case SkillDataSchemaCooldownReasonGathering:
		*s = SkillDataSchemaCooldownReasonGathering
		return nil
	case SkillDataSchemaCooldownReasonBuyGe:
		*s = SkillDataSchemaCooldownReasonBuyGe
		return nil
	case SkillDataSchemaCooldownReasonSellGe:
		*s = SkillDataSchemaCooldownReasonSellGe
		return nil
	case SkillDataSchemaCooldownReasonDeleteItem:
		*s = SkillDataSchemaCooldownReasonDeleteItem
		return nil
	case SkillDataSchemaCooldownReasonDepositBank:
		*s = SkillDataSchemaCooldownReasonDepositBank
		return nil
	case SkillDataSchemaCooldownReasonWithdrawBank:
		*s = SkillDataSchemaCooldownReasonWithdrawBank
		return nil
	case SkillDataSchemaCooldownReasonEquip:
		*s = SkillDataSchemaCooldownReasonEquip
		return nil
	case SkillDataSchemaCooldownReasonUnequip:
		*s = SkillDataSchemaCooldownReasonUnequip
		return nil
	case SkillDataSchemaCooldownReasonTask:
		*s = SkillDataSchemaCooldownReasonTask
		return nil
	case SkillDataSchemaCooldownReasonRecycling:
		*s = SkillDataSchemaCooldownReasonRecycling
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type SkillDataSchemaDetails struct {
	// The amount of xp gained.
	Xp int `json:"xp"`
	// Objects received.
	Items []DropSchema `json:"items"`
}

// GetXp returns the value of Xp.
func (s *SkillDataSchemaDetails) GetXp() int {
	return s.Xp
}

// GetItems returns the value of Items.
func (s *SkillDataSchemaDetails) GetItems() []DropSchema {
	return s.Items
}

// SetXp sets the value of Xp.
func (s *SkillDataSchemaDetails) SetXp(val int) {
	s.Xp = val
}

// SetItems sets the value of Items.
func (s *SkillDataSchemaDetails) SetItems(val []DropSchema) {
	s.Items = val
}

// Ref: #/components/schemas/SkillResponseSchema
type SkillResponseSchema struct {
	Data SkillDataSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *SkillResponseSchema) GetData() SkillDataSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *SkillResponseSchema) SetData(val SkillDataSchema) {
	s.Data = val
}

func (*SkillResponseSchema) actionCraftingMyNameActionCraftingPostRes()   {}
func (*SkillResponseSchema) actionGatheringMyNameActionGatheringPostRes() {}

// Ref: #/components/schemas/StatusResponseSchema
type StatusResponseSchema struct {
	Data StatusSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *StatusResponseSchema) GetData() StatusSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *StatusResponseSchema) SetData(val StatusSchema) {
	s.Data = val
}

// Ref: #/components/schemas/StatusSchema
type StatusSchema struct {
	// Server status.
	Status string `json:"status"`
	// Game version.
	Version          string               `json:"version"`
	CharactersOnline OptInt               `json:"characters_online"`
	Announcements    []AnnouncementSchema `json:"announcements"`
	// Last server wipe.
	LastWipe string `json:"last_wipe"`
	// Next server wipe.
	NextWipe string `json:"next_wipe"`
}

// GetStatus returns the value of Status.
func (s *StatusSchema) GetStatus() string {
	return s.Status
}

// GetVersion returns the value of Version.
func (s *StatusSchema) GetVersion() string {
	return s.Version
}

// GetCharactersOnline returns the value of CharactersOnline.
func (s *StatusSchema) GetCharactersOnline() OptInt {
	return s.CharactersOnline
}

// GetAnnouncements returns the value of Announcements.
func (s *StatusSchema) GetAnnouncements() []AnnouncementSchema {
	return s.Announcements
}

// GetLastWipe returns the value of LastWipe.
func (s *StatusSchema) GetLastWipe() string {
	return s.LastWipe
}

// GetNextWipe returns the value of NextWipe.
func (s *StatusSchema) GetNextWipe() string {
	return s.NextWipe
}

// SetStatus sets the value of Status.
func (s *StatusSchema) SetStatus(val string) {
	s.Status = val
}

// SetVersion sets the value of Version.
func (s *StatusSchema) SetVersion(val string) {
	s.Version = val
}

// SetCharactersOnline sets the value of CharactersOnline.
func (s *StatusSchema) SetCharactersOnline(val OptInt) {
	s.CharactersOnline = val
}

// SetAnnouncements sets the value of Announcements.
func (s *StatusSchema) SetAnnouncements(val []AnnouncementSchema) {
	s.Announcements = val
}

// SetLastWipe sets the value of LastWipe.
func (s *StatusSchema) SetLastWipe(val string) {
	s.LastWipe = val
}

// SetNextWipe sets the value of NextWipe.
func (s *StatusSchema) SetNextWipe(val string) {
	s.NextWipe = val
}

// Ref: #/components/schemas/TaskDataSchema
type TaskDataSchema struct {
	// Cooldown details.
	Cooldown TaskDataSchemaCooldown `json:"cooldown"`
	// Task details.
	Task TaskDataSchemaTask `json:"task"`
	// Player details.
	Character TaskDataSchemaCharacter `json:"character"`
}

// GetCooldown returns the value of Cooldown.
func (s *TaskDataSchema) GetCooldown() TaskDataSchemaCooldown {
	return s.Cooldown
}

// GetTask returns the value of Task.
func (s *TaskDataSchema) GetTask() TaskDataSchemaTask {
	return s.Task
}

// GetCharacter returns the value of Character.
func (s *TaskDataSchema) GetCharacter() TaskDataSchemaCharacter {
	return s.Character
}

// SetCooldown sets the value of Cooldown.
func (s *TaskDataSchema) SetCooldown(val TaskDataSchemaCooldown) {
	s.Cooldown = val
}

// SetTask sets the value of Task.
func (s *TaskDataSchema) SetTask(val TaskDataSchemaTask) {
	s.Task = val
}

// SetCharacter sets the value of Character.
func (s *TaskDataSchema) SetCharacter(val TaskDataSchemaCharacter) {
	s.Character = val
}

type TaskDataSchemaCharacter struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin TaskDataSchemaCharacterSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptTaskDataSchemaCharacterCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *TaskDataSchemaCharacter) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *TaskDataSchemaCharacter) GetSkin() TaskDataSchemaCharacterSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *TaskDataSchemaCharacter) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *TaskDataSchemaCharacter) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *TaskDataSchemaCharacter) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *TaskDataSchemaCharacter) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *TaskDataSchemaCharacter) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *TaskDataSchemaCharacter) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *TaskDataSchemaCharacter) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *TaskDataSchemaCharacter) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *TaskDataSchemaCharacter) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *TaskDataSchemaCharacter) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *TaskDataSchemaCharacter) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *TaskDataSchemaCharacter) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *TaskDataSchemaCharacter) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *TaskDataSchemaCharacter) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *TaskDataSchemaCharacter) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *TaskDataSchemaCharacter) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *TaskDataSchemaCharacter) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *TaskDataSchemaCharacter) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *TaskDataSchemaCharacter) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *TaskDataSchemaCharacter) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *TaskDataSchemaCharacter) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *TaskDataSchemaCharacter) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *TaskDataSchemaCharacter) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *TaskDataSchemaCharacter) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *TaskDataSchemaCharacter) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *TaskDataSchemaCharacter) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *TaskDataSchemaCharacter) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *TaskDataSchemaCharacter) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *TaskDataSchemaCharacter) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *TaskDataSchemaCharacter) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *TaskDataSchemaCharacter) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *TaskDataSchemaCharacter) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *TaskDataSchemaCharacter) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *TaskDataSchemaCharacter) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *TaskDataSchemaCharacter) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *TaskDataSchemaCharacter) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *TaskDataSchemaCharacter) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *TaskDataSchemaCharacter) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *TaskDataSchemaCharacter) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *TaskDataSchemaCharacter) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *TaskDataSchemaCharacter) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *TaskDataSchemaCharacter) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *TaskDataSchemaCharacter) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *TaskDataSchemaCharacter) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *TaskDataSchemaCharacter) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *TaskDataSchemaCharacter) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *TaskDataSchemaCharacter) GetCooldownExpiration() OptTaskDataSchemaCharacterCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *TaskDataSchemaCharacter) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *TaskDataSchemaCharacter) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *TaskDataSchemaCharacter) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *TaskDataSchemaCharacter) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *TaskDataSchemaCharacter) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *TaskDataSchemaCharacter) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *TaskDataSchemaCharacter) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *TaskDataSchemaCharacter) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *TaskDataSchemaCharacter) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *TaskDataSchemaCharacter) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *TaskDataSchemaCharacter) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *TaskDataSchemaCharacter) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *TaskDataSchemaCharacter) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *TaskDataSchemaCharacter) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *TaskDataSchemaCharacter) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *TaskDataSchemaCharacter) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *TaskDataSchemaCharacter) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *TaskDataSchemaCharacter) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *TaskDataSchemaCharacter) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *TaskDataSchemaCharacter) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *TaskDataSchemaCharacter) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *TaskDataSchemaCharacter) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *TaskDataSchemaCharacter) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *TaskDataSchemaCharacter) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *TaskDataSchemaCharacter) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *TaskDataSchemaCharacter) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *TaskDataSchemaCharacter) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *TaskDataSchemaCharacter) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *TaskDataSchemaCharacter) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *TaskDataSchemaCharacter) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *TaskDataSchemaCharacter) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *TaskDataSchemaCharacter) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *TaskDataSchemaCharacter) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *TaskDataSchemaCharacter) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *TaskDataSchemaCharacter) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *TaskDataSchemaCharacter) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *TaskDataSchemaCharacter) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *TaskDataSchemaCharacter) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *TaskDataSchemaCharacter) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *TaskDataSchemaCharacter) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *TaskDataSchemaCharacter) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *TaskDataSchemaCharacter) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *TaskDataSchemaCharacter) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *TaskDataSchemaCharacter) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *TaskDataSchemaCharacter) SetSkin(val TaskDataSchemaCharacterSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *TaskDataSchemaCharacter) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *TaskDataSchemaCharacter) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *TaskDataSchemaCharacter) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *TaskDataSchemaCharacter) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *TaskDataSchemaCharacter) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *TaskDataSchemaCharacter) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *TaskDataSchemaCharacter) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *TaskDataSchemaCharacter) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *TaskDataSchemaCharacter) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *TaskDataSchemaCharacter) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *TaskDataSchemaCharacter) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *TaskDataSchemaCharacter) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *TaskDataSchemaCharacter) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *TaskDataSchemaCharacter) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *TaskDataSchemaCharacter) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *TaskDataSchemaCharacter) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *TaskDataSchemaCharacter) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *TaskDataSchemaCharacter) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *TaskDataSchemaCharacter) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *TaskDataSchemaCharacter) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *TaskDataSchemaCharacter) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *TaskDataSchemaCharacter) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *TaskDataSchemaCharacter) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *TaskDataSchemaCharacter) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *TaskDataSchemaCharacter) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *TaskDataSchemaCharacter) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *TaskDataSchemaCharacter) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *TaskDataSchemaCharacter) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *TaskDataSchemaCharacter) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *TaskDataSchemaCharacter) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *TaskDataSchemaCharacter) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *TaskDataSchemaCharacter) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *TaskDataSchemaCharacter) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *TaskDataSchemaCharacter) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *TaskDataSchemaCharacter) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *TaskDataSchemaCharacter) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *TaskDataSchemaCharacter) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *TaskDataSchemaCharacter) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *TaskDataSchemaCharacter) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *TaskDataSchemaCharacter) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *TaskDataSchemaCharacter) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *TaskDataSchemaCharacter) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *TaskDataSchemaCharacter) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *TaskDataSchemaCharacter) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *TaskDataSchemaCharacter) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *TaskDataSchemaCharacter) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *TaskDataSchemaCharacter) SetCooldownExpiration(val OptTaskDataSchemaCharacterCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *TaskDataSchemaCharacter) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *TaskDataSchemaCharacter) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *TaskDataSchemaCharacter) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *TaskDataSchemaCharacter) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *TaskDataSchemaCharacter) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *TaskDataSchemaCharacter) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *TaskDataSchemaCharacter) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *TaskDataSchemaCharacter) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *TaskDataSchemaCharacter) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *TaskDataSchemaCharacter) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *TaskDataSchemaCharacter) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *TaskDataSchemaCharacter) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *TaskDataSchemaCharacter) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *TaskDataSchemaCharacter) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *TaskDataSchemaCharacter) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *TaskDataSchemaCharacter) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *TaskDataSchemaCharacter) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *TaskDataSchemaCharacter) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *TaskDataSchemaCharacter) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *TaskDataSchemaCharacter) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *TaskDataSchemaCharacter) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *TaskDataSchemaCharacter) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *TaskDataSchemaCharacter) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *TaskDataSchemaCharacter) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *TaskDataSchemaCharacter) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *TaskDataSchemaCharacter) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *TaskDataSchemaCharacter) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *TaskDataSchemaCharacter) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *TaskDataSchemaCharacter) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *TaskDataSchemaCharacter) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *TaskDataSchemaCharacter) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *TaskDataSchemaCharacter) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *TaskDataSchemaCharacter) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *TaskDataSchemaCharacter) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *TaskDataSchemaCharacter) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *TaskDataSchemaCharacter) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *TaskDataSchemaCharacter) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *TaskDataSchemaCharacter) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *TaskDataSchemaCharacter) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *TaskDataSchemaCharacter) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *TaskDataSchemaCharacter) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *TaskDataSchemaCharacter) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *TaskDataSchemaCharacter) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// TaskDataSchemaCharacterCooldownExpiration represents sum type.
type TaskDataSchemaCharacterCooldownExpiration struct {
	Type     TaskDataSchemaCharacterCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// TaskDataSchemaCharacterCooldownExpirationType is oneOf type of TaskDataSchemaCharacterCooldownExpiration.
type TaskDataSchemaCharacterCooldownExpirationType string

// Possible values for TaskDataSchemaCharacterCooldownExpirationType.
const (
	DateTimeTaskDataSchemaCharacterCooldownExpiration TaskDataSchemaCharacterCooldownExpirationType = "time.Time"
	NullTaskDataSchemaCharacterCooldownExpiration     TaskDataSchemaCharacterCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether TaskDataSchemaCharacterCooldownExpiration is time.Time.
func (s TaskDataSchemaCharacterCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeTaskDataSchemaCharacterCooldownExpiration
}

// IsNull reports whether TaskDataSchemaCharacterCooldownExpiration is struct{}.
func (s TaskDataSchemaCharacterCooldownExpiration) IsNull() bool {
	return s.Type == NullTaskDataSchemaCharacterCooldownExpiration
}

// SetDateTime sets TaskDataSchemaCharacterCooldownExpiration to time.Time.
func (s *TaskDataSchemaCharacterCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeTaskDataSchemaCharacterCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if TaskDataSchemaCharacterCooldownExpiration is time.Time.
func (s TaskDataSchemaCharacterCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeTaskDataSchemaCharacterCooldownExpiration returns new TaskDataSchemaCharacterCooldownExpiration from time.Time.
func NewDateTimeTaskDataSchemaCharacterCooldownExpiration(v time.Time) TaskDataSchemaCharacterCooldownExpiration {
	var s TaskDataSchemaCharacterCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets TaskDataSchemaCharacterCooldownExpiration to struct{}.
func (s *TaskDataSchemaCharacterCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullTaskDataSchemaCharacterCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if TaskDataSchemaCharacterCooldownExpiration is struct{}.
func (s TaskDataSchemaCharacterCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullTaskDataSchemaCharacterCooldownExpiration returns new TaskDataSchemaCharacterCooldownExpiration from struct{}.
func NewNullTaskDataSchemaCharacterCooldownExpiration(v struct{}) TaskDataSchemaCharacterCooldownExpiration {
	var s TaskDataSchemaCharacterCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type TaskDataSchemaCharacterSkin string

const (
	TaskDataSchemaCharacterSkinMen1   TaskDataSchemaCharacterSkin = "men1"
	TaskDataSchemaCharacterSkinMen2   TaskDataSchemaCharacterSkin = "men2"
	TaskDataSchemaCharacterSkinMen3   TaskDataSchemaCharacterSkin = "men3"
	TaskDataSchemaCharacterSkinWomen1 TaskDataSchemaCharacterSkin = "women1"
	TaskDataSchemaCharacterSkinWomen2 TaskDataSchemaCharacterSkin = "women2"
	TaskDataSchemaCharacterSkinWomen3 TaskDataSchemaCharacterSkin = "women3"
)

// AllValues returns all TaskDataSchemaCharacterSkin values.
func (TaskDataSchemaCharacterSkin) AllValues() []TaskDataSchemaCharacterSkin {
	return []TaskDataSchemaCharacterSkin{
		TaskDataSchemaCharacterSkinMen1,
		TaskDataSchemaCharacterSkinMen2,
		TaskDataSchemaCharacterSkinMen3,
		TaskDataSchemaCharacterSkinWomen1,
		TaskDataSchemaCharacterSkinWomen2,
		TaskDataSchemaCharacterSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TaskDataSchemaCharacterSkin) MarshalText() ([]byte, error) {
	switch s {
	case TaskDataSchemaCharacterSkinMen1:
		return []byte(s), nil
	case TaskDataSchemaCharacterSkinMen2:
		return []byte(s), nil
	case TaskDataSchemaCharacterSkinMen3:
		return []byte(s), nil
	case TaskDataSchemaCharacterSkinWomen1:
		return []byte(s), nil
	case TaskDataSchemaCharacterSkinWomen2:
		return []byte(s), nil
	case TaskDataSchemaCharacterSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TaskDataSchemaCharacterSkin) UnmarshalText(data []byte) error {
	switch TaskDataSchemaCharacterSkin(data) {
	case TaskDataSchemaCharacterSkinMen1:
		*s = TaskDataSchemaCharacterSkinMen1
		return nil
	case TaskDataSchemaCharacterSkinMen2:
		*s = TaskDataSchemaCharacterSkinMen2
		return nil
	case TaskDataSchemaCharacterSkinMen3:
		*s = TaskDataSchemaCharacterSkinMen3
		return nil
	case TaskDataSchemaCharacterSkinWomen1:
		*s = TaskDataSchemaCharacterSkinWomen1
		return nil
	case TaskDataSchemaCharacterSkinWomen2:
		*s = TaskDataSchemaCharacterSkinWomen2
		return nil
	case TaskDataSchemaCharacterSkinWomen3:
		*s = TaskDataSchemaCharacterSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type TaskDataSchemaCooldown struct {
	// The total seconds of the cooldown.
	TotalSeconds int `json:"total_seconds"`
	// The remaining seconds of the cooldown.
	RemainingSeconds int `json:"remaining_seconds"`
	// The expiration of the cooldown.
	Expiration time.Time `json:"expiration"`
	// The reason of the cooldown.
	Reason TaskDataSchemaCooldownReason `json:"reason"`
}

// GetTotalSeconds returns the value of TotalSeconds.
func (s *TaskDataSchemaCooldown) GetTotalSeconds() int {
	return s.TotalSeconds
}

// GetRemainingSeconds returns the value of RemainingSeconds.
func (s *TaskDataSchemaCooldown) GetRemainingSeconds() int {
	return s.RemainingSeconds
}

// GetExpiration returns the value of Expiration.
func (s *TaskDataSchemaCooldown) GetExpiration() time.Time {
	return s.Expiration
}

// GetReason returns the value of Reason.
func (s *TaskDataSchemaCooldown) GetReason() TaskDataSchemaCooldownReason {
	return s.Reason
}

// SetTotalSeconds sets the value of TotalSeconds.
func (s *TaskDataSchemaCooldown) SetTotalSeconds(val int) {
	s.TotalSeconds = val
}

// SetRemainingSeconds sets the value of RemainingSeconds.
func (s *TaskDataSchemaCooldown) SetRemainingSeconds(val int) {
	s.RemainingSeconds = val
}

// SetExpiration sets the value of Expiration.
func (s *TaskDataSchemaCooldown) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetReason sets the value of Reason.
func (s *TaskDataSchemaCooldown) SetReason(val TaskDataSchemaCooldownReason) {
	s.Reason = val
}

// The reason of the cooldown.
type TaskDataSchemaCooldownReason string

const (
	TaskDataSchemaCooldownReasonMovement     TaskDataSchemaCooldownReason = "movement"
	TaskDataSchemaCooldownReasonFight        TaskDataSchemaCooldownReason = "fight"
	TaskDataSchemaCooldownReasonCrafting     TaskDataSchemaCooldownReason = "crafting"
	TaskDataSchemaCooldownReasonGathering    TaskDataSchemaCooldownReason = "gathering"
	TaskDataSchemaCooldownReasonBuyGe        TaskDataSchemaCooldownReason = "buy_ge"
	TaskDataSchemaCooldownReasonSellGe       TaskDataSchemaCooldownReason = "sell_ge"
	TaskDataSchemaCooldownReasonDeleteItem   TaskDataSchemaCooldownReason = "delete_item"
	TaskDataSchemaCooldownReasonDepositBank  TaskDataSchemaCooldownReason = "deposit_bank"
	TaskDataSchemaCooldownReasonWithdrawBank TaskDataSchemaCooldownReason = "withdraw_bank"
	TaskDataSchemaCooldownReasonEquip        TaskDataSchemaCooldownReason = "equip"
	TaskDataSchemaCooldownReasonUnequip      TaskDataSchemaCooldownReason = "unequip"
	TaskDataSchemaCooldownReasonTask         TaskDataSchemaCooldownReason = "task"
	TaskDataSchemaCooldownReasonRecycling    TaskDataSchemaCooldownReason = "recycling"
)

// AllValues returns all TaskDataSchemaCooldownReason values.
func (TaskDataSchemaCooldownReason) AllValues() []TaskDataSchemaCooldownReason {
	return []TaskDataSchemaCooldownReason{
		TaskDataSchemaCooldownReasonMovement,
		TaskDataSchemaCooldownReasonFight,
		TaskDataSchemaCooldownReasonCrafting,
		TaskDataSchemaCooldownReasonGathering,
		TaskDataSchemaCooldownReasonBuyGe,
		TaskDataSchemaCooldownReasonSellGe,
		TaskDataSchemaCooldownReasonDeleteItem,
		TaskDataSchemaCooldownReasonDepositBank,
		TaskDataSchemaCooldownReasonWithdrawBank,
		TaskDataSchemaCooldownReasonEquip,
		TaskDataSchemaCooldownReasonUnequip,
		TaskDataSchemaCooldownReasonTask,
		TaskDataSchemaCooldownReasonRecycling,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TaskDataSchemaCooldownReason) MarshalText() ([]byte, error) {
	switch s {
	case TaskDataSchemaCooldownReasonMovement:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonFight:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonCrafting:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonGathering:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonBuyGe:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonSellGe:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonDeleteItem:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonDepositBank:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonWithdrawBank:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonEquip:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonUnequip:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonTask:
		return []byte(s), nil
	case TaskDataSchemaCooldownReasonRecycling:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TaskDataSchemaCooldownReason) UnmarshalText(data []byte) error {
	switch TaskDataSchemaCooldownReason(data) {
	case TaskDataSchemaCooldownReasonMovement:
		*s = TaskDataSchemaCooldownReasonMovement
		return nil
	case TaskDataSchemaCooldownReasonFight:
		*s = TaskDataSchemaCooldownReasonFight
		return nil
	case TaskDataSchemaCooldownReasonCrafting:
		*s = TaskDataSchemaCooldownReasonCrafting
		return nil
	case TaskDataSchemaCooldownReasonGathering:
		*s = TaskDataSchemaCooldownReasonGathering
		return nil
	case TaskDataSchemaCooldownReasonBuyGe:
		*s = TaskDataSchemaCooldownReasonBuyGe
		return nil
	case TaskDataSchemaCooldownReasonSellGe:
		*s = TaskDataSchemaCooldownReasonSellGe
		return nil
	case TaskDataSchemaCooldownReasonDeleteItem:
		*s = TaskDataSchemaCooldownReasonDeleteItem
		return nil
	case TaskDataSchemaCooldownReasonDepositBank:
		*s = TaskDataSchemaCooldownReasonDepositBank
		return nil
	case TaskDataSchemaCooldownReasonWithdrawBank:
		*s = TaskDataSchemaCooldownReasonWithdrawBank
		return nil
	case TaskDataSchemaCooldownReasonEquip:
		*s = TaskDataSchemaCooldownReasonEquip
		return nil
	case TaskDataSchemaCooldownReasonUnequip:
		*s = TaskDataSchemaCooldownReasonUnequip
		return nil
	case TaskDataSchemaCooldownReasonTask:
		*s = TaskDataSchemaCooldownReasonTask
		return nil
	case TaskDataSchemaCooldownReasonRecycling:
		*s = TaskDataSchemaCooldownReasonRecycling
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type TaskDataSchemaTask struct {
	// Task objective.
	Code string `json:"code"`
	// The type of task.
	Type TaskDataSchemaTaskType `json:"type"`
	// The total required to complete the task.
	Total int `json:"total"`
}

// GetCode returns the value of Code.
func (s *TaskDataSchemaTask) GetCode() string {
	return s.Code
}

// GetType returns the value of Type.
func (s *TaskDataSchemaTask) GetType() TaskDataSchemaTaskType {
	return s.Type
}

// GetTotal returns the value of Total.
func (s *TaskDataSchemaTask) GetTotal() int {
	return s.Total
}

// SetCode sets the value of Code.
func (s *TaskDataSchemaTask) SetCode(val string) {
	s.Code = val
}

// SetType sets the value of Type.
func (s *TaskDataSchemaTask) SetType(val TaskDataSchemaTaskType) {
	s.Type = val
}

// SetTotal sets the value of Total.
func (s *TaskDataSchemaTask) SetTotal(val int) {
	s.Total = val
}

// The type of task.
type TaskDataSchemaTaskType string

const (
	TaskDataSchemaTaskTypeMonsters  TaskDataSchemaTaskType = "monsters"
	TaskDataSchemaTaskTypeResources TaskDataSchemaTaskType = "resources"
	TaskDataSchemaTaskTypeCrafts    TaskDataSchemaTaskType = "crafts"
)

// AllValues returns all TaskDataSchemaTaskType values.
func (TaskDataSchemaTaskType) AllValues() []TaskDataSchemaTaskType {
	return []TaskDataSchemaTaskType{
		TaskDataSchemaTaskTypeMonsters,
		TaskDataSchemaTaskTypeResources,
		TaskDataSchemaTaskTypeCrafts,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TaskDataSchemaTaskType) MarshalText() ([]byte, error) {
	switch s {
	case TaskDataSchemaTaskTypeMonsters:
		return []byte(s), nil
	case TaskDataSchemaTaskTypeResources:
		return []byte(s), nil
	case TaskDataSchemaTaskTypeCrafts:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TaskDataSchemaTaskType) UnmarshalText(data []byte) error {
	switch TaskDataSchemaTaskType(data) {
	case TaskDataSchemaTaskTypeMonsters:
		*s = TaskDataSchemaTaskTypeMonsters
		return nil
	case TaskDataSchemaTaskTypeResources:
		*s = TaskDataSchemaTaskTypeResources
		return nil
	case TaskDataSchemaTaskTypeCrafts:
		*s = TaskDataSchemaTaskTypeCrafts
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/TaskResponseSchema
type TaskResponseSchema struct {
	Data TaskDataSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *TaskResponseSchema) GetData() TaskDataSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *TaskResponseSchema) SetData(val TaskDataSchema) {
	s.Data = val
}

func (*TaskResponseSchema) actionAcceptNewTaskMyNameActionTaskNewPostRes() {}

// Ref: #/components/schemas/TaskRewardDataSchema
type TaskRewardDataSchema struct {
	// Cooldown details.
	Cooldown TaskRewardDataSchemaCooldown `json:"cooldown"`
	// Reward details.
	Reward TaskRewardDataSchemaReward `json:"reward"`
	// Player details.
	Character TaskRewardDataSchemaCharacter `json:"character"`
}

// GetCooldown returns the value of Cooldown.
func (s *TaskRewardDataSchema) GetCooldown() TaskRewardDataSchemaCooldown {
	return s.Cooldown
}

// GetReward returns the value of Reward.
func (s *TaskRewardDataSchema) GetReward() TaskRewardDataSchemaReward {
	return s.Reward
}

// GetCharacter returns the value of Character.
func (s *TaskRewardDataSchema) GetCharacter() TaskRewardDataSchemaCharacter {
	return s.Character
}

// SetCooldown sets the value of Cooldown.
func (s *TaskRewardDataSchema) SetCooldown(val TaskRewardDataSchemaCooldown) {
	s.Cooldown = val
}

// SetReward sets the value of Reward.
func (s *TaskRewardDataSchema) SetReward(val TaskRewardDataSchemaReward) {
	s.Reward = val
}

// SetCharacter sets the value of Character.
func (s *TaskRewardDataSchema) SetCharacter(val TaskRewardDataSchemaCharacter) {
	s.Character = val
}

type TaskRewardDataSchemaCharacter struct {
	// Name of the character.
	Name string `json:"name"`
	// Character skin code.
	Skin TaskRewardDataSchemaCharacterSkin `json:"skin"`
	// Combat level.
	Level int `json:"level"`
	// The current xp level of the combat level.
	Xp int `json:"xp"`
	// XP required to level up the character.
	MaxXp int `json:"max_xp"`
	// Total XP of your character.
	TotalXp int `json:"total_xp"`
	// The numbers of golds on this character.
	Gold int `json:"gold"`
	// *Not available, on the roadmap. Character movement speed.
	Speed int `json:"speed"`
	// Mining level.
	MiningLevel int `json:"mining_level"`
	// The current xp level of the Mining skill.
	MiningXp int `json:"mining_xp"`
	// Mining XP required to level up the skill.
	MiningMaxXp int `json:"mining_max_xp"`
	// Woodcutting level.
	WoodcuttingLevel int `json:"woodcutting_level"`
	// The current xp level of the Woodcutting skill.
	WoodcuttingXp int `json:"woodcutting_xp"`
	// Woodcutting XP required to level up the skill.
	WoodcuttingMaxXp int `json:"woodcutting_max_xp"`
	// Fishing level.
	FishingLevel int `json:"fishing_level"`
	// The current xp level of the Fishing skill.
	FishingXp int `json:"fishing_xp"`
	// Fishing XP required to level up the skill.
	FishingMaxXp int `json:"fishing_max_xp"`
	// Weaponcrafting level.
	WeaponcraftingLevel int `json:"weaponcrafting_level"`
	// The current xp level of the Weaponcrafting skill.
	WeaponcraftingXp int `json:"weaponcrafting_xp"`
	// Weaponcrafting XP required to level up the skill.
	WeaponcraftingMaxXp int `json:"weaponcrafting_max_xp"`
	// Gearcrafting level.
	GearcraftingLevel int `json:"gearcrafting_level"`
	// The current xp level of the Gearcrafting skill.
	GearcraftingXp int `json:"gearcrafting_xp"`
	// Gearcrafting XP required to level up the skill.
	GearcraftingMaxXp int `json:"gearcrafting_max_xp"`
	// Jewelrycrafting level.
	JewelrycraftingLevel int `json:"jewelrycrafting_level"`
	// The current xp level of the Jewelrycrafting skill.
	JewelrycraftingXp int `json:"jewelrycrafting_xp"`
	// Jewelrycrafting XP required to level up the skill.
	JewelrycraftingMaxXp int `json:"jewelrycrafting_max_xp"`
	// The current xp level of the Cooking skill.
	CookingLevel int `json:"cooking_level"`
	// Cooking XP.
	CookingXp int `json:"cooking_xp"`
	// Cooking XP required to level up the skill.
	CookingMaxXp int `json:"cooking_max_xp"`
	// Character HP.
	Hp int `json:"hp"`
	// *Character Haste. Increase speed attack (reduce fight cooldown).
	Haste int `json:"haste"`
	// *Not available, on the roadmap. Character Critical   Strike. Critical strikes increase the
	// attack's damage.
	CriticalStrike int `json:"critical_strike"`
	// *Not available, on the roadmap. Regenerates life at the start of each turn.
	Stamina int `json:"stamina"`
	// Fire attack.
	AttackFire int `json:"attack_fire"`
	// Earth attack.
	AttackEarth int `json:"attack_earth"`
	// Water attack.
	AttackWater int `json:"attack_water"`
	// Air attack.
	AttackAir int `json:"attack_air"`
	// % Fire damage.
	DmgFire int `json:"dmg_fire"`
	// % Earth damage.
	DmgEarth int `json:"dmg_earth"`
	// % Water damage.
	DmgWater int `json:"dmg_water"`
	// % Air damage.
	DmgAir int `json:"dmg_air"`
	// % Fire resistance.
	ResFire int `json:"res_fire"`
	// % Earth resistance.
	ResEarth int `json:"res_earth"`
	// % Water resistance.
	ResWater int `json:"res_water"`
	// % Air resistance.
	ResAir int `json:"res_air"`
	// Character x coordinate.
	X int `json:"x"`
	// Character y coordinate.
	Y int `json:"y"`
	// Cooldown in seconds.
	Cooldown int `json:"cooldown"`
	// Datetime Cooldown expiration.
	CooldownExpiration OptTaskRewardDataSchemaCharacterCooldownExpiration `json:"cooldown_expiration"`
	// Weapon slot.
	WeaponSlot string `json:"weapon_slot"`
	// Shield slot.
	ShieldSlot string `json:"shield_slot"`
	// Helmet slot.
	HelmetSlot string `json:"helmet_slot"`
	// Body armor slot.
	BodyArmorSlot string `json:"body_armor_slot"`
	// Leg armor slot.
	LegArmorSlot string `json:"leg_armor_slot"`
	// Boots slot.
	BootsSlot string `json:"boots_slot"`
	// Ring 1 slot.
	Ring1Slot string `json:"ring1_slot"`
	// Ring 2 slot.
	Ring2Slot string `json:"ring2_slot"`
	// Amulet slot.
	AmuletSlot string `json:"amulet_slot"`
	// Artifact 1 slot.
	Artifact1Slot string `json:"artifact1_slot"`
	// Artifact 2 slot.
	Artifact2Slot string `json:"artifact2_slot"`
	// Artifact 3 slot.
	Artifact3Slot string `json:"artifact3_slot"`
	// Consumable 1 slot.
	Consumable1Slot string `json:"consumable1_slot"`
	// Consumable 1 quantity.
	Consumable1SlotQuantity int `json:"consumable1_slot_quantity"`
	// Consumable 2 slot.
	Consumable2Slot string `json:"consumable2_slot"`
	// Consumable 2 quantity.
	Consumable2SlotQuantity int `json:"consumable2_slot_quantity"`
	// Task in progress.
	Task string `json:"task"`
	// Task type.
	TaskType string `json:"task_type"`
	// Task progression.
	TaskProgress int `json:"task_progress"`
	// Task total objective.
	TaskTotal int `json:"task_total"`
	// Inventory max items.
	InventoryMaxItems int `json:"inventory_max_items"`
	// List of inventory slots.
	Inventory []InventorySlot `json:"inventory"`
	// Deprecated** Inventory slot 1.
	InventorySlot1 string `json:"inventory_slot1"`
	// Deprecated** Inventory 1 quantity.
	InventorySlot1Quantity int `json:"inventory_slot1_quantity"`
	// Deprecated** Inventory slot 2.
	InventorySlot2 string `json:"inventory_slot2"`
	// Deprecated** Inventory 2 quantity.
	InventorySlot2Quantity int `json:"inventory_slot2_quantity"`
	// Deprecated** Inventory slot 3.
	InventorySlot3 string `json:"inventory_slot3"`
	// Deprecated** Inventory 3 quantity.
	InventorySlot3Quantity int `json:"inventory_slot3_quantity"`
	// Deprecated** Inventory slot 4.
	InventorySlot4 string `json:"inventory_slot4"`
	// Deprecated** Inventory 4 quantity.
	InventorySlot4Quantity int `json:"inventory_slot4_quantity"`
	// Deprecated** Inventory slot 5.
	InventorySlot5 string `json:"inventory_slot5"`
	// Deprecated** Inventory 5 quantity.
	InventorySlot5Quantity int `json:"inventory_slot5_quantity"`
	// Deprecated** Inventory slot 6.
	InventorySlot6 string `json:"inventory_slot6"`
	// Deprecated** Inventory 6 quantity.
	InventorySlot6Quantity int `json:"inventory_slot6_quantity"`
	// Deprecated** Inventory slot 7.
	InventorySlot7 string `json:"inventory_slot7"`
	// Deprecated** Inventory 7 quantity.
	InventorySlot7Quantity int `json:"inventory_slot7_quantity"`
	// Deprecated** Inventory slot 8.
	InventorySlot8 string `json:"inventory_slot8"`
	// Deprecated** Inventory 8 quantity.
	InventorySlot8Quantity int `json:"inventory_slot8_quantity"`
	// Deprecated** Inventory slot 9.
	InventorySlot9 string `json:"inventory_slot9"`
	// Deprecated** Inventory 9 quantity.
	InventorySlot9Quantity int `json:"inventory_slot9_quantity"`
	// Deprecated** Inventory slot 10.
	InventorySlot10 string `json:"inventory_slot10"`
	// Deprecated** Inventory 10 quantity.
	InventorySlot10Quantity int `json:"inventory_slot10_quantity"`
	// Deprecated** Inventory slot 11.
	InventorySlot11 string `json:"inventory_slot11"`
	// Deprecated** Inventory 11 quantity.
	InventorySlot11Quantity int `json:"inventory_slot11_quantity"`
	// Deprecated** nventory slot 12.
	InventorySlot12 string `json:"inventory_slot12"`
	// Deprecated** Inventory 12 quantity.
	InventorySlot12Quantity int `json:"inventory_slot12_quantity"`
	// Deprecated** Inventory slot 13.
	InventorySlot13 string `json:"inventory_slot13"`
	// Deprecated** Inventory 13 quantity.
	InventorySlot13Quantity int `json:"inventory_slot13_quantity"`
	// Deprecated** Inventory slot 14.
	InventorySlot14 string `json:"inventory_slot14"`
	// Deprecated** Inventory 14 quantity.
	InventorySlot14Quantity int `json:"inventory_slot14_quantity"`
	// Deprecated** Inventory slot 15.
	InventorySlot15 string `json:"inventory_slot15"`
	// Deprecated** Inventory 15 quantity.
	InventorySlot15Quantity int `json:"inventory_slot15_quantity"`
	// Deprecated** Inventory slot 16.
	InventorySlot16 string `json:"inventory_slot16"`
	// Deprecated** Inventory 16 quantity.
	InventorySlot16Quantity int `json:"inventory_slot16_quantity"`
	// Deprecated** Inventory slot 17.
	InventorySlot17 string `json:"inventory_slot17"`
	// Deprecated** Inventory 17 quantity.
	InventorySlot17Quantity int `json:"inventory_slot17_quantity"`
	// Deprecated** Inventory slot 18.
	InventorySlot18 string `json:"inventory_slot18"`
	// Deprecated** Inventory 18 quantity.
	InventorySlot18Quantity int `json:"inventory_slot18_quantity"`
	// Deprecated** Inventory slot 19.
	InventorySlot19 string `json:"inventory_slot19"`
	// Deprecated** Inventory 19 quantity.
	InventorySlot19Quantity int `json:"inventory_slot19_quantity"`
	// Deprecated** Inventory slot 20.
	InventorySlot20 string `json:"inventory_slot20"`
	// Deprecated** Inventory 20 quantity.
	InventorySlot20Quantity int `json:"inventory_slot20_quantity"`
}

// GetName returns the value of Name.
func (s *TaskRewardDataSchemaCharacter) GetName() string {
	return s.Name
}

// GetSkin returns the value of Skin.
func (s *TaskRewardDataSchemaCharacter) GetSkin() TaskRewardDataSchemaCharacterSkin {
	return s.Skin
}

// GetLevel returns the value of Level.
func (s *TaskRewardDataSchemaCharacter) GetLevel() int {
	return s.Level
}

// GetXp returns the value of Xp.
func (s *TaskRewardDataSchemaCharacter) GetXp() int {
	return s.Xp
}

// GetMaxXp returns the value of MaxXp.
func (s *TaskRewardDataSchemaCharacter) GetMaxXp() int {
	return s.MaxXp
}

// GetTotalXp returns the value of TotalXp.
func (s *TaskRewardDataSchemaCharacter) GetTotalXp() int {
	return s.TotalXp
}

// GetGold returns the value of Gold.
func (s *TaskRewardDataSchemaCharacter) GetGold() int {
	return s.Gold
}

// GetSpeed returns the value of Speed.
func (s *TaskRewardDataSchemaCharacter) GetSpeed() int {
	return s.Speed
}

// GetMiningLevel returns the value of MiningLevel.
func (s *TaskRewardDataSchemaCharacter) GetMiningLevel() int {
	return s.MiningLevel
}

// GetMiningXp returns the value of MiningXp.
func (s *TaskRewardDataSchemaCharacter) GetMiningXp() int {
	return s.MiningXp
}

// GetMiningMaxXp returns the value of MiningMaxXp.
func (s *TaskRewardDataSchemaCharacter) GetMiningMaxXp() int {
	return s.MiningMaxXp
}

// GetWoodcuttingLevel returns the value of WoodcuttingLevel.
func (s *TaskRewardDataSchemaCharacter) GetWoodcuttingLevel() int {
	return s.WoodcuttingLevel
}

// GetWoodcuttingXp returns the value of WoodcuttingXp.
func (s *TaskRewardDataSchemaCharacter) GetWoodcuttingXp() int {
	return s.WoodcuttingXp
}

// GetWoodcuttingMaxXp returns the value of WoodcuttingMaxXp.
func (s *TaskRewardDataSchemaCharacter) GetWoodcuttingMaxXp() int {
	return s.WoodcuttingMaxXp
}

// GetFishingLevel returns the value of FishingLevel.
func (s *TaskRewardDataSchemaCharacter) GetFishingLevel() int {
	return s.FishingLevel
}

// GetFishingXp returns the value of FishingXp.
func (s *TaskRewardDataSchemaCharacter) GetFishingXp() int {
	return s.FishingXp
}

// GetFishingMaxXp returns the value of FishingMaxXp.
func (s *TaskRewardDataSchemaCharacter) GetFishingMaxXp() int {
	return s.FishingMaxXp
}

// GetWeaponcraftingLevel returns the value of WeaponcraftingLevel.
func (s *TaskRewardDataSchemaCharacter) GetWeaponcraftingLevel() int {
	return s.WeaponcraftingLevel
}

// GetWeaponcraftingXp returns the value of WeaponcraftingXp.
func (s *TaskRewardDataSchemaCharacter) GetWeaponcraftingXp() int {
	return s.WeaponcraftingXp
}

// GetWeaponcraftingMaxXp returns the value of WeaponcraftingMaxXp.
func (s *TaskRewardDataSchemaCharacter) GetWeaponcraftingMaxXp() int {
	return s.WeaponcraftingMaxXp
}

// GetGearcraftingLevel returns the value of GearcraftingLevel.
func (s *TaskRewardDataSchemaCharacter) GetGearcraftingLevel() int {
	return s.GearcraftingLevel
}

// GetGearcraftingXp returns the value of GearcraftingXp.
func (s *TaskRewardDataSchemaCharacter) GetGearcraftingXp() int {
	return s.GearcraftingXp
}

// GetGearcraftingMaxXp returns the value of GearcraftingMaxXp.
func (s *TaskRewardDataSchemaCharacter) GetGearcraftingMaxXp() int {
	return s.GearcraftingMaxXp
}

// GetJewelrycraftingLevel returns the value of JewelrycraftingLevel.
func (s *TaskRewardDataSchemaCharacter) GetJewelrycraftingLevel() int {
	return s.JewelrycraftingLevel
}

// GetJewelrycraftingXp returns the value of JewelrycraftingXp.
func (s *TaskRewardDataSchemaCharacter) GetJewelrycraftingXp() int {
	return s.JewelrycraftingXp
}

// GetJewelrycraftingMaxXp returns the value of JewelrycraftingMaxXp.
func (s *TaskRewardDataSchemaCharacter) GetJewelrycraftingMaxXp() int {
	return s.JewelrycraftingMaxXp
}

// GetCookingLevel returns the value of CookingLevel.
func (s *TaskRewardDataSchemaCharacter) GetCookingLevel() int {
	return s.CookingLevel
}

// GetCookingXp returns the value of CookingXp.
func (s *TaskRewardDataSchemaCharacter) GetCookingXp() int {
	return s.CookingXp
}

// GetCookingMaxXp returns the value of CookingMaxXp.
func (s *TaskRewardDataSchemaCharacter) GetCookingMaxXp() int {
	return s.CookingMaxXp
}

// GetHp returns the value of Hp.
func (s *TaskRewardDataSchemaCharacter) GetHp() int {
	return s.Hp
}

// GetHaste returns the value of Haste.
func (s *TaskRewardDataSchemaCharacter) GetHaste() int {
	return s.Haste
}

// GetCriticalStrike returns the value of CriticalStrike.
func (s *TaskRewardDataSchemaCharacter) GetCriticalStrike() int {
	return s.CriticalStrike
}

// GetStamina returns the value of Stamina.
func (s *TaskRewardDataSchemaCharacter) GetStamina() int {
	return s.Stamina
}

// GetAttackFire returns the value of AttackFire.
func (s *TaskRewardDataSchemaCharacter) GetAttackFire() int {
	return s.AttackFire
}

// GetAttackEarth returns the value of AttackEarth.
func (s *TaskRewardDataSchemaCharacter) GetAttackEarth() int {
	return s.AttackEarth
}

// GetAttackWater returns the value of AttackWater.
func (s *TaskRewardDataSchemaCharacter) GetAttackWater() int {
	return s.AttackWater
}

// GetAttackAir returns the value of AttackAir.
func (s *TaskRewardDataSchemaCharacter) GetAttackAir() int {
	return s.AttackAir
}

// GetDmgFire returns the value of DmgFire.
func (s *TaskRewardDataSchemaCharacter) GetDmgFire() int {
	return s.DmgFire
}

// GetDmgEarth returns the value of DmgEarth.
func (s *TaskRewardDataSchemaCharacter) GetDmgEarth() int {
	return s.DmgEarth
}

// GetDmgWater returns the value of DmgWater.
func (s *TaskRewardDataSchemaCharacter) GetDmgWater() int {
	return s.DmgWater
}

// GetDmgAir returns the value of DmgAir.
func (s *TaskRewardDataSchemaCharacter) GetDmgAir() int {
	return s.DmgAir
}

// GetResFire returns the value of ResFire.
func (s *TaskRewardDataSchemaCharacter) GetResFire() int {
	return s.ResFire
}

// GetResEarth returns the value of ResEarth.
func (s *TaskRewardDataSchemaCharacter) GetResEarth() int {
	return s.ResEarth
}

// GetResWater returns the value of ResWater.
func (s *TaskRewardDataSchemaCharacter) GetResWater() int {
	return s.ResWater
}

// GetResAir returns the value of ResAir.
func (s *TaskRewardDataSchemaCharacter) GetResAir() int {
	return s.ResAir
}

// GetX returns the value of X.
func (s *TaskRewardDataSchemaCharacter) GetX() int {
	return s.X
}

// GetY returns the value of Y.
func (s *TaskRewardDataSchemaCharacter) GetY() int {
	return s.Y
}

// GetCooldown returns the value of Cooldown.
func (s *TaskRewardDataSchemaCharacter) GetCooldown() int {
	return s.Cooldown
}

// GetCooldownExpiration returns the value of CooldownExpiration.
func (s *TaskRewardDataSchemaCharacter) GetCooldownExpiration() OptTaskRewardDataSchemaCharacterCooldownExpiration {
	return s.CooldownExpiration
}

// GetWeaponSlot returns the value of WeaponSlot.
func (s *TaskRewardDataSchemaCharacter) GetWeaponSlot() string {
	return s.WeaponSlot
}

// GetShieldSlot returns the value of ShieldSlot.
func (s *TaskRewardDataSchemaCharacter) GetShieldSlot() string {
	return s.ShieldSlot
}

// GetHelmetSlot returns the value of HelmetSlot.
func (s *TaskRewardDataSchemaCharacter) GetHelmetSlot() string {
	return s.HelmetSlot
}

// GetBodyArmorSlot returns the value of BodyArmorSlot.
func (s *TaskRewardDataSchemaCharacter) GetBodyArmorSlot() string {
	return s.BodyArmorSlot
}

// GetLegArmorSlot returns the value of LegArmorSlot.
func (s *TaskRewardDataSchemaCharacter) GetLegArmorSlot() string {
	return s.LegArmorSlot
}

// GetBootsSlot returns the value of BootsSlot.
func (s *TaskRewardDataSchemaCharacter) GetBootsSlot() string {
	return s.BootsSlot
}

// GetRing1Slot returns the value of Ring1Slot.
func (s *TaskRewardDataSchemaCharacter) GetRing1Slot() string {
	return s.Ring1Slot
}

// GetRing2Slot returns the value of Ring2Slot.
func (s *TaskRewardDataSchemaCharacter) GetRing2Slot() string {
	return s.Ring2Slot
}

// GetAmuletSlot returns the value of AmuletSlot.
func (s *TaskRewardDataSchemaCharacter) GetAmuletSlot() string {
	return s.AmuletSlot
}

// GetArtifact1Slot returns the value of Artifact1Slot.
func (s *TaskRewardDataSchemaCharacter) GetArtifact1Slot() string {
	return s.Artifact1Slot
}

// GetArtifact2Slot returns the value of Artifact2Slot.
func (s *TaskRewardDataSchemaCharacter) GetArtifact2Slot() string {
	return s.Artifact2Slot
}

// GetArtifact3Slot returns the value of Artifact3Slot.
func (s *TaskRewardDataSchemaCharacter) GetArtifact3Slot() string {
	return s.Artifact3Slot
}

// GetConsumable1Slot returns the value of Consumable1Slot.
func (s *TaskRewardDataSchemaCharacter) GetConsumable1Slot() string {
	return s.Consumable1Slot
}

// GetConsumable1SlotQuantity returns the value of Consumable1SlotQuantity.
func (s *TaskRewardDataSchemaCharacter) GetConsumable1SlotQuantity() int {
	return s.Consumable1SlotQuantity
}

// GetConsumable2Slot returns the value of Consumable2Slot.
func (s *TaskRewardDataSchemaCharacter) GetConsumable2Slot() string {
	return s.Consumable2Slot
}

// GetConsumable2SlotQuantity returns the value of Consumable2SlotQuantity.
func (s *TaskRewardDataSchemaCharacter) GetConsumable2SlotQuantity() int {
	return s.Consumable2SlotQuantity
}

// GetTask returns the value of Task.
func (s *TaskRewardDataSchemaCharacter) GetTask() string {
	return s.Task
}

// GetTaskType returns the value of TaskType.
func (s *TaskRewardDataSchemaCharacter) GetTaskType() string {
	return s.TaskType
}

// GetTaskProgress returns the value of TaskProgress.
func (s *TaskRewardDataSchemaCharacter) GetTaskProgress() int {
	return s.TaskProgress
}

// GetTaskTotal returns the value of TaskTotal.
func (s *TaskRewardDataSchemaCharacter) GetTaskTotal() int {
	return s.TaskTotal
}

// GetInventoryMaxItems returns the value of InventoryMaxItems.
func (s *TaskRewardDataSchemaCharacter) GetInventoryMaxItems() int {
	return s.InventoryMaxItems
}

// GetInventory returns the value of Inventory.
func (s *TaskRewardDataSchemaCharacter) GetInventory() []InventorySlot {
	return s.Inventory
}

// GetInventorySlot1 returns the value of InventorySlot1.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot1() string {
	return s.InventorySlot1
}

// GetInventorySlot1Quantity returns the value of InventorySlot1Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot1Quantity() int {
	return s.InventorySlot1Quantity
}

// GetInventorySlot2 returns the value of InventorySlot2.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot2() string {
	return s.InventorySlot2
}

// GetInventorySlot2Quantity returns the value of InventorySlot2Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot2Quantity() int {
	return s.InventorySlot2Quantity
}

// GetInventorySlot3 returns the value of InventorySlot3.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot3() string {
	return s.InventorySlot3
}

// GetInventorySlot3Quantity returns the value of InventorySlot3Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot3Quantity() int {
	return s.InventorySlot3Quantity
}

// GetInventorySlot4 returns the value of InventorySlot4.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot4() string {
	return s.InventorySlot4
}

// GetInventorySlot4Quantity returns the value of InventorySlot4Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot4Quantity() int {
	return s.InventorySlot4Quantity
}

// GetInventorySlot5 returns the value of InventorySlot5.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot5() string {
	return s.InventorySlot5
}

// GetInventorySlot5Quantity returns the value of InventorySlot5Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot5Quantity() int {
	return s.InventorySlot5Quantity
}

// GetInventorySlot6 returns the value of InventorySlot6.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot6() string {
	return s.InventorySlot6
}

// GetInventorySlot6Quantity returns the value of InventorySlot6Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot6Quantity() int {
	return s.InventorySlot6Quantity
}

// GetInventorySlot7 returns the value of InventorySlot7.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot7() string {
	return s.InventorySlot7
}

// GetInventorySlot7Quantity returns the value of InventorySlot7Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot7Quantity() int {
	return s.InventorySlot7Quantity
}

// GetInventorySlot8 returns the value of InventorySlot8.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot8() string {
	return s.InventorySlot8
}

// GetInventorySlot8Quantity returns the value of InventorySlot8Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot8Quantity() int {
	return s.InventorySlot8Quantity
}

// GetInventorySlot9 returns the value of InventorySlot9.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot9() string {
	return s.InventorySlot9
}

// GetInventorySlot9Quantity returns the value of InventorySlot9Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot9Quantity() int {
	return s.InventorySlot9Quantity
}

// GetInventorySlot10 returns the value of InventorySlot10.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot10() string {
	return s.InventorySlot10
}

// GetInventorySlot10Quantity returns the value of InventorySlot10Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot10Quantity() int {
	return s.InventorySlot10Quantity
}

// GetInventorySlot11 returns the value of InventorySlot11.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot11() string {
	return s.InventorySlot11
}

// GetInventorySlot11Quantity returns the value of InventorySlot11Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot11Quantity() int {
	return s.InventorySlot11Quantity
}

// GetInventorySlot12 returns the value of InventorySlot12.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot12() string {
	return s.InventorySlot12
}

// GetInventorySlot12Quantity returns the value of InventorySlot12Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot12Quantity() int {
	return s.InventorySlot12Quantity
}

// GetInventorySlot13 returns the value of InventorySlot13.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot13() string {
	return s.InventorySlot13
}

// GetInventorySlot13Quantity returns the value of InventorySlot13Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot13Quantity() int {
	return s.InventorySlot13Quantity
}

// GetInventorySlot14 returns the value of InventorySlot14.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot14() string {
	return s.InventorySlot14
}

// GetInventorySlot14Quantity returns the value of InventorySlot14Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot14Quantity() int {
	return s.InventorySlot14Quantity
}

// GetInventorySlot15 returns the value of InventorySlot15.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot15() string {
	return s.InventorySlot15
}

// GetInventorySlot15Quantity returns the value of InventorySlot15Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot15Quantity() int {
	return s.InventorySlot15Quantity
}

// GetInventorySlot16 returns the value of InventorySlot16.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot16() string {
	return s.InventorySlot16
}

// GetInventorySlot16Quantity returns the value of InventorySlot16Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot16Quantity() int {
	return s.InventorySlot16Quantity
}

// GetInventorySlot17 returns the value of InventorySlot17.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot17() string {
	return s.InventorySlot17
}

// GetInventorySlot17Quantity returns the value of InventorySlot17Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot17Quantity() int {
	return s.InventorySlot17Quantity
}

// GetInventorySlot18 returns the value of InventorySlot18.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot18() string {
	return s.InventorySlot18
}

// GetInventorySlot18Quantity returns the value of InventorySlot18Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot18Quantity() int {
	return s.InventorySlot18Quantity
}

// GetInventorySlot19 returns the value of InventorySlot19.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot19() string {
	return s.InventorySlot19
}

// GetInventorySlot19Quantity returns the value of InventorySlot19Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot19Quantity() int {
	return s.InventorySlot19Quantity
}

// GetInventorySlot20 returns the value of InventorySlot20.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot20() string {
	return s.InventorySlot20
}

// GetInventorySlot20Quantity returns the value of InventorySlot20Quantity.
func (s *TaskRewardDataSchemaCharacter) GetInventorySlot20Quantity() int {
	return s.InventorySlot20Quantity
}

// SetName sets the value of Name.
func (s *TaskRewardDataSchemaCharacter) SetName(val string) {
	s.Name = val
}

// SetSkin sets the value of Skin.
func (s *TaskRewardDataSchemaCharacter) SetSkin(val TaskRewardDataSchemaCharacterSkin) {
	s.Skin = val
}

// SetLevel sets the value of Level.
func (s *TaskRewardDataSchemaCharacter) SetLevel(val int) {
	s.Level = val
}

// SetXp sets the value of Xp.
func (s *TaskRewardDataSchemaCharacter) SetXp(val int) {
	s.Xp = val
}

// SetMaxXp sets the value of MaxXp.
func (s *TaskRewardDataSchemaCharacter) SetMaxXp(val int) {
	s.MaxXp = val
}

// SetTotalXp sets the value of TotalXp.
func (s *TaskRewardDataSchemaCharacter) SetTotalXp(val int) {
	s.TotalXp = val
}

// SetGold sets the value of Gold.
func (s *TaskRewardDataSchemaCharacter) SetGold(val int) {
	s.Gold = val
}

// SetSpeed sets the value of Speed.
func (s *TaskRewardDataSchemaCharacter) SetSpeed(val int) {
	s.Speed = val
}

// SetMiningLevel sets the value of MiningLevel.
func (s *TaskRewardDataSchemaCharacter) SetMiningLevel(val int) {
	s.MiningLevel = val
}

// SetMiningXp sets the value of MiningXp.
func (s *TaskRewardDataSchemaCharacter) SetMiningXp(val int) {
	s.MiningXp = val
}

// SetMiningMaxXp sets the value of MiningMaxXp.
func (s *TaskRewardDataSchemaCharacter) SetMiningMaxXp(val int) {
	s.MiningMaxXp = val
}

// SetWoodcuttingLevel sets the value of WoodcuttingLevel.
func (s *TaskRewardDataSchemaCharacter) SetWoodcuttingLevel(val int) {
	s.WoodcuttingLevel = val
}

// SetWoodcuttingXp sets the value of WoodcuttingXp.
func (s *TaskRewardDataSchemaCharacter) SetWoodcuttingXp(val int) {
	s.WoodcuttingXp = val
}

// SetWoodcuttingMaxXp sets the value of WoodcuttingMaxXp.
func (s *TaskRewardDataSchemaCharacter) SetWoodcuttingMaxXp(val int) {
	s.WoodcuttingMaxXp = val
}

// SetFishingLevel sets the value of FishingLevel.
func (s *TaskRewardDataSchemaCharacter) SetFishingLevel(val int) {
	s.FishingLevel = val
}

// SetFishingXp sets the value of FishingXp.
func (s *TaskRewardDataSchemaCharacter) SetFishingXp(val int) {
	s.FishingXp = val
}

// SetFishingMaxXp sets the value of FishingMaxXp.
func (s *TaskRewardDataSchemaCharacter) SetFishingMaxXp(val int) {
	s.FishingMaxXp = val
}

// SetWeaponcraftingLevel sets the value of WeaponcraftingLevel.
func (s *TaskRewardDataSchemaCharacter) SetWeaponcraftingLevel(val int) {
	s.WeaponcraftingLevel = val
}

// SetWeaponcraftingXp sets the value of WeaponcraftingXp.
func (s *TaskRewardDataSchemaCharacter) SetWeaponcraftingXp(val int) {
	s.WeaponcraftingXp = val
}

// SetWeaponcraftingMaxXp sets the value of WeaponcraftingMaxXp.
func (s *TaskRewardDataSchemaCharacter) SetWeaponcraftingMaxXp(val int) {
	s.WeaponcraftingMaxXp = val
}

// SetGearcraftingLevel sets the value of GearcraftingLevel.
func (s *TaskRewardDataSchemaCharacter) SetGearcraftingLevel(val int) {
	s.GearcraftingLevel = val
}

// SetGearcraftingXp sets the value of GearcraftingXp.
func (s *TaskRewardDataSchemaCharacter) SetGearcraftingXp(val int) {
	s.GearcraftingXp = val
}

// SetGearcraftingMaxXp sets the value of GearcraftingMaxXp.
func (s *TaskRewardDataSchemaCharacter) SetGearcraftingMaxXp(val int) {
	s.GearcraftingMaxXp = val
}

// SetJewelrycraftingLevel sets the value of JewelrycraftingLevel.
func (s *TaskRewardDataSchemaCharacter) SetJewelrycraftingLevel(val int) {
	s.JewelrycraftingLevel = val
}

// SetJewelrycraftingXp sets the value of JewelrycraftingXp.
func (s *TaskRewardDataSchemaCharacter) SetJewelrycraftingXp(val int) {
	s.JewelrycraftingXp = val
}

// SetJewelrycraftingMaxXp sets the value of JewelrycraftingMaxXp.
func (s *TaskRewardDataSchemaCharacter) SetJewelrycraftingMaxXp(val int) {
	s.JewelrycraftingMaxXp = val
}

// SetCookingLevel sets the value of CookingLevel.
func (s *TaskRewardDataSchemaCharacter) SetCookingLevel(val int) {
	s.CookingLevel = val
}

// SetCookingXp sets the value of CookingXp.
func (s *TaskRewardDataSchemaCharacter) SetCookingXp(val int) {
	s.CookingXp = val
}

// SetCookingMaxXp sets the value of CookingMaxXp.
func (s *TaskRewardDataSchemaCharacter) SetCookingMaxXp(val int) {
	s.CookingMaxXp = val
}

// SetHp sets the value of Hp.
func (s *TaskRewardDataSchemaCharacter) SetHp(val int) {
	s.Hp = val
}

// SetHaste sets the value of Haste.
func (s *TaskRewardDataSchemaCharacter) SetHaste(val int) {
	s.Haste = val
}

// SetCriticalStrike sets the value of CriticalStrike.
func (s *TaskRewardDataSchemaCharacter) SetCriticalStrike(val int) {
	s.CriticalStrike = val
}

// SetStamina sets the value of Stamina.
func (s *TaskRewardDataSchemaCharacter) SetStamina(val int) {
	s.Stamina = val
}

// SetAttackFire sets the value of AttackFire.
func (s *TaskRewardDataSchemaCharacter) SetAttackFire(val int) {
	s.AttackFire = val
}

// SetAttackEarth sets the value of AttackEarth.
func (s *TaskRewardDataSchemaCharacter) SetAttackEarth(val int) {
	s.AttackEarth = val
}

// SetAttackWater sets the value of AttackWater.
func (s *TaskRewardDataSchemaCharacter) SetAttackWater(val int) {
	s.AttackWater = val
}

// SetAttackAir sets the value of AttackAir.
func (s *TaskRewardDataSchemaCharacter) SetAttackAir(val int) {
	s.AttackAir = val
}

// SetDmgFire sets the value of DmgFire.
func (s *TaskRewardDataSchemaCharacter) SetDmgFire(val int) {
	s.DmgFire = val
}

// SetDmgEarth sets the value of DmgEarth.
func (s *TaskRewardDataSchemaCharacter) SetDmgEarth(val int) {
	s.DmgEarth = val
}

// SetDmgWater sets the value of DmgWater.
func (s *TaskRewardDataSchemaCharacter) SetDmgWater(val int) {
	s.DmgWater = val
}

// SetDmgAir sets the value of DmgAir.
func (s *TaskRewardDataSchemaCharacter) SetDmgAir(val int) {
	s.DmgAir = val
}

// SetResFire sets the value of ResFire.
func (s *TaskRewardDataSchemaCharacter) SetResFire(val int) {
	s.ResFire = val
}

// SetResEarth sets the value of ResEarth.
func (s *TaskRewardDataSchemaCharacter) SetResEarth(val int) {
	s.ResEarth = val
}

// SetResWater sets the value of ResWater.
func (s *TaskRewardDataSchemaCharacter) SetResWater(val int) {
	s.ResWater = val
}

// SetResAir sets the value of ResAir.
func (s *TaskRewardDataSchemaCharacter) SetResAir(val int) {
	s.ResAir = val
}

// SetX sets the value of X.
func (s *TaskRewardDataSchemaCharacter) SetX(val int) {
	s.X = val
}

// SetY sets the value of Y.
func (s *TaskRewardDataSchemaCharacter) SetY(val int) {
	s.Y = val
}

// SetCooldown sets the value of Cooldown.
func (s *TaskRewardDataSchemaCharacter) SetCooldown(val int) {
	s.Cooldown = val
}

// SetCooldownExpiration sets the value of CooldownExpiration.
func (s *TaskRewardDataSchemaCharacter) SetCooldownExpiration(val OptTaskRewardDataSchemaCharacterCooldownExpiration) {
	s.CooldownExpiration = val
}

// SetWeaponSlot sets the value of WeaponSlot.
func (s *TaskRewardDataSchemaCharacter) SetWeaponSlot(val string) {
	s.WeaponSlot = val
}

// SetShieldSlot sets the value of ShieldSlot.
func (s *TaskRewardDataSchemaCharacter) SetShieldSlot(val string) {
	s.ShieldSlot = val
}

// SetHelmetSlot sets the value of HelmetSlot.
func (s *TaskRewardDataSchemaCharacter) SetHelmetSlot(val string) {
	s.HelmetSlot = val
}

// SetBodyArmorSlot sets the value of BodyArmorSlot.
func (s *TaskRewardDataSchemaCharacter) SetBodyArmorSlot(val string) {
	s.BodyArmorSlot = val
}

// SetLegArmorSlot sets the value of LegArmorSlot.
func (s *TaskRewardDataSchemaCharacter) SetLegArmorSlot(val string) {
	s.LegArmorSlot = val
}

// SetBootsSlot sets the value of BootsSlot.
func (s *TaskRewardDataSchemaCharacter) SetBootsSlot(val string) {
	s.BootsSlot = val
}

// SetRing1Slot sets the value of Ring1Slot.
func (s *TaskRewardDataSchemaCharacter) SetRing1Slot(val string) {
	s.Ring1Slot = val
}

// SetRing2Slot sets the value of Ring2Slot.
func (s *TaskRewardDataSchemaCharacter) SetRing2Slot(val string) {
	s.Ring2Slot = val
}

// SetAmuletSlot sets the value of AmuletSlot.
func (s *TaskRewardDataSchemaCharacter) SetAmuletSlot(val string) {
	s.AmuletSlot = val
}

// SetArtifact1Slot sets the value of Artifact1Slot.
func (s *TaskRewardDataSchemaCharacter) SetArtifact1Slot(val string) {
	s.Artifact1Slot = val
}

// SetArtifact2Slot sets the value of Artifact2Slot.
func (s *TaskRewardDataSchemaCharacter) SetArtifact2Slot(val string) {
	s.Artifact2Slot = val
}

// SetArtifact3Slot sets the value of Artifact3Slot.
func (s *TaskRewardDataSchemaCharacter) SetArtifact3Slot(val string) {
	s.Artifact3Slot = val
}

// SetConsumable1Slot sets the value of Consumable1Slot.
func (s *TaskRewardDataSchemaCharacter) SetConsumable1Slot(val string) {
	s.Consumable1Slot = val
}

// SetConsumable1SlotQuantity sets the value of Consumable1SlotQuantity.
func (s *TaskRewardDataSchemaCharacter) SetConsumable1SlotQuantity(val int) {
	s.Consumable1SlotQuantity = val
}

// SetConsumable2Slot sets the value of Consumable2Slot.
func (s *TaskRewardDataSchemaCharacter) SetConsumable2Slot(val string) {
	s.Consumable2Slot = val
}

// SetConsumable2SlotQuantity sets the value of Consumable2SlotQuantity.
func (s *TaskRewardDataSchemaCharacter) SetConsumable2SlotQuantity(val int) {
	s.Consumable2SlotQuantity = val
}

// SetTask sets the value of Task.
func (s *TaskRewardDataSchemaCharacter) SetTask(val string) {
	s.Task = val
}

// SetTaskType sets the value of TaskType.
func (s *TaskRewardDataSchemaCharacter) SetTaskType(val string) {
	s.TaskType = val
}

// SetTaskProgress sets the value of TaskProgress.
func (s *TaskRewardDataSchemaCharacter) SetTaskProgress(val int) {
	s.TaskProgress = val
}

// SetTaskTotal sets the value of TaskTotal.
func (s *TaskRewardDataSchemaCharacter) SetTaskTotal(val int) {
	s.TaskTotal = val
}

// SetInventoryMaxItems sets the value of InventoryMaxItems.
func (s *TaskRewardDataSchemaCharacter) SetInventoryMaxItems(val int) {
	s.InventoryMaxItems = val
}

// SetInventory sets the value of Inventory.
func (s *TaskRewardDataSchemaCharacter) SetInventory(val []InventorySlot) {
	s.Inventory = val
}

// SetInventorySlot1 sets the value of InventorySlot1.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot1(val string) {
	s.InventorySlot1 = val
}

// SetInventorySlot1Quantity sets the value of InventorySlot1Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot1Quantity(val int) {
	s.InventorySlot1Quantity = val
}

// SetInventorySlot2 sets the value of InventorySlot2.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot2(val string) {
	s.InventorySlot2 = val
}

// SetInventorySlot2Quantity sets the value of InventorySlot2Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot2Quantity(val int) {
	s.InventorySlot2Quantity = val
}

// SetInventorySlot3 sets the value of InventorySlot3.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot3(val string) {
	s.InventorySlot3 = val
}

// SetInventorySlot3Quantity sets the value of InventorySlot3Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot3Quantity(val int) {
	s.InventorySlot3Quantity = val
}

// SetInventorySlot4 sets the value of InventorySlot4.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot4(val string) {
	s.InventorySlot4 = val
}

// SetInventorySlot4Quantity sets the value of InventorySlot4Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot4Quantity(val int) {
	s.InventorySlot4Quantity = val
}

// SetInventorySlot5 sets the value of InventorySlot5.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot5(val string) {
	s.InventorySlot5 = val
}

// SetInventorySlot5Quantity sets the value of InventorySlot5Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot5Quantity(val int) {
	s.InventorySlot5Quantity = val
}

// SetInventorySlot6 sets the value of InventorySlot6.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot6(val string) {
	s.InventorySlot6 = val
}

// SetInventorySlot6Quantity sets the value of InventorySlot6Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot6Quantity(val int) {
	s.InventorySlot6Quantity = val
}

// SetInventorySlot7 sets the value of InventorySlot7.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot7(val string) {
	s.InventorySlot7 = val
}

// SetInventorySlot7Quantity sets the value of InventorySlot7Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot7Quantity(val int) {
	s.InventorySlot7Quantity = val
}

// SetInventorySlot8 sets the value of InventorySlot8.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot8(val string) {
	s.InventorySlot8 = val
}

// SetInventorySlot8Quantity sets the value of InventorySlot8Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot8Quantity(val int) {
	s.InventorySlot8Quantity = val
}

// SetInventorySlot9 sets the value of InventorySlot9.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot9(val string) {
	s.InventorySlot9 = val
}

// SetInventorySlot9Quantity sets the value of InventorySlot9Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot9Quantity(val int) {
	s.InventorySlot9Quantity = val
}

// SetInventorySlot10 sets the value of InventorySlot10.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot10(val string) {
	s.InventorySlot10 = val
}

// SetInventorySlot10Quantity sets the value of InventorySlot10Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot10Quantity(val int) {
	s.InventorySlot10Quantity = val
}

// SetInventorySlot11 sets the value of InventorySlot11.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot11(val string) {
	s.InventorySlot11 = val
}

// SetInventorySlot11Quantity sets the value of InventorySlot11Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot11Quantity(val int) {
	s.InventorySlot11Quantity = val
}

// SetInventorySlot12 sets the value of InventorySlot12.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot12(val string) {
	s.InventorySlot12 = val
}

// SetInventorySlot12Quantity sets the value of InventorySlot12Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot12Quantity(val int) {
	s.InventorySlot12Quantity = val
}

// SetInventorySlot13 sets the value of InventorySlot13.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot13(val string) {
	s.InventorySlot13 = val
}

// SetInventorySlot13Quantity sets the value of InventorySlot13Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot13Quantity(val int) {
	s.InventorySlot13Quantity = val
}

// SetInventorySlot14 sets the value of InventorySlot14.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot14(val string) {
	s.InventorySlot14 = val
}

// SetInventorySlot14Quantity sets the value of InventorySlot14Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot14Quantity(val int) {
	s.InventorySlot14Quantity = val
}

// SetInventorySlot15 sets the value of InventorySlot15.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot15(val string) {
	s.InventorySlot15 = val
}

// SetInventorySlot15Quantity sets the value of InventorySlot15Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot15Quantity(val int) {
	s.InventorySlot15Quantity = val
}

// SetInventorySlot16 sets the value of InventorySlot16.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot16(val string) {
	s.InventorySlot16 = val
}

// SetInventorySlot16Quantity sets the value of InventorySlot16Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot16Quantity(val int) {
	s.InventorySlot16Quantity = val
}

// SetInventorySlot17 sets the value of InventorySlot17.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot17(val string) {
	s.InventorySlot17 = val
}

// SetInventorySlot17Quantity sets the value of InventorySlot17Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot17Quantity(val int) {
	s.InventorySlot17Quantity = val
}

// SetInventorySlot18 sets the value of InventorySlot18.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot18(val string) {
	s.InventorySlot18 = val
}

// SetInventorySlot18Quantity sets the value of InventorySlot18Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot18Quantity(val int) {
	s.InventorySlot18Quantity = val
}

// SetInventorySlot19 sets the value of InventorySlot19.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot19(val string) {
	s.InventorySlot19 = val
}

// SetInventorySlot19Quantity sets the value of InventorySlot19Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot19Quantity(val int) {
	s.InventorySlot19Quantity = val
}

// SetInventorySlot20 sets the value of InventorySlot20.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot20(val string) {
	s.InventorySlot20 = val
}

// SetInventorySlot20Quantity sets the value of InventorySlot20Quantity.
func (s *TaskRewardDataSchemaCharacter) SetInventorySlot20Quantity(val int) {
	s.InventorySlot20Quantity = val
}

// Datetime Cooldown expiration.
// TaskRewardDataSchemaCharacterCooldownExpiration represents sum type.
type TaskRewardDataSchemaCharacterCooldownExpiration struct {
	Type     TaskRewardDataSchemaCharacterCooldownExpirationType // switch on this field
	DateTime time.Time
	Null     struct{}
}

// TaskRewardDataSchemaCharacterCooldownExpirationType is oneOf type of TaskRewardDataSchemaCharacterCooldownExpiration.
type TaskRewardDataSchemaCharacterCooldownExpirationType string

// Possible values for TaskRewardDataSchemaCharacterCooldownExpirationType.
const (
	DateTimeTaskRewardDataSchemaCharacterCooldownExpiration TaskRewardDataSchemaCharacterCooldownExpirationType = "time.Time"
	NullTaskRewardDataSchemaCharacterCooldownExpiration     TaskRewardDataSchemaCharacterCooldownExpirationType = "struct{}"
)

// IsDateTime reports whether TaskRewardDataSchemaCharacterCooldownExpiration is time.Time.
func (s TaskRewardDataSchemaCharacterCooldownExpiration) IsDateTime() bool {
	return s.Type == DateTimeTaskRewardDataSchemaCharacterCooldownExpiration
}

// IsNull reports whether TaskRewardDataSchemaCharacterCooldownExpiration is struct{}.
func (s TaskRewardDataSchemaCharacterCooldownExpiration) IsNull() bool {
	return s.Type == NullTaskRewardDataSchemaCharacterCooldownExpiration
}

// SetDateTime sets TaskRewardDataSchemaCharacterCooldownExpiration to time.Time.
func (s *TaskRewardDataSchemaCharacterCooldownExpiration) SetDateTime(v time.Time) {
	s.Type = DateTimeTaskRewardDataSchemaCharacterCooldownExpiration
	s.DateTime = v
}

// GetDateTime returns time.Time and true boolean if TaskRewardDataSchemaCharacterCooldownExpiration is time.Time.
func (s TaskRewardDataSchemaCharacterCooldownExpiration) GetDateTime() (v time.Time, ok bool) {
	if !s.IsDateTime() {
		return v, false
	}
	return s.DateTime, true
}

// NewDateTimeTaskRewardDataSchemaCharacterCooldownExpiration returns new TaskRewardDataSchemaCharacterCooldownExpiration from time.Time.
func NewDateTimeTaskRewardDataSchemaCharacterCooldownExpiration(v time.Time) TaskRewardDataSchemaCharacterCooldownExpiration {
	var s TaskRewardDataSchemaCharacterCooldownExpiration
	s.SetDateTime(v)
	return s
}

// SetNull sets TaskRewardDataSchemaCharacterCooldownExpiration to struct{}.
func (s *TaskRewardDataSchemaCharacterCooldownExpiration) SetNull(v struct{}) {
	s.Type = NullTaskRewardDataSchemaCharacterCooldownExpiration
	s.Null = v
}

// GetNull returns struct{} and true boolean if TaskRewardDataSchemaCharacterCooldownExpiration is struct{}.
func (s TaskRewardDataSchemaCharacterCooldownExpiration) GetNull() (v struct{}, ok bool) {
	if !s.IsNull() {
		return v, false
	}
	return s.Null, true
}

// NewNullTaskRewardDataSchemaCharacterCooldownExpiration returns new TaskRewardDataSchemaCharacterCooldownExpiration from struct{}.
func NewNullTaskRewardDataSchemaCharacterCooldownExpiration(v struct{}) TaskRewardDataSchemaCharacterCooldownExpiration {
	var s TaskRewardDataSchemaCharacterCooldownExpiration
	s.SetNull(v)
	return s
}

// Character skin code.
type TaskRewardDataSchemaCharacterSkin string

const (
	TaskRewardDataSchemaCharacterSkinMen1   TaskRewardDataSchemaCharacterSkin = "men1"
	TaskRewardDataSchemaCharacterSkinMen2   TaskRewardDataSchemaCharacterSkin = "men2"
	TaskRewardDataSchemaCharacterSkinMen3   TaskRewardDataSchemaCharacterSkin = "men3"
	TaskRewardDataSchemaCharacterSkinWomen1 TaskRewardDataSchemaCharacterSkin = "women1"
	TaskRewardDataSchemaCharacterSkinWomen2 TaskRewardDataSchemaCharacterSkin = "women2"
	TaskRewardDataSchemaCharacterSkinWomen3 TaskRewardDataSchemaCharacterSkin = "women3"
)

// AllValues returns all TaskRewardDataSchemaCharacterSkin values.
func (TaskRewardDataSchemaCharacterSkin) AllValues() []TaskRewardDataSchemaCharacterSkin {
	return []TaskRewardDataSchemaCharacterSkin{
		TaskRewardDataSchemaCharacterSkinMen1,
		TaskRewardDataSchemaCharacterSkinMen2,
		TaskRewardDataSchemaCharacterSkinMen3,
		TaskRewardDataSchemaCharacterSkinWomen1,
		TaskRewardDataSchemaCharacterSkinWomen2,
		TaskRewardDataSchemaCharacterSkinWomen3,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TaskRewardDataSchemaCharacterSkin) MarshalText() ([]byte, error) {
	switch s {
	case TaskRewardDataSchemaCharacterSkinMen1:
		return []byte(s), nil
	case TaskRewardDataSchemaCharacterSkinMen2:
		return []byte(s), nil
	case TaskRewardDataSchemaCharacterSkinMen3:
		return []byte(s), nil
	case TaskRewardDataSchemaCharacterSkinWomen1:
		return []byte(s), nil
	case TaskRewardDataSchemaCharacterSkinWomen2:
		return []byte(s), nil
	case TaskRewardDataSchemaCharacterSkinWomen3:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TaskRewardDataSchemaCharacterSkin) UnmarshalText(data []byte) error {
	switch TaskRewardDataSchemaCharacterSkin(data) {
	case TaskRewardDataSchemaCharacterSkinMen1:
		*s = TaskRewardDataSchemaCharacterSkinMen1
		return nil
	case TaskRewardDataSchemaCharacterSkinMen2:
		*s = TaskRewardDataSchemaCharacterSkinMen2
		return nil
	case TaskRewardDataSchemaCharacterSkinMen3:
		*s = TaskRewardDataSchemaCharacterSkinMen3
		return nil
	case TaskRewardDataSchemaCharacterSkinWomen1:
		*s = TaskRewardDataSchemaCharacterSkinWomen1
		return nil
	case TaskRewardDataSchemaCharacterSkinWomen2:
		*s = TaskRewardDataSchemaCharacterSkinWomen2
		return nil
	case TaskRewardDataSchemaCharacterSkinWomen3:
		*s = TaskRewardDataSchemaCharacterSkinWomen3
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type TaskRewardDataSchemaCooldown struct {
	// The total seconds of the cooldown.
	TotalSeconds int `json:"total_seconds"`
	// The remaining seconds of the cooldown.
	RemainingSeconds int `json:"remaining_seconds"`
	// The expiration of the cooldown.
	Expiration time.Time `json:"expiration"`
	// The reason of the cooldown.
	Reason TaskRewardDataSchemaCooldownReason `json:"reason"`
}

// GetTotalSeconds returns the value of TotalSeconds.
func (s *TaskRewardDataSchemaCooldown) GetTotalSeconds() int {
	return s.TotalSeconds
}

// GetRemainingSeconds returns the value of RemainingSeconds.
func (s *TaskRewardDataSchemaCooldown) GetRemainingSeconds() int {
	return s.RemainingSeconds
}

// GetExpiration returns the value of Expiration.
func (s *TaskRewardDataSchemaCooldown) GetExpiration() time.Time {
	return s.Expiration
}

// GetReason returns the value of Reason.
func (s *TaskRewardDataSchemaCooldown) GetReason() TaskRewardDataSchemaCooldownReason {
	return s.Reason
}

// SetTotalSeconds sets the value of TotalSeconds.
func (s *TaskRewardDataSchemaCooldown) SetTotalSeconds(val int) {
	s.TotalSeconds = val
}

// SetRemainingSeconds sets the value of RemainingSeconds.
func (s *TaskRewardDataSchemaCooldown) SetRemainingSeconds(val int) {
	s.RemainingSeconds = val
}

// SetExpiration sets the value of Expiration.
func (s *TaskRewardDataSchemaCooldown) SetExpiration(val time.Time) {
	s.Expiration = val
}

// SetReason sets the value of Reason.
func (s *TaskRewardDataSchemaCooldown) SetReason(val TaskRewardDataSchemaCooldownReason) {
	s.Reason = val
}

// The reason of the cooldown.
type TaskRewardDataSchemaCooldownReason string

const (
	TaskRewardDataSchemaCooldownReasonMovement     TaskRewardDataSchemaCooldownReason = "movement"
	TaskRewardDataSchemaCooldownReasonFight        TaskRewardDataSchemaCooldownReason = "fight"
	TaskRewardDataSchemaCooldownReasonCrafting     TaskRewardDataSchemaCooldownReason = "crafting"
	TaskRewardDataSchemaCooldownReasonGathering    TaskRewardDataSchemaCooldownReason = "gathering"
	TaskRewardDataSchemaCooldownReasonBuyGe        TaskRewardDataSchemaCooldownReason = "buy_ge"
	TaskRewardDataSchemaCooldownReasonSellGe       TaskRewardDataSchemaCooldownReason = "sell_ge"
	TaskRewardDataSchemaCooldownReasonDeleteItem   TaskRewardDataSchemaCooldownReason = "delete_item"
	TaskRewardDataSchemaCooldownReasonDepositBank  TaskRewardDataSchemaCooldownReason = "deposit_bank"
	TaskRewardDataSchemaCooldownReasonWithdrawBank TaskRewardDataSchemaCooldownReason = "withdraw_bank"
	TaskRewardDataSchemaCooldownReasonEquip        TaskRewardDataSchemaCooldownReason = "equip"
	TaskRewardDataSchemaCooldownReasonUnequip      TaskRewardDataSchemaCooldownReason = "unequip"
	TaskRewardDataSchemaCooldownReasonTask         TaskRewardDataSchemaCooldownReason = "task"
	TaskRewardDataSchemaCooldownReasonRecycling    TaskRewardDataSchemaCooldownReason = "recycling"
)

// AllValues returns all TaskRewardDataSchemaCooldownReason values.
func (TaskRewardDataSchemaCooldownReason) AllValues() []TaskRewardDataSchemaCooldownReason {
	return []TaskRewardDataSchemaCooldownReason{
		TaskRewardDataSchemaCooldownReasonMovement,
		TaskRewardDataSchemaCooldownReasonFight,
		TaskRewardDataSchemaCooldownReasonCrafting,
		TaskRewardDataSchemaCooldownReasonGathering,
		TaskRewardDataSchemaCooldownReasonBuyGe,
		TaskRewardDataSchemaCooldownReasonSellGe,
		TaskRewardDataSchemaCooldownReasonDeleteItem,
		TaskRewardDataSchemaCooldownReasonDepositBank,
		TaskRewardDataSchemaCooldownReasonWithdrawBank,
		TaskRewardDataSchemaCooldownReasonEquip,
		TaskRewardDataSchemaCooldownReasonUnequip,
		TaskRewardDataSchemaCooldownReasonTask,
		TaskRewardDataSchemaCooldownReasonRecycling,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TaskRewardDataSchemaCooldownReason) MarshalText() ([]byte, error) {
	switch s {
	case TaskRewardDataSchemaCooldownReasonMovement:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonFight:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonCrafting:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonGathering:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonBuyGe:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonSellGe:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonDeleteItem:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonDepositBank:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonWithdrawBank:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonEquip:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonUnequip:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonTask:
		return []byte(s), nil
	case TaskRewardDataSchemaCooldownReasonRecycling:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TaskRewardDataSchemaCooldownReason) UnmarshalText(data []byte) error {
	switch TaskRewardDataSchemaCooldownReason(data) {
	case TaskRewardDataSchemaCooldownReasonMovement:
		*s = TaskRewardDataSchemaCooldownReasonMovement
		return nil
	case TaskRewardDataSchemaCooldownReasonFight:
		*s = TaskRewardDataSchemaCooldownReasonFight
		return nil
	case TaskRewardDataSchemaCooldownReasonCrafting:
		*s = TaskRewardDataSchemaCooldownReasonCrafting
		return nil
	case TaskRewardDataSchemaCooldownReasonGathering:
		*s = TaskRewardDataSchemaCooldownReasonGathering
		return nil
	case TaskRewardDataSchemaCooldownReasonBuyGe:
		*s = TaskRewardDataSchemaCooldownReasonBuyGe
		return nil
	case TaskRewardDataSchemaCooldownReasonSellGe:
		*s = TaskRewardDataSchemaCooldownReasonSellGe
		return nil
	case TaskRewardDataSchemaCooldownReasonDeleteItem:
		*s = TaskRewardDataSchemaCooldownReasonDeleteItem
		return nil
	case TaskRewardDataSchemaCooldownReasonDepositBank:
		*s = TaskRewardDataSchemaCooldownReasonDepositBank
		return nil
	case TaskRewardDataSchemaCooldownReasonWithdrawBank:
		*s = TaskRewardDataSchemaCooldownReasonWithdrawBank
		return nil
	case TaskRewardDataSchemaCooldownReasonEquip:
		*s = TaskRewardDataSchemaCooldownReasonEquip
		return nil
	case TaskRewardDataSchemaCooldownReasonUnequip:
		*s = TaskRewardDataSchemaCooldownReasonUnequip
		return nil
	case TaskRewardDataSchemaCooldownReasonTask:
		*s = TaskRewardDataSchemaCooldownReasonTask
		return nil
	case TaskRewardDataSchemaCooldownReasonRecycling:
		*s = TaskRewardDataSchemaCooldownReasonRecycling
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type TaskRewardDataSchemaReward struct {
	// Item code.
	Code string `json:"code"`
	// Item quantity.
	Quantity int `json:"quantity"`
}

// GetCode returns the value of Code.
func (s *TaskRewardDataSchemaReward) GetCode() string {
	return s.Code
}

// GetQuantity returns the value of Quantity.
func (s *TaskRewardDataSchemaReward) GetQuantity() int {
	return s.Quantity
}

// SetCode sets the value of Code.
func (s *TaskRewardDataSchemaReward) SetCode(val string) {
	s.Code = val
}

// SetQuantity sets the value of Quantity.
func (s *TaskRewardDataSchemaReward) SetQuantity(val int) {
	s.Quantity = val
}

// Ref: #/components/schemas/TaskRewardResponseSchema
type TaskRewardResponseSchema struct {
	Data TaskRewardDataSchema `json:"data"`
}

// GetData returns the value of Data.
func (s *TaskRewardResponseSchema) GetData() TaskRewardDataSchema {
	return s.Data
}

// SetData sets the value of Data.
func (s *TaskRewardResponseSchema) SetData(val TaskRewardDataSchema) {
	s.Data = val
}

func (*TaskRewardResponseSchema) actionCompleteTaskMyNameActionTaskCompletePostRes() {}
func (*TaskRewardResponseSchema) actionTaskExchangeMyNameActionTaskExchangePostRes() {}

// Ref: #/components/schemas/TokenResponseSchema
type TokenResponseSchema struct {
	Token string `json:"token"`
}

// GetToken returns the value of Token.
func (s *TokenResponseSchema) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *TokenResponseSchema) SetToken(val string) {
	s.Token = val
}

func (*TokenResponseSchema) generateTokenTokenPostRes() {}

// Ref: #/components/schemas/UnequipSchema
type UnequipSchema struct {
	// Item slot.
	Slot UnequipSchemaSlot `json:"slot"`
}

// GetSlot returns the value of Slot.
func (s *UnequipSchema) GetSlot() UnequipSchemaSlot {
	return s.Slot
}

// SetSlot sets the value of Slot.
func (s *UnequipSchema) SetSlot(val UnequipSchemaSlot) {
	s.Slot = val
}

// Item slot.
type UnequipSchemaSlot string

const (
	UnequipSchemaSlotWeapon      UnequipSchemaSlot = "weapon"
	UnequipSchemaSlotShield      UnequipSchemaSlot = "shield"
	UnequipSchemaSlotHelmet      UnequipSchemaSlot = "helmet"
	UnequipSchemaSlotBodyArmor   UnequipSchemaSlot = "body_armor"
	UnequipSchemaSlotLegArmor    UnequipSchemaSlot = "leg_armor"
	UnequipSchemaSlotBoots       UnequipSchemaSlot = "boots"
	UnequipSchemaSlotRing1       UnequipSchemaSlot = "ring1"
	UnequipSchemaSlotRing2       UnequipSchemaSlot = "ring2"
	UnequipSchemaSlotAmulet      UnequipSchemaSlot = "amulet"
	UnequipSchemaSlotArtifact1   UnequipSchemaSlot = "artifact1"
	UnequipSchemaSlotArtifact2   UnequipSchemaSlot = "artifact2"
	UnequipSchemaSlotArtifact3   UnequipSchemaSlot = "artifact3"
	UnequipSchemaSlotConsumable1 UnequipSchemaSlot = "consumable1"
	UnequipSchemaSlotConsumable2 UnequipSchemaSlot = "consumable2"
)

// AllValues returns all UnequipSchemaSlot values.
func (UnequipSchemaSlot) AllValues() []UnequipSchemaSlot {
	return []UnequipSchemaSlot{
		UnequipSchemaSlotWeapon,
		UnequipSchemaSlotShield,
		UnequipSchemaSlotHelmet,
		UnequipSchemaSlotBodyArmor,
		UnequipSchemaSlotLegArmor,
		UnequipSchemaSlotBoots,
		UnequipSchemaSlotRing1,
		UnequipSchemaSlotRing2,
		UnequipSchemaSlotAmulet,
		UnequipSchemaSlotArtifact1,
		UnequipSchemaSlotArtifact2,
		UnequipSchemaSlotArtifact3,
		UnequipSchemaSlotConsumable1,
		UnequipSchemaSlotConsumable2,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s UnequipSchemaSlot) MarshalText() ([]byte, error) {
	switch s {
	case UnequipSchemaSlotWeapon:
		return []byte(s), nil
	case UnequipSchemaSlotShield:
		return []byte(s), nil
	case UnequipSchemaSlotHelmet:
		return []byte(s), nil
	case UnequipSchemaSlotBodyArmor:
		return []byte(s), nil
	case UnequipSchemaSlotLegArmor:
		return []byte(s), nil
	case UnequipSchemaSlotBoots:
		return []byte(s), nil
	case UnequipSchemaSlotRing1:
		return []byte(s), nil
	case UnequipSchemaSlotRing2:
		return []byte(s), nil
	case UnequipSchemaSlotAmulet:
		return []byte(s), nil
	case UnequipSchemaSlotArtifact1:
		return []byte(s), nil
	case UnequipSchemaSlotArtifact2:
		return []byte(s), nil
	case UnequipSchemaSlotArtifact3:
		return []byte(s), nil
	case UnequipSchemaSlotConsumable1:
		return []byte(s), nil
	case UnequipSchemaSlotConsumable2:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *UnequipSchemaSlot) UnmarshalText(data []byte) error {
	switch UnequipSchemaSlot(data) {
	case UnequipSchemaSlotWeapon:
		*s = UnequipSchemaSlotWeapon
		return nil
	case UnequipSchemaSlotShield:
		*s = UnequipSchemaSlotShield
		return nil
	case UnequipSchemaSlotHelmet:
		*s = UnequipSchemaSlotHelmet
		return nil
	case UnequipSchemaSlotBodyArmor:
		*s = UnequipSchemaSlotBodyArmor
		return nil
	case UnequipSchemaSlotLegArmor:
		*s = UnequipSchemaSlotLegArmor
		return nil
	case UnequipSchemaSlotBoots:
		*s = UnequipSchemaSlotBoots
		return nil
	case UnequipSchemaSlotRing1:
		*s = UnequipSchemaSlotRing1
		return nil
	case UnequipSchemaSlotRing2:
		*s = UnequipSchemaSlotRing2
		return nil
	case UnequipSchemaSlotAmulet:
		*s = UnequipSchemaSlotAmulet
		return nil
	case UnequipSchemaSlotArtifact1:
		*s = UnequipSchemaSlotArtifact1
		return nil
	case UnequipSchemaSlotArtifact2:
		*s = UnequipSchemaSlotArtifact2
		return nil
	case UnequipSchemaSlotArtifact3:
		*s = UnequipSchemaSlotArtifact3
		return nil
	case UnequipSchemaSlotConsumable1:
		*s = UnequipSchemaSlotConsumable1
		return nil
	case UnequipSchemaSlotConsumable2:
		*s = UnequipSchemaSlotConsumable2
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}
