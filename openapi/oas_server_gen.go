// Code generated by ogen, DO NOT EDIT.

package openapi

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// ActionAcceptNewTaskMyNameActionTaskNewPost implements action_accept_new_task_my__name__action_task_new_post operation.
	//
	// Accepting a new task.
	//
	// POST /my/{name}/action/task/new
	ActionAcceptNewTaskMyNameActionTaskNewPost(ctx context.Context, params ActionAcceptNewTaskMyNameActionTaskNewPostParams) (ActionAcceptNewTaskMyNameActionTaskNewPostRes, error)
	// ActionCompleteTaskMyNameActionTaskCompletePost implements action_complete_task_my__name__action_task_complete_post operation.
	//
	// Complete a task.
	//
	// POST /my/{name}/action/task/complete
	ActionCompleteTaskMyNameActionTaskCompletePost(ctx context.Context, params ActionCompleteTaskMyNameActionTaskCompletePostParams) (ActionCompleteTaskMyNameActionTaskCompletePostRes, error)
	// ActionCraftingMyNameActionCraftingPost implements action_crafting_my__name__action_crafting_post operation.
	//
	// Crafting an item. The character must be on a map with a workshop.
	//
	// POST /my/{name}/action/crafting
	ActionCraftingMyNameActionCraftingPost(ctx context.Context, req *CraftingSchema, params ActionCraftingMyNameActionCraftingPostParams) (ActionCraftingMyNameActionCraftingPostRes, error)
	// ActionDeleteItemMyNameActionDeletePost implements action_delete_item_my__name__action_delete_post operation.
	//
	// Delete an item from your character's inventory.
	//
	// POST /my/{name}/action/delete
	ActionDeleteItemMyNameActionDeletePost(ctx context.Context, req *SimpleItemSchema, params ActionDeleteItemMyNameActionDeletePostParams) (ActionDeleteItemMyNameActionDeletePostRes, error)
	// ActionDepositBankGoldMyNameActionBankDepositGoldPost implements action_deposit_bank_gold_my__name__action_bank_deposit_gold_post operation.
	//
	// Deposit golds in a bank on the character's map.
	//
	// POST /my/{name}/action/bank/deposit/gold
	ActionDepositBankGoldMyNameActionBankDepositGoldPost(ctx context.Context, req *DepositWithdrawGoldSchema, params ActionDepositBankGoldMyNameActionBankDepositGoldPostParams) (ActionDepositBankGoldMyNameActionBankDepositGoldPostRes, error)
	// ActionDepositBankMyNameActionBankDepositPost implements action_deposit_bank_my__name__action_bank_deposit_post operation.
	//
	// Deposit an item in a bank on the character's map.
	//
	// POST /my/{name}/action/bank/deposit
	ActionDepositBankMyNameActionBankDepositPost(ctx context.Context, req *SimpleItemSchema, params ActionDepositBankMyNameActionBankDepositPostParams) (ActionDepositBankMyNameActionBankDepositPostRes, error)
	// ActionEquipItemMyNameActionEquipPost implements action_equip_item_my__name__action_equip_post operation.
	//
	// Equip an item on your character.
	//
	// POST /my/{name}/action/equip
	ActionEquipItemMyNameActionEquipPost(ctx context.Context, req *EquipSchema, params ActionEquipItemMyNameActionEquipPostParams) (ActionEquipItemMyNameActionEquipPostRes, error)
	// ActionFightMyNameActionFightPost implements action_fight_my__name__action_fight_post operation.
	//
	// Start a fight against a monster on the character's map.
	//
	// POST /my/{name}/action/fight
	ActionFightMyNameActionFightPost(ctx context.Context, params ActionFightMyNameActionFightPostParams) (ActionFightMyNameActionFightPostRes, error)
	// ActionGatheringMyNameActionGatheringPost implements action_gathering_my__name__action_gathering_post operation.
	//
	// Harvest a resource on the character's map.
	//
	// POST /my/{name}/action/gathering
	ActionGatheringMyNameActionGatheringPost(ctx context.Context, params ActionGatheringMyNameActionGatheringPostParams) (ActionGatheringMyNameActionGatheringPostRes, error)
	// ActionGeBuyItemMyNameActionGeBuyPost implements action_ge_buy_item_my__name__action_ge_buy_post operation.
	//
	// Buy an item at the Grand Exchange on the character's map.
	//
	// POST /my/{name}/action/ge/buy
	ActionGeBuyItemMyNameActionGeBuyPost(ctx context.Context, req *GETransactionItemSchema, params ActionGeBuyItemMyNameActionGeBuyPostParams) (ActionGeBuyItemMyNameActionGeBuyPostRes, error)
	// ActionGeSellItemMyNameActionGeSellPost implements action_ge_sell_item_my__name__action_ge_sell_post operation.
	//
	// Sell an item at the Grand Exchange on the character's map.
	//
	// POST /my/{name}/action/ge/sell
	ActionGeSellItemMyNameActionGeSellPost(ctx context.Context, req *GETransactionItemSchema, params ActionGeSellItemMyNameActionGeSellPostParams) (ActionGeSellItemMyNameActionGeSellPostRes, error)
	// ActionMoveMyNameActionMovePost implements action_move_my__name__action_move_post operation.
	//
	// Moves a character on the map using the map's X and Y position.
	//
	// POST /my/{name}/action/move
	ActionMoveMyNameActionMovePost(ctx context.Context, req *DestinationSchema, params ActionMoveMyNameActionMovePostParams) (ActionMoveMyNameActionMovePostRes, error)
	// ActionRecyclingMyNameActionRecyclingPost implements action_recycling_my__name__action_recycling_post operation.
	//
	// Recyling an item. The character must be on a map with a workshop (only for equipments and weapons).
	//
	// POST /my/{name}/action/recycling
	ActionRecyclingMyNameActionRecyclingPost(ctx context.Context, req *RecyclingSchema, params ActionRecyclingMyNameActionRecyclingPostParams) (ActionRecyclingMyNameActionRecyclingPostRes, error)
	// ActionTaskExchangeMyNameActionTaskExchangePost implements action_task_exchange_my__name__action_task_exchange_post operation.
	//
	// Exchange 3 tasks coins for a random reward. Rewards are exclusive resources for crafting  items.
	//
	// POST /my/{name}/action/task/exchange
	ActionTaskExchangeMyNameActionTaskExchangePost(ctx context.Context, params ActionTaskExchangeMyNameActionTaskExchangePostParams) (ActionTaskExchangeMyNameActionTaskExchangePostRes, error)
	// ActionUnequipItemMyNameActionUnequipPost implements action_unequip_item_my__name__action_unequip_post operation.
	//
	// Unequip an item on your character.
	//
	// POST /my/{name}/action/unequip
	ActionUnequipItemMyNameActionUnequipPost(ctx context.Context, req *UnequipSchema, params ActionUnequipItemMyNameActionUnequipPostParams) (ActionUnequipItemMyNameActionUnequipPostRes, error)
	// ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPost implements action_withdraw_bank_gold_my__name__action_bank_withdraw_gold_post operation.
	//
	// Withdraw gold from your bank.
	//
	// POST /my/{name}/action/bank/withdraw/gold
	ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPost(ctx context.Context, req *DepositWithdrawGoldSchema, params ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostParams) (ActionWithdrawBankGoldMyNameActionBankWithdrawGoldPostRes, error)
	// ActionWithdrawBankMyNameActionBankWithdrawPost implements action_withdraw_bank_my__name__action_bank_withdraw_post operation.
	//
	// Take an item from your bank and put it in the character's inventory.
	//
	// POST /my/{name}/action/bank/withdraw
	ActionWithdrawBankMyNameActionBankWithdrawPost(ctx context.Context, req *SimpleItemSchema, params ActionWithdrawBankMyNameActionBankWithdrawPostParams) (ActionWithdrawBankMyNameActionBankWithdrawPostRes, error)
	// ChangePasswordMyChangePasswordPost implements change_password_my_change_password_post operation.
	//
	// Change your account password. Changing the password reset the account token.
	//
	// POST /my/change_password
	ChangePasswordMyChangePasswordPost(ctx context.Context, req *ChangePassword) (ChangePasswordMyChangePasswordPostRes, error)
	// CreateAccountAccountsCreatePost implements create_account_accounts_create_post operation.
	//
	// Create an account.
	//
	// POST /accounts/create
	CreateAccountAccountsCreatePost(ctx context.Context, req *AddAccountSchema) (CreateAccountAccountsCreatePostRes, error)
	// CreateCharacterCharactersCreatePost implements create_character_characters_create_post operation.
	//
	// Create new character on your account. You can create up to 5 characters.
	//
	// POST /characters/create
	CreateCharacterCharactersCreatePost(ctx context.Context, req *AddCharacterSchema) (CreateCharacterCharactersCreatePostRes, error)
	// GenerateTokenTokenPost implements generate_token_token__post operation.
	//
	// Use your account as HTTPBasic Auth to generate your token to use the API. You can also generate
	// your token directly on the website.
	//
	// POST /token/
	GenerateTokenTokenPost(ctx context.Context) (GenerateTokenTokenPostRes, error)
	// GetAllCharactersCharactersGet implements get_all_characters_characters__get operation.
	//
	// Fetch characters details.
	//
	// GET /characters/
	GetAllCharactersCharactersGet(ctx context.Context, params GetAllCharactersCharactersGetParams) (GetAllCharactersCharactersGetRes, error)
	// GetAllCharactersLogsMyLogsGet implements get_all_characters_logs_my_logs_get operation.
	//
	// History of the last 100 actions of all your characters.
	//
	// GET /my/logs
	GetAllCharactersLogsMyLogsGet(ctx context.Context, params GetAllCharactersLogsMyLogsGetParams) (GetAllCharactersLogsMyLogsGetRes, error)
	// GetAllEventsEventsGet implements get_all_events_events__get operation.
	//
	// Fetch events details.
	//
	// GET /events/
	GetAllEventsEventsGet(ctx context.Context, params GetAllEventsEventsGetParams) (GetAllEventsEventsGetRes, error)
	// GetAllGeItemsGeGet implements get_all_ge_items_ge__get operation.
	//
	// Fetch Grand Exchange items details.
	//
	// GET /ge/
	GetAllGeItemsGeGet(ctx context.Context, params GetAllGeItemsGeGetParams) (GetAllGeItemsGeGetRes, error)
	// GetAllItemsItemsGet implements get_all_items_items__get operation.
	//
	// Fetch items details.
	//
	// GET /items/
	GetAllItemsItemsGet(ctx context.Context, params GetAllItemsItemsGetParams) (GetAllItemsItemsGetRes, error)
	// GetAllMapsMapsGet implements get_all_maps_maps__get operation.
	//
	// Fetch maps details.
	//
	// GET /maps/
	GetAllMapsMapsGet(ctx context.Context, params GetAllMapsMapsGetParams) (GetAllMapsMapsGetRes, error)
	// GetAllMonstersMonstersGet implements get_all_monsters_monsters__get operation.
	//
	// Fetch monsters details.
	//
	// GET /monsters/
	GetAllMonstersMonstersGet(ctx context.Context, params GetAllMonstersMonstersGetParams) (GetAllMonstersMonstersGetRes, error)
	// GetAllResourcesResourcesGet implements get_all_resources_resources__get operation.
	//
	// Fetch resources details.
	//
	// GET /resources/
	GetAllResourcesResourcesGet(ctx context.Context, params GetAllResourcesResourcesGetParams) (GetAllResourcesResourcesGetRes, error)
	// GetBankGoldsMyBankGoldGet implements get_bank_golds_my_bank_gold_get operation.
	//
	// Fetch golds in your bank.
	//
	// GET /my/bank/gold
	GetBankGoldsMyBankGoldGet(ctx context.Context) (*GoldBankResponseSchema, error)
	// GetBankItemsMyBankItemsGet implements get_bank_items_my_bank_items_get operation.
	//
	// Fetch all items in your bank.
	//
	// GET /my/bank/items
	GetBankItemsMyBankItemsGet(ctx context.Context, params GetBankItemsMyBankItemsGetParams) (GetBankItemsMyBankItemsGetRes, error)
	// GetCharacterCharactersNameGet implements get_character_characters__name__get operation.
	//
	// Retrieve the details of a character.
	//
	// GET /characters/{name}
	GetCharacterCharactersNameGet(ctx context.Context, params GetCharacterCharactersNameGetParams) (GetCharacterCharactersNameGetRes, error)
	// GetCharacterLogsMyNameLogsGet implements get_character_logs_my__name__logs_get operation.
	//
	// History of your character's last 100 actions.
	//
	// GET /my/{name}/logs
	GetCharacterLogsMyNameLogsGet(ctx context.Context, params GetCharacterLogsMyNameLogsGetParams) (GetCharacterLogsMyNameLogsGetRes, error)
	// GetGeItemGeCodeGet implements get_ge_item_ge__code__get operation.
	//
	// Retrieve the details of a Grand Exchange item.
	//
	// GET /ge/{code}
	GetGeItemGeCodeGet(ctx context.Context, params GetGeItemGeCodeGetParams) (GetGeItemGeCodeGetRes, error)
	// GetItemItemsCodeGet implements get_item_items__code__get operation.
	//
	// Retrieve the details of a item.
	//
	// GET /items/{code}
	GetItemItemsCodeGet(ctx context.Context, params GetItemItemsCodeGetParams) (GetItemItemsCodeGetRes, error)
	// GetMapMapsXYGet implements get_map_maps__x___y__get operation.
	//
	// Retrieve the details of a map.
	//
	// GET /maps/{x}/{y}
	GetMapMapsXYGet(ctx context.Context, params GetMapMapsXYGetParams) (GetMapMapsXYGetRes, error)
	// GetMonsterMonstersCodeGet implements get_monster_monsters__code__get operation.
	//
	// Retrieve the details of a monster.
	//
	// GET /monsters/{code}
	GetMonsterMonstersCodeGet(ctx context.Context, params GetMonsterMonstersCodeGetParams) (GetMonsterMonstersCodeGetRes, error)
	// GetMyCharactersMyCharactersGet implements get_my_characters_my_characters_get operation.
	//
	// List of your characters.
	//
	// GET /my/characters
	GetMyCharactersMyCharactersGet(ctx context.Context) (GetMyCharactersMyCharactersGetRes, error)
	// GetResourcesResourcesCodeGet implements get_resources_resources__code__get operation.
	//
	// Retrieve the details of a resource.
	//
	// GET /resources/{code}
	GetResourcesResourcesCodeGet(ctx context.Context, params GetResourcesResourcesCodeGetParams) (GetResourcesResourcesCodeGetRes, error)
	// GetStatusGet implements get_status__get operation.
	//
	// Return the status of the game server.
	//
	// GET /
	GetStatusGet(ctx context.Context) (*StatusResponseSchema, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
